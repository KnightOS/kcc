                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.1.9Ga Sun Jan 16 17:31:33 2000
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module _strcpy
                              7 ;--------------------------------------------------------
                              8 ; publics variables in this module
                              9 ;--------------------------------------------------------
                             10 	.globl _strcpy_PARM_2
                             11 	.globl _strcpy
                             12 ;--------------------------------------------------------
                             13 ; special function registers
                             14 ;--------------------------------------------------------
                             15 ;--------------------------------------------------------
                             16 ; special function bits 
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; internal ram data
                             20 ;--------------------------------------------------------
                             21 	.area	DSEG    (DATA)
   0000                      22 _strcpy_sloc0_1_0:
   0000                      23 	.ds	0x0003
                             24 ;--------------------------------------------------------
                             25 ; overlayable items in internal ram 
                             26 ;--------------------------------------------------------
                             27 	.area	OSEG	(OVR,DATA)
                             28 ;--------------------------------------------------------
                             29 ; indirectly addressable internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area	ISEG    (DATA)
                             32 ;--------------------------------------------------------
                             33 ; bit data
                             34 ;--------------------------------------------------------
                             35 	.area	BSEG    (BIT)
                             36 ;--------------------------------------------------------
                             37 ; external ram data
                             38 ;--------------------------------------------------------
                             39 	.area	XSEG    (XDATA)
   0000                      40 _strcpy_PARM_2:
   0000                      41 	.ds	0x0003
   0003                      42 _strcpy_d_1_1:
   0003                      43 	.ds	0x0003
                             44 ;--------------------------------------------------------
                             45 ; global & static initialisations
                             46 ;--------------------------------------------------------
                             47 	.area GSINIT (CODE)
                             48 ;--------------------------------------------------------
                             49 ; code
                             50 ;--------------------------------------------------------
                             51 	.area CSEG (CODE)
                    0000     52 	G$strcpy$0$0 ==.
                             53 ;	_strcpy.c 27
                             54 ;	-----------------------------------------
                             55 ;	 function strcpy
                             56 ;	-----------------------------------------
   0000                      57 _strcpy:
                    0002     58 	ar2 = 0x02
                    0003     59 	ar3 = 0x03
                    0004     60 	ar4 = 0x04
                    0005     61 	ar5 = 0x05
                    0006     62 	ar6 = 0x06
                    0007     63 	ar7 = 0x07
                    0000     64 	ar0 = 0x00
                    0001     65 	ar1 = 0x01
                             66 ;	_strcpy.c 35
   0000 C0 F0                67 	push	b
   0002 C0 83                68 	push	dph
   0004 C0 82                69 	push	dpl
   0006 90s00r03             70 	mov	dptr,#_strcpy_d_1_1
   0009 D0 E0                71 	pop	acc
   000B F0                   72 	movx	@dptr,a
   000C D0 E0                73 	pop	acc
   000E A3                   74 	inc	dptr
   000F F0                   75 	movx	@dptr,a
   0010 D0 E0                76 	pop	acc
   0012 A3                   77 	inc	dptr
   0013 F0                   78 	movx	@dptr,a
                             79 ;	_strcpy.c 31
   0014 90s00r03             80 	mov	dptr,#_strcpy_d_1_1
   0017 E0                   81 	movx	a,@dptr
   0018 FA                   82 	mov	r2,a
   0019 A3                   83 	inc	dptr
   001A E0                   84 	movx	a,@dptr
   001B FB                   85 	mov	r3,a
   001C A3                   86 	inc	dptr
   001D E0                   87 	movx	a,@dptr
   001E FC                   88 	mov	r4,a
                             89 ;	_strcpy.c 33
   001F 90s00r00             90 	mov	dptr,#_strcpy_PARM_2
   0022 E0                   91 	movx	a,@dptr
   0023 F5*00                92 	mov	_strcpy_sloc0_1_0,a
   0025 A3                   93 	inc	dptr
   0026 E0                   94 	movx	a,@dptr
   0027 F5*01                95 	mov	(_strcpy_sloc0_1_0 + 1),a
   0029 A3                   96 	inc	dptr
   002A E0                   97 	movx	a,@dptr
   002B F5*02                98 	mov	(_strcpy_sloc0_1_0 + 2),a
   002D                      99 00101$:
   002D 8A 00               100 	mov	ar0,r2
   002F 8B 01               101 	mov	ar1,r3
   0031 8C 05               102 	mov	ar5,r4
   0033 0A                  103 	inc	r2
   0034 BA 00 01            104 	cjne	r2,#0x00,00108$
   0037 0B                  105 	inc	r3
   0038                     106 00108$:
   0038 85*00 82            107 	mov	dpl,_strcpy_sloc0_1_0
   003B 85*01 83            108 	mov	dph,(_strcpy_sloc0_1_0 + 1)
   003E 85*02 F0            109 	mov	b,(_strcpy_sloc0_1_0 + 2)
   0041 05*00               110 	inc	_strcpy_sloc0_1_0
   0043 E4                  111 	clr	a
   0044 B5*00 02            112 	cjne	a,_strcpy_sloc0_1_0,00109$
   0047 05*01               113 	inc	(_strcpy_sloc0_1_0 + 1)
   0049                     114 00109$:
   0049 12s00r00            115 	lcall	__gptrget
                            116 ; Peephole 190   removed redundant mov
                            117 ; Peephole 191   removed redundant mov
   004C FE                  118 	mov  r6,a
   004D 88 82               119 	mov  dpl,r0
   004F 89 83               120 	mov  dph,r1
   0051 8D F0               121 	mov  b,r5
   0053 12s00r00            122 	lcall __gptrput
                            123 ; Peephole 109   removed ljmp by inverse jump logic
   0056 70 D5               124 	jnz  00101$
   0058                     125 00110$:
                            126 ;	_strcpy.c 35
   0058 90s00r03            127 	mov	dptr,#_strcpy_d_1_1
   005B E0                  128 	movx	a,@dptr
   005C FA                  129 	mov	r2,a
   005D A3                  130 	inc	dptr
   005E E0                  131 	movx	a,@dptr
   005F FB                  132 	mov	r3,a
   0060 A3                  133 	inc	dptr
   0061 E0                  134 	movx	a,@dptr
   0062 FC                  135 	mov	r4,a
   0063 8A 82               136 	mov	dpl,r2
   0065 8B 83               137 	mov	dph,r3
   0067 8C F0               138 	mov	b,r4
   0069                     139 00104$:
                    0069    140 	C$_strcpy.c$36$1$1 ==.
                    0069    141 	XG$strcpy$0$0 ==.
   0069 22                  142 	ret
                            143 	.area	CSEG    (CODE)
