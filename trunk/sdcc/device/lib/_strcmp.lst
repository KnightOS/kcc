                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.1.9Ga Sun Jan 16 17:31:33 2000
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module _strcmp
                              7 ;--------------------------------------------------------
                              8 ; publics variables in this module
                              9 ;--------------------------------------------------------
                             10 	.globl _strcmp_PARM_2
                             11 	.globl _strcmp
                             12 ;--------------------------------------------------------
                             13 ; special function registers
                             14 ;--------------------------------------------------------
                             15 ;--------------------------------------------------------
                             16 ; special function bits 
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; internal ram data
                             20 ;--------------------------------------------------------
                             21 	.area	DSEG    (DATA)
   0000                      22 _strcmp_sloc0_1_0:
   0000                      23 	.ds	0x0001
   0001                      24 _strcmp_sloc1_1_0:
   0001                      25 	.ds	0x0003
                             26 ;--------------------------------------------------------
                             27 ; overlayable items in internal ram 
                             28 ;--------------------------------------------------------
                             29 	.area	OSEG	(OVR,DATA)
                             30 ;--------------------------------------------------------
                             31 ; indirectly addressable internal ram data
                             32 ;--------------------------------------------------------
                             33 	.area	ISEG    (DATA)
                             34 ;--------------------------------------------------------
                             35 ; bit data
                             36 ;--------------------------------------------------------
                             37 	.area	BSEG    (BIT)
                             38 ;--------------------------------------------------------
                             39 ; external ram data
                             40 ;--------------------------------------------------------
                             41 	.area	XSEG    (XDATA)
   0000                      42 _strcmp_PARM_2:
   0000                      43 	.ds	0x0003
   0003                      44 _strcmp_src_1_1:
   0003                      45 	.ds	0x0003
   0006                      46 _strcmp_ret_1_1:
   0006                      47 	.ds	0x0002
                             48 ;--------------------------------------------------------
                             49 ; global & static initialisations
                             50 ;--------------------------------------------------------
                             51 	.area GSINIT (CODE)
                             52 ;--------------------------------------------------------
                             53 ; code
                             54 ;--------------------------------------------------------
                             55 	.area CSEG (CODE)
                    0000     56 	G$strcmp$0$0 ==.
                             57 ;	_strcmp.c 27
                             58 ;	-----------------------------------------
                             59 ;	 function strcmp
                             60 ;	-----------------------------------------
   0000                      61 _strcmp:
                    0002     62 	ar2 = 0x02
                    0003     63 	ar3 = 0x03
                    0004     64 	ar4 = 0x04
                    0005     65 	ar5 = 0x05
                    0006     66 	ar6 = 0x06
                    0007     67 	ar7 = 0x07
                    0000     68 	ar0 = 0x00
                    0001     69 	ar1 = 0x01
                             70 ;	_strcmp.c 42
   0000 C0 F0                71 	push	b
   0002 C0 83                72 	push	dph
   0004 C0 82                73 	push	dpl
   0006 90s00r03             74 	mov	dptr,#_strcmp_src_1_1
   0009 D0 E0                75 	pop	acc
   000B F0                   76 	movx	@dptr,a
   000C D0 E0                77 	pop	acc
   000E A3                   78 	inc	dptr
   000F F0                   79 	movx	@dptr,a
   0010 D0 E0                80 	pop	acc
   0012 A3                   81 	inc	dptr
   0013 F0                   82 	movx	@dptr,a
                             83 ;	_strcmp.c 34
   0014 90s00r03             84 	mov	dptr,#_strcmp_src_1_1
   0017 E0                   85 	movx	a,@dptr
   0018 FA                   86 	mov	r2,a
   0019 A3                   87 	inc	dptr
   001A E0                   88 	movx	a,@dptr
   001B FB                   89 	mov	r3,a
   001C A3                   90 	inc	dptr
   001D E0                   91 	movx	a,@dptr
   001E FC                   92 	mov	r4,a
   001F 90s00r00             93 	mov	dptr,#_strcmp_PARM_2
   0022 E0                   94 	movx	a,@dptr
   0023 F5*01                95 	mov	_strcmp_sloc1_1_0,a
   0025 A3                   96 	inc	dptr
   0026 E0                   97 	movx	a,@dptr
   0027 F5*02                98 	mov	(_strcmp_sloc1_1_0 + 1),a
   0029 A3                   99 	inc	dptr
   002A E0                  100 	movx	a,@dptr
   002B F5*03               101 	mov	(_strcmp_sloc1_1_0 + 2),a
   002D                     102 00102$:
   002D 85*01 82            103 	mov	dpl,_strcmp_sloc1_1_0
   0030 85*02 83            104 	mov	dph,(_strcmp_sloc1_1_0 + 1)
   0033 85*03 F0            105 	mov	b,(_strcmp_sloc1_1_0 + 2)
   0036 12s00r00            106 	lcall	__gptrget
   0039 F5*00               107 	mov	_strcmp_sloc0_1_0,a
   003B 8A 82               108 	mov	dpl,r2
   003D 8B 83               109 	mov	dph,r3
   003F 8C F0               110 	mov	b,r4
   0041 12s00r00            111 	lcall	__gptrget
                            112 ; Peephole 106   removed redundant mov 
   0044 F9                  113 	mov  r1,a
   0045 C3                  114 	clr  c
   0046 95*00               115 	subb	a,_strcmp_sloc0_1_0
                            116 ; Peephole 166   removed redundant mov
   0048 F9                  117 	mov  r1,a
   0049 89 00               118 	mov  ar0,r1 
   004B 33                  119 	rlc	a
   004C 95 E0               120 	subb	a,acc
   004E FD                  121 	mov	r5,a
   004F 90s00r06            122 	mov	dptr,#_strcmp_ret_1_1
   0052 E8                  123 	mov	a,r0
   0053 F0                  124 	movx	@dptr,a
   0054 A3                  125 	inc	dptr
   0055 ED                  126 	mov	a,r5
   0056 F0                  127 	movx	@dptr,a
   0057 E9                  128 	mov	a,r1
                            129 ; Peephole 109   removed ljmp by inverse jump logic
   0058 70 1E               130 	jnz  00104$
   005A                     131 00117$:
   005A E5*00               132 	mov	a,_strcmp_sloc0_1_0
                            133 ; Peephole 110   removed ljmp by inverse jump logic
   005C 60 1A               134 	jz  00104$
   005E                     135 00118$:
                            136 ;	_strcmp.c 35
   005E 0A                  137 	inc	r2
   005F BA 00 01            138 	cjne	r2,#0x00,00119$
   0062 0B                  139 	inc	r3
   0063                     140 00119$:
   0063 90s00r03            141 	mov	dptr,#_strcmp_src_1_1
   0066 EA                  142 	mov	a,r2
   0067 F0                  143 	movx	@dptr,a
   0068 A3                  144 	inc	dptr
   0069 EB                  145 	mov	a,r3
   006A F0                  146 	movx	@dptr,a
   006B A3                  147 	inc	dptr
   006C EC                  148 	mov	a,r4
   006D F0                  149 	movx	@dptr,a
   006E 05*01               150 	inc	_strcmp_sloc1_1_0
   0070 E4                  151 	clr	a
   0071 B5*01 02            152 	cjne	a,_strcmp_sloc1_1_0,00120$
   0074 05*02               153 	inc	(_strcmp_sloc1_1_0 + 1)
   0076                     154 00120$:
                            155 ; Peephole 132   changed ljmp to sjmp
   0076 80 B5               156 	sjmp 00102$
   0078                     157 00104$:
                            158 ;	_strcmp.c 37
   0078 90s00r03            159 	mov	dptr,#_strcmp_src_1_1
   007B EA                  160 	mov	a,r2
   007C F0                  161 	movx	@dptr,a
   007D A3                  162 	inc	dptr
   007E EB                  163 	mov	a,r3
   007F F0                  164 	movx	@dptr,a
   0080 A3                  165 	inc	dptr
   0081 EC                  166 	mov	a,r4
   0082 F0                  167 	movx	@dptr,a
   0083 ED                  168 	mov	a,r5
                            169 ; Peephole 111   removed ljmp by inverse jump logic
   0084 30 E7 0A            170 	jnb  acc.7,00108$
   0087                     171 00121$:
                            172 ;	_strcmp.c 38
   0087 90s00r06            173 	mov	dptr,#_strcmp_ret_1_1
                            174 ; Peephole 101   removed redundant mov
   008A 74 FF               175 	mov  a,#0xff
   008C F0                  176 	movx @dptr,a
   008D A3                  177 	inc  dptr
   008E F0                  178 	movx @dptr,a
                            179 ; Peephole 132   changed ljmp to sjmp
   008F 80 1A               180 	sjmp 00109$
   0091                     181 00108$:
                            182 ;	_strcmp.c 39
   0091 C3                  183 	clr	c
                            184 ; Peephole 180   changed mov to clr
   0092 E4                  185 	clr  a
   0093 98                  186 	subb	a,r0
                            187 ; Peephole 159   avoided xrl during execution
   0094 74 80               188 	mov  a,#(0x00 ^ 0x80)
   0096 8D F0               189 	mov	b,r5
   0098 63 F0 80            190 	xrl	b,#0x80
   009B 95 F0               191 	subb	a,b
                            192 ; Peephole 108   removed ljmp by inverse jump logic
   009D 50 0C               193 	jnc  00109$
   009F                     194 00122$:
                            195 ;	_strcmp.c 40
   009F 90s00r06            196 	mov	dptr,#_strcmp_ret_1_1
   00A2 E4                  197 	clr	a
   00A3 A3                  198 	inc	dptr
   00A4 F0                  199 	movx	@dptr,a
   00A5 12s00r00            200 	lcall	__decdptr
   00A8 74 01               201 	mov	a,#0x01
   00AA F0                  202 	movx	@dptr,a
   00AB                     203 00109$:
                            204 ;	_strcmp.c 42
   00AB 90s00r06            205 	mov	dptr,#_strcmp_ret_1_1
   00AE E0                  206 	movx	a,@dptr
   00AF FA                  207 	mov	r2,a
   00B0 A3                  208 	inc	dptr
   00B1 E0                  209 	movx	a,@dptr
   00B2 FB                  210 	mov	r3,a
   00B3 8A 82               211 	mov	dpl,r2
   00B5 8B 83               212 	mov	dph,r3
   00B7                     213 00110$:
                    00B7    214 	C$_strcmp.c$43$1$1 ==.
                    00B7    215 	XG$strcmp$0$0 ==.
   00B7 22                  216 	ret
                            217 	.area	CSEG    (CODE)
