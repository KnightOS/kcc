//
// Register Declarations for Microchip 16F913 Processor
//
//
// This header file was automatically generated by:
//
//      inc2h.pl V4850
//
//      Copyright (c) 2002, Kevin L. Pauba, All Rights Reserved
//
//      SDCC is licensed under the GNU Public license (GPL) v2.  Note that
//      this license covers the code to the compiler and other executables,
//      but explicitly does not cover any code or objects generated by sdcc.
//
//      For pic device libraries and header files which are derived from
//      Microchip header (.inc) and linker script (.lkr) files Microchip
//      requires that "The header files should state that they are only to be
//      used with authentic Microchip devices" which makes them incompatible
//      with the GPL. Pic device libraries and header files are located at
//      non-free/lib and non-free/include directories respectively.
//      Sdcc should be run with the --use-non-free command line option in
//      order to include non-free header files and libraries.
//
//      See http://sdcc.sourceforge.net/ for the latest information on sdcc.
//
//
#ifndef P16F913_H
#define P16F913_H

//
// Register addresses.
//
#define INDF_ADDR       0x0000
#define TMR0_ADDR       0x0001
#define PCL_ADDR        0x0002
#define STATUS_ADDR     0x0003
#define FSR_ADDR        0x0004
#define PORTA_ADDR      0x0005
#define PORTB_ADDR      0x0006
#define PORTC_ADDR      0x0007
#define PORTE_ADDR      0x0009
#define PCLATH_ADDR     0x000A
#define INTCON_ADDR     0x000B
#define PIR1_ADDR       0x000C
#define PIR2_ADDR       0x000D
#define TMR1L_ADDR      0x000E
#define TMR1H_ADDR      0x000F
#define T1CON_ADDR      0x0010
#define TMR2_ADDR       0x0011
#define T2CON_ADDR      0x0012
#define SSPBUF_ADDR     0x0013
#define SSPCON_ADDR     0x0014
#define CCPR1L_ADDR     0x0015
#define CCPR1H_ADDR     0x0016
#define CCP1CON_ADDR    0x0017
#define RCSTA_ADDR      0x0018
#define TXREG_ADDR      0x0019
#define RCREG_ADDR      0x001A
#define ADRESH_ADDR     0x001E
#define ADCON0_ADDR     0x001F
#define OPTION_REG_ADDR 0x0081
#define TRISA_ADDR      0x0085
#define TRISB_ADDR      0x0086
#define TRISC_ADDR      0x0087
#define TRISE_ADDR      0x0089
#define PIE1_ADDR       0x008C
#define PIE2_ADDR       0x008D
#define PCON_ADDR       0x008E
#define OSCCON_ADDR     0x008F
#define OSCTUNE_ADDR    0x0090
#define ANSEL_ADDR      0x0091
#define PR2_ADDR        0x0092
#define SSPADD_ADDR     0x0093
#define SSPSTAT_ADDR    0x0094
#define WPUB_ADDR       0x0095
#define WPU_ADDR        0x0095
#define IOCB_ADDR       0x0096
#define IOC_ADDR        0x0096
#define CMCON1_ADDR     0x0097
#define TXSTA_ADDR      0x0098
#define SPBRG_ADDR      0x0099
#define CMCON0_ADDR     0x009C
#define VRCON_ADDR      0x009D
#define ADRESL_ADDR     0x009E
#define ADCON1_ADDR     0x009F
#define WDTCON_ADDR     0x0105
#define LCDCON_ADDR     0x0107
#define LCDPS_ADDR      0x0108
#define LVDCON_ADDR     0x0109
#define EEDATL_ADDR     0x010C
#define EEDATA_ADDR     0x010C
#define EEADRL_ADDR     0x010D
#define EEADR_ADDR      0x010D
#define EEDATH_ADDR     0x010E
#define EEADRH_ADDR     0x010F
#define LCDDATA0_ADDR   0x0110
#define LCDDATA1_ADDR   0x0111
#define LCDDATA3_ADDR   0x0113
#define LCDDATA4_ADDR   0x0114
#define LCDDATA6_ADDR   0x0116
#define LCDDATA7_ADDR   0x0117
#define LCDDATA9_ADDR   0x0119
#define LCDDATA10_ADDR  0x011A
#define LCDSE0_ADDR     0x011C
#define LCDSE1_ADDR     0x011D
#define EECON1_ADDR     0x018C
#define EECON2_ADDR     0x018D

//
// Memory organization.
//



//         LIST
// P16F913.INC  Standard Header File, Version 1.04    Microchip Technology, Inc.
//         NOLIST

// This header file defines configurations, registers, and other useful bits of
// information for the PIC16F913 microcontroller.
// These names are taken to match the data sheets as closely as possible.

// Note that the processor must be selected before this file is
// included.  The processor may be selected the following ways:

//       1. Command line switch:
//               C:\ MPASM MYFILE.ASM /PIC16F913
//       2. LIST directive in the source file
//               LIST   P=PIC16F913
//       3. Processor Type entry in the MPASM full-screen interface

//==========================================================================
//
//       Revision History
//
//==========================================================================

//Rev:   Date:    Reason:
//1.00   06/11/04 Initial Release
//1.01  06/18/04 Corrected typo in 'bad ram' section
//1.02  08/16/04 Added EECON2
//1.03  05/20/05 Removed EECON2 from badram
//1.04   10/05/05 Correct names of bits in ANSEL, Add EEADRH and EEADRL bit
//1.05   10/30/06 Added Alias of go_done, go
//                           definitions
//1.06   02/26/07 Added Alias of EEADR and EEDATA

//==========================================================================
//
//       Verify Processor
//
//==========================================================================

//        IFNDEF __16F913
//            MESSG "Processor-header file mismatch.  Verify selected processor."
//         ENDIF

//==========================================================================
//
//       Register Definitions
//
//==========================================================================

#define W                    0x0000
#define F                    0x0001

//----- Register Files------------------------------------------------------

extern __sfr  __at (INDF_ADDR)                    INDF;
extern __sfr  __at (TMR0_ADDR)                    TMR0;
extern __sfr  __at (PCL_ADDR)                     PCL;
extern __sfr  __at (STATUS_ADDR)                  STATUS;
extern __sfr  __at (FSR_ADDR)                     FSR;
extern __sfr  __at (PORTA_ADDR)                   PORTA;
extern __sfr  __at (PORTB_ADDR)                   PORTB;
extern __sfr  __at (PORTC_ADDR)                   PORTC;
extern __sfr  __at (PORTE_ADDR)                   PORTE;
extern __sfr  __at (PCLATH_ADDR)                  PCLATH;
extern __sfr  __at (INTCON_ADDR)                  INTCON;
extern __sfr  __at (PIR1_ADDR)                    PIR1;
extern __sfr  __at (PIR2_ADDR)                    PIR2;
extern __sfr  __at (TMR1L_ADDR)                   TMR1L;
extern __sfr  __at (TMR1H_ADDR)                   TMR1H;
extern __sfr  __at (T1CON_ADDR)                   T1CON;
extern __sfr  __at (TMR2_ADDR)                    TMR2;
extern __sfr  __at (T2CON_ADDR)                   T2CON;
extern __sfr  __at (SSPBUF_ADDR)                  SSPBUF;
extern __sfr  __at (SSPCON_ADDR)                  SSPCON;
extern __sfr  __at (CCPR1L_ADDR)                  CCPR1L;
extern __sfr  __at (CCPR1H_ADDR)                  CCPR1H;
extern __sfr  __at (CCP1CON_ADDR)                 CCP1CON;
extern __sfr  __at (RCSTA_ADDR)                   RCSTA;
extern __sfr  __at (TXREG_ADDR)                   TXREG;
extern __sfr  __at (RCREG_ADDR)                   RCREG;
extern __sfr  __at (ADRESH_ADDR)                  ADRESH;
extern __sfr  __at (ADCON0_ADDR)                  ADCON0;

extern __sfr  __at (OPTION_REG_ADDR)              OPTION_REG;
extern __sfr  __at (TRISA_ADDR)                   TRISA;
extern __sfr  __at (TRISB_ADDR)                   TRISB;
extern __sfr  __at (TRISC_ADDR)                   TRISC;
extern __sfr  __at (TRISE_ADDR)                   TRISE;
extern __sfr  __at (PIE1_ADDR)                    PIE1;
extern __sfr  __at (PIE2_ADDR)                    PIE2;
extern __sfr  __at (PCON_ADDR)                    PCON;
extern __sfr  __at (OSCCON_ADDR)                  OSCCON;
extern __sfr  __at (OSCTUNE_ADDR)                 OSCTUNE;
extern __sfr  __at (ANSEL_ADDR)                   ANSEL;
extern __sfr  __at (PR2_ADDR)                     PR2;
extern __sfr  __at (SSPADD_ADDR)                  SSPADD;
extern __sfr  __at (SSPSTAT_ADDR)                 SSPSTAT;
extern __sfr  __at (WPUB_ADDR)                    WPUB;
extern __sfr  __at (WPU_ADDR)                     WPU;
extern __sfr  __at (IOCB_ADDR)                    IOCB;
extern __sfr  __at (IOC_ADDR)                     IOC;
extern __sfr  __at (CMCON1_ADDR)                  CMCON1;
extern __sfr  __at (TXSTA_ADDR)                   TXSTA;
extern __sfr  __at (SPBRG_ADDR)                   SPBRG;
extern __sfr  __at (CMCON0_ADDR)                  CMCON0;
extern __sfr  __at (VRCON_ADDR)                   VRCON;
extern __sfr  __at (ADRESL_ADDR)                  ADRESL;
extern __sfr  __at (ADCON1_ADDR)                  ADCON1;

extern __sfr  __at (WDTCON_ADDR)                  WDTCON;
extern __sfr  __at (LCDCON_ADDR)                  LCDCON;
extern __sfr  __at (LCDPS_ADDR)                   LCDPS;
extern __sfr  __at (LVDCON_ADDR)                  LVDCON;
extern __sfr  __at (EEDATL_ADDR)                  EEDATL;
extern __sfr  __at (EEDATA_ADDR)                  EEDATA;
extern __sfr  __at (EEADRL_ADDR)                  EEADRL;
extern __sfr  __at (EEADR_ADDR)                   EEADR;
extern __sfr  __at (EEDATH_ADDR)                  EEDATH;
extern __sfr  __at (EEADRH_ADDR)                  EEADRH;
extern __sfr  __at (LCDDATA0_ADDR)                LCDDATA0;
extern __sfr  __at (LCDDATA1_ADDR)                LCDDATA1;
extern __sfr  __at (LCDDATA3_ADDR)                LCDDATA3;
extern __sfr  __at (LCDDATA4_ADDR)                LCDDATA4;
extern __sfr  __at (LCDDATA6_ADDR)                LCDDATA6;
extern __sfr  __at (LCDDATA7_ADDR)                LCDDATA7;
extern __sfr  __at (LCDDATA9_ADDR)                LCDDATA9;
extern __sfr  __at (LCDDATA10_ADDR)               LCDDATA10;
extern __sfr  __at (LCDSE0_ADDR)                  LCDSE0;
extern __sfr  __at (LCDSE1_ADDR)                  LCDSE1;

extern __sfr  __at (EECON1_ADDR)                  EECON1;
extern __sfr  __at (EECON2_ADDR)                  EECON2;

//----- STATUS Bits --------------------------------------------------------


//----- INTCON Bits --------------------------------------------------------


//----- PIR1 Bits ----------------------------------------------------------


//----- PIR2 Bits ----------------------------------------------------------


//----- T1CON Bits ---------------------------------------------------------


//----- T2CON Bits ---------------------------------------------------------


//----- SSPCON Bits --------------------------------------------------------


//----- CCP1CON Bits -------------------------------------------------------


//----- RCSTA Bits ---------------------------------------------------------



//----- ADCON0 Bits --------------------------------------------------------


//----- OPTION_REG Bits -----------------------------------------------------


//----- PIE1 Bits ----------------------------------------------------------


//----- PIE2 Bits ----------------------------------------------------------


//----- PCON Bits ----------------------------------------------------------


//----- OSCCON Bits -------------------------------------------------------


//----- OSCTUNE Bits -------------------------------------------------------



//----- ANSEL Bits ---------------------------------------------------------



//----- SSPSTAT Bits -------------------------------------------------------



//----- WPUB Bits -------------------------------------------------------


//----- WPU Bits -------------------------------------------------------



//----- IOCB Bits -------------------------------------------------------



//----- IOC Bits -------------------------------------------------------



//----- CMCON1 Bits --------------------------------------------------------


//----- TXSTA Bits ---------------------------------------------------------



//----- CMCON0 Bits ---------------------------------------------------------


//----- VRCON Bits --------------------------------------------------------


//----- ADCON1 Bits --------------------------------------------------------


//----- WDTCON Bits --------------------------------------------------------


//----- LCDCON Bits --------------------------------------------------------


//----- LCDPS Bits ---------------------------------------------------------


//----- LVDCON Bits --------------------------------------------------------


//----- LCDDATA0 Bits -------------------------------------------------------



//----- LCDDATA1 Bits -------------------------------------------------------




//----- LCDDATA3 Bits -------------------------------------------------------



//----- LCDDATA4 Bits -------------------------------------------------------




//----- LCDDATA6 Bits -------------------------------------------------------



//----- LCDDATA7 Bits -------------------------------------------------------




//----- LCDDATA9 Bits -------------------------------------------------------



//----- LCDDATA10 Bits -------------------------------------------------------




//----- LCDSE0 Bits --------------------------------------------------------



//----- LCDSE1 Bits --------------------------------------------------------




//----- EECON1 Bits --------------------------------------------------------


//----- EEADRH Bits --------------------------------------------------------


//----- EEADRL Bits --------------------------------------------------------



//==========================================================================
//
//       RAM Definition
//
//==========================================================================

//         __MAXRAM H'1FF'
//         __BADRAM H'08', H'1B'-H'1D'
//         __BADRAM H'88', H'9A'-H'9B'
//         __BADRAM H'112', H'115', H'118', H'11B',H'11E'-H'11F'
//         __BADRAM H'185', H'187'-H'189', H'18E'-H'1EF'

//==========================================================================
//
//       Configuration Bits
//
//==========================================================================

#define _CONFIG              0x2007

//Configuration Byte 1 Options
#define _DEBUG_ON            0x2FFF
#define _DEBUG_OFF           0x3FFF
#define _FCMEN_ON            0x3FFF
#define _FCMEN_OFF           0x37FF
#define _IESO_ON             0x3FFF
#define _IESO_OFF            0x3BFF
#define _BOD_ON              0x3FFF
#define _BOD_NSLEEP          0x3EFF
#define _BOD_SBODEN          0x3DFF
#define _BOD_OFF             0x3CFF
#define _CPD_ON              0x3F7F
#define _CPD_OFF             0x3FFF
#define _CP_ON               0x3FBF
#define _CP_OFF              0x3FFF
#define _MCLRE_ON            0x3FFF
#define _MCLRE_OFF           0x3FDF
#define _PWRTE_ON            0x3FEF
#define _PWRTE_OFF           0x3FFF
#define _WDT_ON              0x3FFF
#define _WDT_OFF             0x3FF7
#define _LP_OSC              0x3FF8
#define _XT_OSC              0x3FF9
#define _HS_OSC              0x3FFA
#define _EC_OSC              0x3FFB
#define _INTRC_OSC_NOCLKOUT  0x3FFC
#define _INTRC_OSC_CLKOUT    0x3FFD
#define _EXTRC_OSC_NOCLKOUT  0x3FFE
#define _EXTRC_OSC_CLKOUT    0x3FFF
#define _INTOSCIO            0x3FFC
#define _INTOSC              0x3FFD
#define _EXTRCIO             0x3FFE
#define _EXTRC               0x3FFF


//         LIST

// ----- ADCON0 bits --------------------
typedef union {
  struct {
    unsigned char ADON:1;
    unsigned char NOT_DONE:1;
    unsigned char CHS0:1;
    unsigned char CHS1:1;
    unsigned char CHS2:1;
    unsigned char VCFG0:1;
    unsigned char VCFG1:1;
    unsigned char ADFM:1;
  };
  struct {
    unsigned char :1;
    unsigned char GO_DONE:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
  struct {
    unsigned char :1;
    unsigned char GO:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __ADCON0bits_t;
extern volatile __ADCON0bits_t __at(ADCON0_ADDR) ADCON0bits;

// ----- ADCON1 bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char ADCS0:1;
    unsigned char ADCS1:1;
    unsigned char ADCS2:1;
    unsigned char :1;
  };
} __ADCON1bits_t;
extern volatile __ADCON1bits_t __at(ADCON1_ADDR) ADCON1bits;

// ----- ANSEL bits --------------------
typedef union {
  struct {
    unsigned char ANS0:1;
    unsigned char ANS1:1;
    unsigned char ANS2:1;
    unsigned char ANS3:1;
    unsigned char ANS4:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
  struct {
    unsigned char AN0:1;
    unsigned char AN1:1;
    unsigned char AN2:1;
    unsigned char AN3:1;
    unsigned char AN4:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __ANSELbits_t;
extern volatile __ANSELbits_t __at(ANSEL_ADDR) ANSELbits;

// ----- CCP1CON bits --------------------
typedef union {
  struct {
    unsigned char CCP1M0:1;
    unsigned char CCP1M1:1;
    unsigned char CCP1M2:1;
    unsigned char CCP1M3:1;
    unsigned char CCP1Y:1;
    unsigned char CCP1X:1;
    unsigned char :1;
    unsigned char :1;
  };
} __CCP1CONbits_t;
extern volatile __CCP1CONbits_t __at(CCP1CON_ADDR) CCP1CONbits;

// ----- CMCON0 bits --------------------
typedef union {
  struct {
    unsigned char CM0:1;
    unsigned char CM1:1;
    unsigned char CM2:1;
    unsigned char CIS:1;
    unsigned char C1INV:1;
    unsigned char C2INV:1;
    unsigned char C1OUT:1;
    unsigned char C2OUT:1;
  };
} __CMCON0bits_t;
extern volatile __CMCON0bits_t __at(CMCON0_ADDR) CMCON0bits;

// ----- CMCON1 bits --------------------
typedef union {
  struct {
    unsigned char C2SYNC:1;
    unsigned char T1GSS:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __CMCON1bits_t;
extern volatile __CMCON1bits_t __at(CMCON1_ADDR) CMCON1bits;

// ----- EEADRH bits --------------------
typedef union {
  struct {
    unsigned char EEADRH0:1;
    unsigned char EEADRH1:1;
    unsigned char EEADRH2:1;
    unsigned char EEADRH3:1;
    unsigned char EEADRH4:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __EEADRHbits_t;
extern volatile __EEADRHbits_t __at(EEADRH_ADDR) EEADRHbits;

// ----- EEADRL bits --------------------
typedef union {
  struct {
    unsigned char EEADRL0:1;
    unsigned char EEADRL1:1;
    unsigned char EEADRL2:1;
    unsigned char EEADRL3:1;
    unsigned char EEADRL4:1;
    unsigned char EEADRL5:1;
    unsigned char EEADRL6:1;
    unsigned char EEADRL7:1;
  };
} __EEADRLbits_t;
extern volatile __EEADRLbits_t __at(EEADRL_ADDR) EEADRLbits;

// ----- EECON1 bits --------------------
typedef union {
  struct {
    unsigned char RD:1;
    unsigned char WR:1;
    unsigned char WREN:1;
    unsigned char WRERR:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char EEPGD:1;
  };
  struct {
    unsigned char EERD:1;
    unsigned char EEWR:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __EECON1bits_t;
extern volatile __EECON1bits_t __at(EECON1_ADDR) EECON1bits;

// ----- INTCON bits --------------------
typedef union {
  struct {
    unsigned char RBIF:1;
    unsigned char INTF:1;
    unsigned char T0IF:1;
    unsigned char RBIE:1;
    unsigned char INTE:1;
    unsigned char T0IE:1;
    unsigned char PEIE:1;
    unsigned char GIE:1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char TMR0IF:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char TMR0IE:1;
    unsigned char :1;
    unsigned char :1;
  };
} __INTCONbits_t;
extern volatile __INTCONbits_t __at(INTCON_ADDR) INTCONbits;

// ----- IOC bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char IOC4:1;
    unsigned char IOC5:1;
    unsigned char IOC6:1;
    unsigned char IOC7:1;
  };
} __IOCbits_t;
extern volatile __IOCbits_t __at(IOC_ADDR) IOCbits;

// ----- IOCB bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char IOCB4:1;
    unsigned char IOCB5:1;
    unsigned char IOCB6:1;
    unsigned char IOCB7:1;
  };
} __IOCBbits_t;
extern volatile __IOCBbits_t __at(IOCB_ADDR) IOCBbits;

// ----- LCDCON bits --------------------
typedef union {
  struct {
    unsigned char LMUX0:1;
    unsigned char LMUX1:1;
    unsigned char CS0:1;
    unsigned char CS1:1;
    unsigned char VLCDEN:1;
    unsigned char WERR:1;
    unsigned char SLPEN:1;
    unsigned char LCDEN:1;
  };
} __LCDCONbits_t;
extern volatile __LCDCONbits_t __at(LCDCON_ADDR) LCDCONbits;

// ----- LCDDATA0 bits --------------------
typedef union {
  struct {
    unsigned char SEG0COM0:1;
    unsigned char SEG1COM0:1;
    unsigned char SEG2COM0:1;
    unsigned char SEG3COM0:1;
    unsigned char SEG4COM0:1;
    unsigned char SEG5COM0:1;
    unsigned char SEG6COM0:1;
    unsigned char SEG7COM0:1;
  };
  struct {
    unsigned char S0C0:1;
    unsigned char S1C0:1;
    unsigned char S2C0:1;
    unsigned char S3C0:1;
    unsigned char S4C0:1;
    unsigned char S5C0:1;
    unsigned char S6C0:1;
    unsigned char S7C0:1;
  };
} __LCDDATA0bits_t;
extern volatile __LCDDATA0bits_t __at(LCDDATA0_ADDR) LCDDATA0bits;

// ----- LCDDATA1 bits --------------------
typedef union {
  struct {
    unsigned char SEG8COM0:1;
    unsigned char SEG9COM0:1;
    unsigned char SEG10COM0:1;
    unsigned char SEG11COM0:1;
    unsigned char SEG12COM0:1;
    unsigned char SEG13COM0:1;
    unsigned char SEG14COM0:1;
    unsigned char SEG15COM0:1;
  };
  struct {
    unsigned char S8C0:1;
    unsigned char S9C0:1;
    unsigned char S10C0:1;
    unsigned char S11C0:1;
    unsigned char S12C0:1;
    unsigned char S13C0:1;
    unsigned char S14C0:1;
    unsigned char S15C0:1;
  };
} __LCDDATA1bits_t;
extern volatile __LCDDATA1bits_t __at(LCDDATA1_ADDR) LCDDATA1bits;

// ----- LCDDATA10 bits --------------------
typedef union {
  struct {
    unsigned char SEG8COM3:1;
    unsigned char SEG9COM3:1;
    unsigned char SEG10COM3:1;
    unsigned char SEG11COM3:1;
    unsigned char SEG12COM3:1;
    unsigned char SEG13COM3:1;
    unsigned char SEG14COM3:1;
    unsigned char SEG15COM3:1;
  };
  struct {
    unsigned char S8C3:1;
    unsigned char S9C3:1;
    unsigned char S10C3:1;
    unsigned char S11C3:1;
    unsigned char S12C3:1;
    unsigned char S13C3:1;
    unsigned char S14C3:1;
    unsigned char S15C3:1;
  };
} __LCDDATA10bits_t;
extern volatile __LCDDATA10bits_t __at(LCDDATA10_ADDR) LCDDATA10bits;

// ----- LCDDATA3 bits --------------------
typedef union {
  struct {
    unsigned char SEG0COM1:1;
    unsigned char SEG1COM1:1;
    unsigned char SEG2COM1:1;
    unsigned char SEG3COM1:1;
    unsigned char SEG4COM1:1;
    unsigned char SEG5COM1:1;
    unsigned char SEG6COM1:1;
    unsigned char SEG7COM1:1;
  };
  struct {
    unsigned char S0C1:1;
    unsigned char S1C1:1;
    unsigned char S2C1:1;
    unsigned char S3C1:1;
    unsigned char S4C1:1;
    unsigned char S5C1:1;
    unsigned char S6C1:1;
    unsigned char S7C1:1;
  };
} __LCDDATA3bits_t;
extern volatile __LCDDATA3bits_t __at(LCDDATA3_ADDR) LCDDATA3bits;

// ----- LCDDATA4 bits --------------------
typedef union {
  struct {
    unsigned char SEG8COM1:1;
    unsigned char SEG9COM1:1;
    unsigned char SEG10COM1:1;
    unsigned char SEG11COM1:1;
    unsigned char SEG12COM1:1;
    unsigned char SEG13COM1:1;
    unsigned char SEG14COM1:1;
    unsigned char SEG15COM1:1;
  };
  struct {
    unsigned char S8C1:1;
    unsigned char S9C1:1;
    unsigned char S10C1:1;
    unsigned char S11C1:1;
    unsigned char S12C1:1;
    unsigned char S13C1:1;
    unsigned char S14C1:1;
    unsigned char S15C1:1;
  };
} __LCDDATA4bits_t;
extern volatile __LCDDATA4bits_t __at(LCDDATA4_ADDR) LCDDATA4bits;

// ----- LCDDATA6 bits --------------------
typedef union {
  struct {
    unsigned char SEG0COM2:1;
    unsigned char SEG1COM2:1;
    unsigned char SEG2COM2:1;
    unsigned char SEG3COM2:1;
    unsigned char SEG4COM2:1;
    unsigned char SEG5COM2:1;
    unsigned char SEG6COM2:1;
    unsigned char SEG7COM2:1;
  };
  struct {
    unsigned char S0C2:1;
    unsigned char S1C2:1;
    unsigned char S2C2:1;
    unsigned char S3C2:1;
    unsigned char S4C2:1;
    unsigned char S5C2:1;
    unsigned char S6C2:1;
    unsigned char S7C2:1;
  };
} __LCDDATA6bits_t;
extern volatile __LCDDATA6bits_t __at(LCDDATA6_ADDR) LCDDATA6bits;

// ----- LCDDATA7 bits --------------------
typedef union {
  struct {
    unsigned char SEG8COM2:1;
    unsigned char SEG9COM2:1;
    unsigned char SEG10COM2:1;
    unsigned char SEG11COM2:1;
    unsigned char SEG12COM2:1;
    unsigned char SEG13COM2:1;
    unsigned char SEG14COM2:1;
    unsigned char SEG15COM2:1;
  };
  struct {
    unsigned char S8C2:1;
    unsigned char S9C2:1;
    unsigned char S10C2:1;
    unsigned char S11C2:1;
    unsigned char S12C2:1;
    unsigned char S13C2:1;
    unsigned char S14C2:1;
    unsigned char S15C2:1;
  };
} __LCDDATA7bits_t;
extern volatile __LCDDATA7bits_t __at(LCDDATA7_ADDR) LCDDATA7bits;

// ----- LCDDATA9 bits --------------------
typedef union {
  struct {
    unsigned char SEG0COM3:1;
    unsigned char SEG1COM3:1;
    unsigned char SEG2COM3:1;
    unsigned char SEG3COM3:1;
    unsigned char SEG4COM3:1;
    unsigned char SEG5COM3:1;
    unsigned char SEG6COM3:1;
    unsigned char SEG7COM3:1;
  };
  struct {
    unsigned char S0C3:1;
    unsigned char S1C3:1;
    unsigned char S2C3:1;
    unsigned char S3C3:1;
    unsigned char S4C3:1;
    unsigned char S5C3:1;
    unsigned char S6C3:1;
    unsigned char S7C3:1;
  };
} __LCDDATA9bits_t;
extern volatile __LCDDATA9bits_t __at(LCDDATA9_ADDR) LCDDATA9bits;

// ----- LCDPS bits --------------------
typedef union {
  struct {
    unsigned char LP0:1;
    unsigned char LP1:1;
    unsigned char LP2:1;
    unsigned char LP3:1;
    unsigned char WA:1;
    unsigned char LCDA:1;
    unsigned char BIASMD:1;
    unsigned char WFT:1;
  };
} __LCDPSbits_t;
extern volatile __LCDPSbits_t __at(LCDPS_ADDR) LCDPSbits;

// ----- LCDSE0 bits --------------------
typedef union {
  struct {
    unsigned char SE0:1;
    unsigned char SE1:1;
    unsigned char SE2:1;
    unsigned char SE3:1;
    unsigned char SE4:1;
    unsigned char SE5:1;
    unsigned char SE6:1;
    unsigned char SE7:1;
  };
  struct {
    unsigned char SEGEN0:1;
    unsigned char SEGEN1:1;
    unsigned char SEGEN2:1;
    unsigned char SEGEN3:1;
    unsigned char SEGEN4:1;
    unsigned char SEGEN5:1;
    unsigned char SEGEN6:1;
    unsigned char SEGEN7:1;
  };
} __LCDSE0bits_t;
extern volatile __LCDSE0bits_t __at(LCDSE0_ADDR) LCDSE0bits;

// ----- LCDSE1 bits --------------------
typedef union {
  struct {
    unsigned char SE8:1;
    unsigned char SE9:1;
    unsigned char SE10:1;
    unsigned char SE11:1;
    unsigned char SE12:1;
    unsigned char SE13:1;
    unsigned char SE14:1;
    unsigned char SE15:1;
  };
  struct {
    unsigned char SEGEN8:1;
    unsigned char SEGEN9:1;
    unsigned char SEGEN10:1;
    unsigned char SEGEN11:1;
    unsigned char SEGEN12:1;
    unsigned char SEGEN13:1;
    unsigned char SEGEN14:1;
    unsigned char SEGEN15:1;
  };
} __LCDSE1bits_t;
extern volatile __LCDSE1bits_t __at(LCDSE1_ADDR) LCDSE1bits;

// ----- LVDCON bits --------------------
typedef union {
  struct {
    unsigned char LVDL0:1;
    unsigned char LVDL1:1;
    unsigned char LVDL2:1;
    unsigned char :1;
    unsigned char LVDEN:1;
    unsigned char IRVST:1;
    unsigned char :1;
    unsigned char :1;
  };
} __LVDCONbits_t;
extern volatile __LVDCONbits_t __at(LVDCON_ADDR) LVDCONbits;

// ----- OPTION_REG bits --------------------
typedef union {
  struct {
    unsigned char PS0:1;
    unsigned char PS1:1;
    unsigned char PS2:1;
    unsigned char PSA:1;
    unsigned char T0SE:1;
    unsigned char T0CS:1;
    unsigned char INTEDG:1;
    unsigned char NOT_RBPU:1;
  };
} __OPTION_REGbits_t;
extern volatile __OPTION_REGbits_t __at(OPTION_REG_ADDR) OPTION_REGbits;

// ----- OSCCON bits --------------------
typedef union {
  struct {
    unsigned char SCS:1;
    unsigned char LTS:1;
    unsigned char HTS:1;
    unsigned char OSTS:1;
    unsigned char IRCF0:1;
    unsigned char IRCF1:1;
    unsigned char IRCF2:1;
    unsigned char :1;
  };
} __OSCCONbits_t;
extern volatile __OSCCONbits_t __at(OSCCON_ADDR) OSCCONbits;

// ----- OSCTUNE bits --------------------
typedef union {
  struct {
    unsigned char TUN0:1;
    unsigned char TUN1:1;
    unsigned char TUN2:1;
    unsigned char TUN3:1;
    unsigned char TUN4:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __OSCTUNEbits_t;
extern volatile __OSCTUNEbits_t __at(OSCTUNE_ADDR) OSCTUNEbits;

// ----- PCON bits --------------------
typedef union {
  struct {
    unsigned char NOT_BO:1;
    unsigned char NOT_POR:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char SBOREN:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
  struct {
    unsigned char NOT_BOR:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __PCONbits_t;
extern volatile __PCONbits_t __at(PCON_ADDR) PCONbits;

// ----- PIE1 bits --------------------
typedef union {
  struct {
    unsigned char TMR1IE:1;
    unsigned char TMR2IE:1;
    unsigned char CCP1IE:1;
    unsigned char SSPIE:1;
    unsigned char TXIE:1;
    unsigned char RCIE:1;
    unsigned char ADIE:1;
    unsigned char EEIE:1;
  };
} __PIE1bits_t;
extern volatile __PIE1bits_t __at(PIE1_ADDR) PIE1bits;

// ----- PIE2 bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char LVDIE:1;
    unsigned char :1;
    unsigned char LCDIE:1;
    unsigned char C1IE:1;
    unsigned char C2IE:1;
    unsigned char OSFIE:1;
  };
} __PIE2bits_t;
extern volatile __PIE2bits_t __at(PIE2_ADDR) PIE2bits;

// ----- PIR1 bits --------------------
typedef union {
  struct {
    unsigned char TMR1IF:1;
    unsigned char TMR2IF:1;
    unsigned char CCP1IF:1;
    unsigned char SSPIF:1;
    unsigned char TXIF:1;
    unsigned char RCIF:1;
    unsigned char ADIF:1;
    unsigned char EEIF:1;
  };
} __PIR1bits_t;
extern volatile __PIR1bits_t __at(PIR1_ADDR) PIR1bits;

// ----- PIR2 bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char LVDIF:1;
    unsigned char :1;
    unsigned char LCDIF:1;
    unsigned char C1IF:1;
    unsigned char C2IF:1;
    unsigned char OSFIF:1;
  };
} __PIR2bits_t;
extern volatile __PIR2bits_t __at(PIR2_ADDR) PIR2bits;

// ----- PORTA bits --------------------
typedef union {
  struct {
    unsigned char RA0:1;
    unsigned char RA1:1;
    unsigned char RA2:1;
    unsigned char RA3:1;
    unsigned char RA4:1;
    unsigned char RA5:1;
    unsigned char :1;
    unsigned char :1;
  };
} __PORTAbits_t;
extern volatile __PORTAbits_t __at(PORTA_ADDR) PORTAbits;

// ----- PORTB bits --------------------
typedef union {
  struct {
    unsigned char RB0:1;
    unsigned char RB1:1;
    unsigned char RB2:1;
    unsigned char RB3:1;
    unsigned char RB4:1;
    unsigned char RB5:1;
    unsigned char RB6:1;
    unsigned char RB7:1;
  };
} __PORTBbits_t;
extern volatile __PORTBbits_t __at(PORTB_ADDR) PORTBbits;

// ----- PORTC bits --------------------
typedef union {
  struct {
    unsigned char RC0:1;
    unsigned char RC1:1;
    unsigned char RC2:1;
    unsigned char RC3:1;
    unsigned char RC4:1;
    unsigned char RC5:1;
    unsigned char RC6:1;
    unsigned char RC7:1;
  };
} __PORTCbits_t;
extern volatile __PORTCbits_t __at(PORTC_ADDR) PORTCbits;

// ----- PORTE bits --------------------
typedef union {
  struct {
    unsigned char RE0:1;
    unsigned char RE1:1;
    unsigned char RE2:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __PORTEbits_t;
extern volatile __PORTEbits_t __at(PORTE_ADDR) PORTEbits;

// ----- RCSTA bits --------------------
typedef union {
  struct {
    unsigned char RX9D:1;
    unsigned char OERR:1;
    unsigned char FERR:1;
    unsigned char ADDEN:1;
    unsigned char CREN:1;
    unsigned char SREN:1;
    unsigned char RX9:1;
    unsigned char SPEN:1;
  };
  struct {
    unsigned char RCD8:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char RC9:1;
    unsigned char :1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char NOT_RC8:1;
    unsigned char :1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char RC8_9:1;
    unsigned char :1;
  };
} __RCSTAbits_t;
extern volatile __RCSTAbits_t __at(RCSTA_ADDR) RCSTAbits;

// ----- SSPCON bits --------------------
typedef union {
  struct {
    unsigned char SSPM0:1;
    unsigned char SSPM1:1;
    unsigned char SSPM2:1;
    unsigned char SSPM3:1;
    unsigned char CKP:1;
    unsigned char SSPEN:1;
    unsigned char SSPOV:1;
    unsigned char WCOL:1;
  };
} __SSPCONbits_t;
extern volatile __SSPCONbits_t __at(SSPCON_ADDR) SSPCONbits;

// ----- SSPSTAT bits --------------------
typedef union {
  struct {
    unsigned char BF:1;
    unsigned char UA:1;
    unsigned char R:1;
    unsigned char S:1;
    unsigned char P:1;
    unsigned char D:1;
    unsigned char CKE:1;
    unsigned char SMP:1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char I2C_READ:1;
    unsigned char I2C_START:1;
    unsigned char I2C_STOP:1;
    unsigned char I2C_DATA:1;
    unsigned char :1;
    unsigned char :1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char NOT_W:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char NOT_A:1;
    unsigned char :1;
    unsigned char :1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char NOT_WRITE:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char NOT_ADDRESS:1;
    unsigned char :1;
    unsigned char :1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char R_W:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char D_A:1;
    unsigned char :1;
    unsigned char :1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char READ_WRITE:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char DATA_ADDRESS:1;
    unsigned char :1;
    unsigned char :1;
  };
} __SSPSTATbits_t;
extern volatile __SSPSTATbits_t __at(SSPSTAT_ADDR) SSPSTATbits;

// ----- STATUS bits --------------------
typedef union {
  struct {
    unsigned char C:1;
    unsigned char DC:1;
    unsigned char Z:1;
    unsigned char NOT_PD:1;
    unsigned char NOT_TO:1;
    unsigned char RP0:1;
    unsigned char RP1:1;
    unsigned char IRP:1;
  };
} __STATUSbits_t;
extern volatile __STATUSbits_t __at(STATUS_ADDR) STATUSbits;

// ----- T1CON bits --------------------
typedef union {
  struct {
    unsigned char TMR1ON:1;
    unsigned char TMR1CS:1;
    unsigned char NOT_T1SYNC:1;
    unsigned char T1OSCEN:1;
    unsigned char T1CKPS0:1;
    unsigned char T1CKPS1:1;
    unsigned char T1GE:1;
    unsigned char T1GINV:1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char T1INSYNC:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char T1SYNC:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __T1CONbits_t;
extern volatile __T1CONbits_t __at(T1CON_ADDR) T1CONbits;

// ----- T2CON bits --------------------
typedef union {
  struct {
    unsigned char T2CKPS0:1;
    unsigned char T2CKPS1:1;
    unsigned char TMR2ON:1;
    unsigned char TOUTPS0:1;
    unsigned char TOUTPS1:1;
    unsigned char TOUTPS2:1;
    unsigned char TOUTPS3:1;
    unsigned char :1;
  };
} __T2CONbits_t;
extern volatile __T2CONbits_t __at(T2CON_ADDR) T2CONbits;

// ----- TRISA bits --------------------
typedef union {
  struct {
    unsigned char TRISA0:1;
    unsigned char TRISA1:1;
    unsigned char TRISA2:1;
    unsigned char TRISA3:1;
    unsigned char TRISA4:1;
    unsigned char TRISA5:1;
    unsigned char :1;
    unsigned char :1;
  };
} __TRISAbits_t;
extern volatile __TRISAbits_t __at(TRISA_ADDR) TRISAbits;

// ----- TRISB bits --------------------
typedef union {
  struct {
    unsigned char TRISB0:1;
    unsigned char TRISB1:1;
    unsigned char TRISB2:1;
    unsigned char TRISB3:1;
    unsigned char TRISB4:1;
    unsigned char TRISB5:1;
    unsigned char TRISB6:1;
    unsigned char TRISB7:1;
  };
} __TRISBbits_t;
extern volatile __TRISBbits_t __at(TRISB_ADDR) TRISBbits;

// ----- TRISC bits --------------------
typedef union {
  struct {
    unsigned char TRISC0:1;
    unsigned char TRISC1:1;
    unsigned char TRISC2:1;
    unsigned char TRISC3:1;
    unsigned char TRISC4:1;
    unsigned char TRISC5:1;
    unsigned char TRISC6:1;
    unsigned char TRISC7:1;
  };
} __TRISCbits_t;
extern volatile __TRISCbits_t __at(TRISC_ADDR) TRISCbits;

// ----- TRISE bits --------------------
typedef union {
  struct {
    unsigned char TRISE0:1;
    unsigned char TRISE1:1;
    unsigned char TRISE2:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __TRISEbits_t;
extern volatile __TRISEbits_t __at(TRISE_ADDR) TRISEbits;

// ----- TXSTA bits --------------------
typedef union {
  struct {
    unsigned char TX9D:1;
    unsigned char TRMT:1;
    unsigned char BRGH:1;
    unsigned char :1;
    unsigned char SYNC:1;
    unsigned char TXEN:1;
    unsigned char TX9:1;
    unsigned char CSRC:1;
  };
  struct {
    unsigned char TXD8:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char NOT_TX8:1;
    unsigned char :1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char TX8_9:1;
    unsigned char :1;
  };
} __TXSTAbits_t;
extern volatile __TXSTAbits_t __at(TXSTA_ADDR) TXSTAbits;

// ----- VRCON bits --------------------
typedef union {
  struct {
    unsigned char VR0:1;
    unsigned char VR1:1;
    unsigned char VR2:1;
    unsigned char VR3:1;
    unsigned char :1;
    unsigned char VRR:1;
    unsigned char :1;
    unsigned char VREN:1;
  };
} __VRCONbits_t;
extern volatile __VRCONbits_t __at(VRCON_ADDR) VRCONbits;

// ----- WDTCON bits --------------------
typedef union {
  struct {
    unsigned char SWDTEN:1;
    unsigned char WDTPS0:1;
    unsigned char WDTPS1:1;
    unsigned char WDTPS2:1;
    unsigned char WDTPS3:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
  struct {
    unsigned char SWDTE:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __WDTCONbits_t;
extern volatile __WDTCONbits_t __at(WDTCON_ADDR) WDTCONbits;

// ----- WPU bits --------------------
typedef union {
  struct {
    unsigned char WPU0:1;
    unsigned char WPU1:1;
    unsigned char WPU2:1;
    unsigned char WPU3:1;
    unsigned char WPU4:1;
    unsigned char WPU5:1;
    unsigned char WPU6:1;
    unsigned char WPU7:1;
  };
} __WPUbits_t;
extern volatile __WPUbits_t __at(WPU_ADDR) WPUbits;

// ----- WPUB bits --------------------
typedef union {
  struct {
    unsigned char WPUB0:1;
    unsigned char WPUB1:1;
    unsigned char WPUB2:1;
    unsigned char WPUB3:1;
    unsigned char WPUB4:1;
    unsigned char WPUB5:1;
    unsigned char WPUB6:1;
    unsigned char WPUB7:1;
  };
} __WPUBbits_t;
extern volatile __WPUBbits_t __at(WPUB_ADDR) WPUBbits;


#ifndef NO_BIT_DEFINES

#define ADON                 ADCON0bits.ADON                /* bit 0 */
#define GO                   ADCON0bits.GO                  /* bit 1 */
#define GO_DONE              ADCON0bits.GO_DONE             /* bit 1 */
#define NOT_DONE             ADCON0bits.NOT_DONE            /* bit 1 */
#define CHS0                 ADCON0bits.CHS0                /* bit 2 */
#define CHS1                 ADCON0bits.CHS1                /* bit 3 */
#define CHS2                 ADCON0bits.CHS2                /* bit 4 */
#define VCFG0                ADCON0bits.VCFG0               /* bit 5 */
#define VCFG1                ADCON0bits.VCFG1               /* bit 6 */
#define ADFM                 ADCON0bits.ADFM                /* bit 7 */

#define ADCS0                ADCON1bits.ADCS0               /* bit 4 */
#define ADCS1                ADCON1bits.ADCS1               /* bit 5 */
#define ADCS2                ADCON1bits.ADCS2               /* bit 6 */

#define AN0                  ANSELbits.AN0                  /* bit 0 */
#define ANS0                 ANSELbits.ANS0                 /* bit 0 */
#define AN1                  ANSELbits.AN1                  /* bit 1 */
#define ANS1                 ANSELbits.ANS1                 /* bit 1 */
#define AN2                  ANSELbits.AN2                  /* bit 2 */
#define ANS2                 ANSELbits.ANS2                 /* bit 2 */
#define AN3                  ANSELbits.AN3                  /* bit 3 */
#define ANS3                 ANSELbits.ANS3                 /* bit 3 */
#define AN4                  ANSELbits.AN4                  /* bit 4 */
#define ANS4                 ANSELbits.ANS4                 /* bit 4 */

#define CCP1M0               CCP1CONbits.CCP1M0             /* bit 0 */
#define CCP1M1               CCP1CONbits.CCP1M1             /* bit 1 */
#define CCP1M2               CCP1CONbits.CCP1M2             /* bit 2 */
#define CCP1M3               CCP1CONbits.CCP1M3             /* bit 3 */
#define CCP1Y                CCP1CONbits.CCP1Y              /* bit 4 */
#define CCP1X                CCP1CONbits.CCP1X              /* bit 5 */

#define CM0                  CMCON0bits.CM0                 /* bit 0 */
#define CM1                  CMCON0bits.CM1                 /* bit 1 */
#define CM2                  CMCON0bits.CM2                 /* bit 2 */
#define CIS                  CMCON0bits.CIS                 /* bit 3 */
#define C1INV                CMCON0bits.C1INV               /* bit 4 */
#define C2INV                CMCON0bits.C2INV               /* bit 5 */
#define C1OUT                CMCON0bits.C1OUT               /* bit 6 */
#define C2OUT                CMCON0bits.C2OUT               /* bit 7 */

#define C2SYNC               CMCON1bits.C2SYNC              /* bit 0 */
#define T1GSS                CMCON1bits.T1GSS               /* bit 1 */

#define EEADRH0              EEADRHbits.EEADRH0             /* bit 0 */
#define EEADRH1              EEADRHbits.EEADRH1             /* bit 1 */
#define EEADRH2              EEADRHbits.EEADRH2             /* bit 2 */
#define EEADRH3              EEADRHbits.EEADRH3             /* bit 3 */
#define EEADRH4              EEADRHbits.EEADRH4             /* bit 4 */

#define EEADRL0              EEADRLbits.EEADRL0             /* bit 0 */
#define EEADRL1              EEADRLbits.EEADRL1             /* bit 1 */
#define EEADRL2              EEADRLbits.EEADRL2             /* bit 2 */
#define EEADRL3              EEADRLbits.EEADRL3             /* bit 3 */
#define EEADRL4              EEADRLbits.EEADRL4             /* bit 4 */
#define EEADRL5              EEADRLbits.EEADRL5             /* bit 5 */
#define EEADRL6              EEADRLbits.EEADRL6             /* bit 6 */
#define EEADRL7              EEADRLbits.EEADRL7             /* bit 7 */

#define EERD                 EECON1bits.EERD                /* bit 0 */
#define RD                   EECON1bits.RD                  /* bit 0 */
#define EEWR                 EECON1bits.EEWR                /* bit 1 */
#define WR                   EECON1bits.WR                  /* bit 1 */
#define WREN                 EECON1bits.WREN                /* bit 2 */
#define WRERR                EECON1bits.WRERR               /* bit 3 */
#define EEPGD                EECON1bits.EEPGD               /* bit 7 */

#define RBIF                 INTCONbits.RBIF                /* bit 0 */
#define INTF                 INTCONbits.INTF                /* bit 1 */
#define T0IF                 INTCONbits.T0IF                /* bit 2 */
#define TMR0IF               INTCONbits.TMR0IF              /* bit 2 */
#define RBIE                 INTCONbits.RBIE                /* bit 3 */
#define INTE                 INTCONbits.INTE                /* bit 4 */
#define T0IE                 INTCONbits.T0IE                /* bit 5 */
#define TMR0IE               INTCONbits.TMR0IE              /* bit 5 */
#define PEIE                 INTCONbits.PEIE                /* bit 6 */
#define GIE                  INTCONbits.GIE                 /* bit 7 */

#define IOCB4                IOCBbits.IOCB4                 /* bit 4 */
#define IOCB5                IOCBbits.IOCB5                 /* bit 5 */
#define IOCB6                IOCBbits.IOCB6                 /* bit 6 */
#define IOCB7                IOCBbits.IOCB7                 /* bit 7 */

#define IOC4                 IOCbits.IOC4                   /* bit 4 */
#define IOC5                 IOCbits.IOC5                   /* bit 5 */
#define IOC6                 IOCbits.IOC6                   /* bit 6 */
#define IOC7                 IOCbits.IOC7                   /* bit 7 */

#define LMUX0                LCDCONbits.LMUX0               /* bit 0 */
#define LMUX1                LCDCONbits.LMUX1               /* bit 1 */
#define CS0                  LCDCONbits.CS0                 /* bit 2 */
#define CS1                  LCDCONbits.CS1                 /* bit 3 */
#define VLCDEN               LCDCONbits.VLCDEN              /* bit 4 */
#define WERR                 LCDCONbits.WERR                /* bit 5 */
#define SLPEN                LCDCONbits.SLPEN               /* bit 6 */
#define LCDEN                LCDCONbits.LCDEN               /* bit 7 */

#define S0C0                 LCDDATA0bits.S0C0              /* bit 0 */
#define SEG0COM0             LCDDATA0bits.SEG0COM0          /* bit 0 */
#define S1C0                 LCDDATA0bits.S1C0              /* bit 1 */
#define SEG1COM0             LCDDATA0bits.SEG1COM0          /* bit 1 */
#define S2C0                 LCDDATA0bits.S2C0              /* bit 2 */
#define SEG2COM0             LCDDATA0bits.SEG2COM0          /* bit 2 */
#define S3C0                 LCDDATA0bits.S3C0              /* bit 3 */
#define SEG3COM0             LCDDATA0bits.SEG3COM0          /* bit 3 */
#define S4C0                 LCDDATA0bits.S4C0              /* bit 4 */
#define SEG4COM0             LCDDATA0bits.SEG4COM0          /* bit 4 */
#define S5C0                 LCDDATA0bits.S5C0              /* bit 5 */
#define SEG5COM0             LCDDATA0bits.SEG5COM0          /* bit 5 */
#define S6C0                 LCDDATA0bits.S6C0              /* bit 6 */
#define SEG6COM0             LCDDATA0bits.SEG6COM0          /* bit 6 */
#define S7C0                 LCDDATA0bits.S7C0              /* bit 7 */
#define SEG7COM0             LCDDATA0bits.SEG7COM0          /* bit 7 */

#define S8C3                 LCDDATA10bits.S8C3             /* bit 0 */
#define SEG8COM3             LCDDATA10bits.SEG8COM3         /* bit 0 */
#define S9C3                 LCDDATA10bits.S9C3             /* bit 1 */
#define SEG9COM3             LCDDATA10bits.SEG9COM3         /* bit 1 */
#define S10C3                LCDDATA10bits.S10C3            /* bit 2 */
#define SEG10COM3            LCDDATA10bits.SEG10COM3        /* bit 2 */
#define S11C3                LCDDATA10bits.S11C3            /* bit 3 */
#define SEG11COM3            LCDDATA10bits.SEG11COM3        /* bit 3 */
#define S12C3                LCDDATA10bits.S12C3            /* bit 4 */
#define SEG12COM3            LCDDATA10bits.SEG12COM3        /* bit 4 */
#define S13C3                LCDDATA10bits.S13C3            /* bit 5 */
#define SEG13COM3            LCDDATA10bits.SEG13COM3        /* bit 5 */
#define S14C3                LCDDATA10bits.S14C3            /* bit 6 */
#define SEG14COM3            LCDDATA10bits.SEG14COM3        /* bit 6 */
#define S15C3                LCDDATA10bits.S15C3            /* bit 7 */
#define SEG15COM3            LCDDATA10bits.SEG15COM3        /* bit 7 */

#define S8C0                 LCDDATA1bits.S8C0              /* bit 0 */
#define SEG8COM0             LCDDATA1bits.SEG8COM0          /* bit 0 */
#define S9C0                 LCDDATA1bits.S9C0              /* bit 1 */
#define SEG9COM0             LCDDATA1bits.SEG9COM0          /* bit 1 */
#define S10C0                LCDDATA1bits.S10C0             /* bit 2 */
#define SEG10COM0            LCDDATA1bits.SEG10COM0         /* bit 2 */
#define S11C0                LCDDATA1bits.S11C0             /* bit 3 */
#define SEG11COM0            LCDDATA1bits.SEG11COM0         /* bit 3 */
#define S12C0                LCDDATA1bits.S12C0             /* bit 4 */
#define SEG12COM0            LCDDATA1bits.SEG12COM0         /* bit 4 */
#define S13C0                LCDDATA1bits.S13C0             /* bit 5 */
#define SEG13COM0            LCDDATA1bits.SEG13COM0         /* bit 5 */
#define S14C0                LCDDATA1bits.S14C0             /* bit 6 */
#define SEG14COM0            LCDDATA1bits.SEG14COM0         /* bit 6 */
#define S15C0                LCDDATA1bits.S15C0             /* bit 7 */
#define SEG15COM0            LCDDATA1bits.SEG15COM0         /* bit 7 */

#define S0C1                 LCDDATA3bits.S0C1              /* bit 0 */
#define SEG0COM1             LCDDATA3bits.SEG0COM1          /* bit 0 */
#define S1C1                 LCDDATA3bits.S1C1              /* bit 1 */
#define SEG1COM1             LCDDATA3bits.SEG1COM1          /* bit 1 */
#define S2C1                 LCDDATA3bits.S2C1              /* bit 2 */
#define SEG2COM1             LCDDATA3bits.SEG2COM1          /* bit 2 */
#define S3C1                 LCDDATA3bits.S3C1              /* bit 3 */
#define SEG3COM1             LCDDATA3bits.SEG3COM1          /* bit 3 */
#define S4C1                 LCDDATA3bits.S4C1              /* bit 4 */
#define SEG4COM1             LCDDATA3bits.SEG4COM1          /* bit 4 */
#define S5C1                 LCDDATA3bits.S5C1              /* bit 5 */
#define SEG5COM1             LCDDATA3bits.SEG5COM1          /* bit 5 */
#define S6C1                 LCDDATA3bits.S6C1              /* bit 6 */
#define SEG6COM1             LCDDATA3bits.SEG6COM1          /* bit 6 */
#define S7C1                 LCDDATA3bits.S7C1              /* bit 7 */
#define SEG7COM1             LCDDATA3bits.SEG7COM1          /* bit 7 */

#define S8C1                 LCDDATA4bits.S8C1              /* bit 0 */
#define SEG8COM1             LCDDATA4bits.SEG8COM1          /* bit 0 */
#define S9C1                 LCDDATA4bits.S9C1              /* bit 1 */
#define SEG9COM1             LCDDATA4bits.SEG9COM1          /* bit 1 */
#define S10C1                LCDDATA4bits.S10C1             /* bit 2 */
#define SEG10COM1            LCDDATA4bits.SEG10COM1         /* bit 2 */
#define S11C1                LCDDATA4bits.S11C1             /* bit 3 */
#define SEG11COM1            LCDDATA4bits.SEG11COM1         /* bit 3 */
#define S12C1                LCDDATA4bits.S12C1             /* bit 4 */
#define SEG12COM1            LCDDATA4bits.SEG12COM1         /* bit 4 */
#define S13C1                LCDDATA4bits.S13C1             /* bit 5 */
#define SEG13COM1            LCDDATA4bits.SEG13COM1         /* bit 5 */
#define S14C1                LCDDATA4bits.S14C1             /* bit 6 */
#define SEG14COM1            LCDDATA4bits.SEG14COM1         /* bit 6 */
#define S15C1                LCDDATA4bits.S15C1             /* bit 7 */
#define SEG15COM1            LCDDATA4bits.SEG15COM1         /* bit 7 */

#define S0C2                 LCDDATA6bits.S0C2              /* bit 0 */
#define SEG0COM2             LCDDATA6bits.SEG0COM2          /* bit 0 */
#define S1C2                 LCDDATA6bits.S1C2              /* bit 1 */
#define SEG1COM2             LCDDATA6bits.SEG1COM2          /* bit 1 */
#define S2C2                 LCDDATA6bits.S2C2              /* bit 2 */
#define SEG2COM2             LCDDATA6bits.SEG2COM2          /* bit 2 */
#define S3C2                 LCDDATA6bits.S3C2              /* bit 3 */
#define SEG3COM2             LCDDATA6bits.SEG3COM2          /* bit 3 */
#define S4C2                 LCDDATA6bits.S4C2              /* bit 4 */
#define SEG4COM2             LCDDATA6bits.SEG4COM2          /* bit 4 */
#define S5C2                 LCDDATA6bits.S5C2              /* bit 5 */
#define SEG5COM2             LCDDATA6bits.SEG5COM2          /* bit 5 */
#define S6C2                 LCDDATA6bits.S6C2              /* bit 6 */
#define SEG6COM2             LCDDATA6bits.SEG6COM2          /* bit 6 */
#define S7C2                 LCDDATA6bits.S7C2              /* bit 7 */
#define SEG7COM2             LCDDATA6bits.SEG7COM2          /* bit 7 */

#define S8C2                 LCDDATA7bits.S8C2              /* bit 0 */
#define SEG8COM2             LCDDATA7bits.SEG8COM2          /* bit 0 */
#define S9C2                 LCDDATA7bits.S9C2              /* bit 1 */
#define SEG9COM2             LCDDATA7bits.SEG9COM2          /* bit 1 */
#define S10C2                LCDDATA7bits.S10C2             /* bit 2 */
#define SEG10COM2            LCDDATA7bits.SEG10COM2         /* bit 2 */
#define S11C2                LCDDATA7bits.S11C2             /* bit 3 */
#define SEG11COM2            LCDDATA7bits.SEG11COM2         /* bit 3 */
#define S12C2                LCDDATA7bits.S12C2             /* bit 4 */
#define SEG12COM2            LCDDATA7bits.SEG12COM2         /* bit 4 */
#define S13C2                LCDDATA7bits.S13C2             /* bit 5 */
#define SEG13COM2            LCDDATA7bits.SEG13COM2         /* bit 5 */
#define S14C2                LCDDATA7bits.S14C2             /* bit 6 */
#define SEG14COM2            LCDDATA7bits.SEG14COM2         /* bit 6 */
#define S15C2                LCDDATA7bits.S15C2             /* bit 7 */
#define SEG15COM2            LCDDATA7bits.SEG15COM2         /* bit 7 */

#define S0C3                 LCDDATA9bits.S0C3              /* bit 0 */
#define SEG0COM3             LCDDATA9bits.SEG0COM3          /* bit 0 */
#define S1C3                 LCDDATA9bits.S1C3              /* bit 1 */
#define SEG1COM3             LCDDATA9bits.SEG1COM3          /* bit 1 */
#define S2C3                 LCDDATA9bits.S2C3              /* bit 2 */
#define SEG2COM3             LCDDATA9bits.SEG2COM3          /* bit 2 */
#define S3C3                 LCDDATA9bits.S3C3              /* bit 3 */
#define SEG3COM3             LCDDATA9bits.SEG3COM3          /* bit 3 */
#define S4C3                 LCDDATA9bits.S4C3              /* bit 4 */
#define SEG4COM3             LCDDATA9bits.SEG4COM3          /* bit 4 */
#define S5C3                 LCDDATA9bits.S5C3              /* bit 5 */
#define SEG5COM3             LCDDATA9bits.SEG5COM3          /* bit 5 */
#define S6C3                 LCDDATA9bits.S6C3              /* bit 6 */
#define SEG6COM3             LCDDATA9bits.SEG6COM3          /* bit 6 */
#define S7C3                 LCDDATA9bits.S7C3              /* bit 7 */
#define SEG7COM3             LCDDATA9bits.SEG7COM3          /* bit 7 */

#define LP0                  LCDPSbits.LP0                  /* bit 0 */
#define LP1                  LCDPSbits.LP1                  /* bit 1 */
#define LP2                  LCDPSbits.LP2                  /* bit 2 */
#define LP3                  LCDPSbits.LP3                  /* bit 3 */
#define WA                   LCDPSbits.WA                   /* bit 4 */
#define LCDA                 LCDPSbits.LCDA                 /* bit 5 */
#define BIASMD               LCDPSbits.BIASMD               /* bit 6 */
#define WFT                  LCDPSbits.WFT                  /* bit 7 */

#define SE0                  LCDSE0bits.SE0                 /* bit 0 */
#define SEGEN0               LCDSE0bits.SEGEN0              /* bit 0 */
#define SE1                  LCDSE0bits.SE1                 /* bit 1 */
#define SEGEN1               LCDSE0bits.SEGEN1              /* bit 1 */
#define SE2                  LCDSE0bits.SE2                 /* bit 2 */
#define SEGEN2               LCDSE0bits.SEGEN2              /* bit 2 */
#define SE3                  LCDSE0bits.SE3                 /* bit 3 */
#define SEGEN3               LCDSE0bits.SEGEN3              /* bit 3 */
#define SE4                  LCDSE0bits.SE4                 /* bit 4 */
#define SEGEN4               LCDSE0bits.SEGEN4              /* bit 4 */
#define SE5                  LCDSE0bits.SE5                 /* bit 5 */
#define SEGEN5               LCDSE0bits.SEGEN5              /* bit 5 */
#define SE6                  LCDSE0bits.SE6                 /* bit 6 */
#define SEGEN6               LCDSE0bits.SEGEN6              /* bit 6 */
#define SE7                  LCDSE0bits.SE7                 /* bit 7 */
#define SEGEN7               LCDSE0bits.SEGEN7              /* bit 7 */

#define SE8                  LCDSE1bits.SE8                 /* bit 0 */
#define SEGEN8               LCDSE1bits.SEGEN8              /* bit 0 */
#define SE9                  LCDSE1bits.SE9                 /* bit 1 */
#define SEGEN9               LCDSE1bits.SEGEN9              /* bit 1 */
#define SE10                 LCDSE1bits.SE10                /* bit 2 */
#define SEGEN10              LCDSE1bits.SEGEN10             /* bit 2 */
#define SE11                 LCDSE1bits.SE11                /* bit 3 */
#define SEGEN11              LCDSE1bits.SEGEN11             /* bit 3 */
#define SE12                 LCDSE1bits.SE12                /* bit 4 */
#define SEGEN12              LCDSE1bits.SEGEN12             /* bit 4 */
#define SE13                 LCDSE1bits.SE13                /* bit 5 */
#define SEGEN13              LCDSE1bits.SEGEN13             /* bit 5 */
#define SE14                 LCDSE1bits.SE14                /* bit 6 */
#define SEGEN14              LCDSE1bits.SEGEN14             /* bit 6 */
#define SE15                 LCDSE1bits.SE15                /* bit 7 */
#define SEGEN15              LCDSE1bits.SEGEN15             /* bit 7 */

#define LVDL0                LVDCONbits.LVDL0               /* bit 0 */
#define LVDL1                LVDCONbits.LVDL1               /* bit 1 */
#define LVDL2                LVDCONbits.LVDL2               /* bit 2 */
#define LVDEN                LVDCONbits.LVDEN               /* bit 4 */
#define IRVST                LVDCONbits.IRVST               /* bit 5 */

#define PS0                  OPTION_REGbits.PS0             /* bit 0 */
#define PS1                  OPTION_REGbits.PS1             /* bit 1 */
#define PS2                  OPTION_REGbits.PS2             /* bit 2 */
#define PSA                  OPTION_REGbits.PSA             /* bit 3 */
#define T0SE                 OPTION_REGbits.T0SE            /* bit 4 */
#define T0CS                 OPTION_REGbits.T0CS            /* bit 5 */
#define INTEDG               OPTION_REGbits.INTEDG          /* bit 6 */
#define NOT_RBPU             OPTION_REGbits.NOT_RBPU        /* bit 7 */

#define SCS                  OSCCONbits.SCS                 /* bit 0 */
#define LTS                  OSCCONbits.LTS                 /* bit 1 */
#define HTS                  OSCCONbits.HTS                 /* bit 2 */
#define OSTS                 OSCCONbits.OSTS                /* bit 3 */
#define IRCF0                OSCCONbits.IRCF0               /* bit 4 */
#define IRCF1                OSCCONbits.IRCF1               /* bit 5 */
#define IRCF2                OSCCONbits.IRCF2               /* bit 6 */

#define TUN0                 OSCTUNEbits.TUN0               /* bit 0 */
#define TUN1                 OSCTUNEbits.TUN1               /* bit 1 */
#define TUN2                 OSCTUNEbits.TUN2               /* bit 2 */
#define TUN3                 OSCTUNEbits.TUN3               /* bit 3 */
#define TUN4                 OSCTUNEbits.TUN4               /* bit 4 */

#define NOT_BO               PCONbits.NOT_BO                /* bit 0 */
#define NOT_BOR              PCONbits.NOT_BOR               /* bit 0 */
#define NOT_POR              PCONbits.NOT_POR               /* bit 1 */
#define SBOREN               PCONbits.SBOREN                /* bit 4 */

#define TMR1IE               PIE1bits.TMR1IE                /* bit 0 */
#define TMR2IE               PIE1bits.TMR2IE                /* bit 1 */
#define CCP1IE               PIE1bits.CCP1IE                /* bit 2 */
#define SSPIE                PIE1bits.SSPIE                 /* bit 3 */
#define TXIE                 PIE1bits.TXIE                  /* bit 4 */
#define RCIE                 PIE1bits.RCIE                  /* bit 5 */
#define ADIE                 PIE1bits.ADIE                  /* bit 6 */
#define EEIE                 PIE1bits.EEIE                  /* bit 7 */

#define LVDIE                PIE2bits.LVDIE                 /* bit 2 */
#define LCDIE                PIE2bits.LCDIE                 /* bit 4 */
#define C1IE                 PIE2bits.C1IE                  /* bit 5 */
#define C2IE                 PIE2bits.C2IE                  /* bit 6 */
#define OSFIE                PIE2bits.OSFIE                 /* bit 7 */

#define TMR1IF               PIR1bits.TMR1IF                /* bit 0 */
#define TMR2IF               PIR1bits.TMR2IF                /* bit 1 */
#define CCP1IF               PIR1bits.CCP1IF                /* bit 2 */
#define SSPIF                PIR1bits.SSPIF                 /* bit 3 */
#define TXIF                 PIR1bits.TXIF                  /* bit 4 */
#define RCIF                 PIR1bits.RCIF                  /* bit 5 */
#define ADIF                 PIR1bits.ADIF                  /* bit 6 */
#define EEIF                 PIR1bits.EEIF                  /* bit 7 */

#define LVDIF                PIR2bits.LVDIF                 /* bit 2 */
#define LCDIF                PIR2bits.LCDIF                 /* bit 4 */
#define C1IF                 PIR2bits.C1IF                  /* bit 5 */
#define C2IF                 PIR2bits.C2IF                  /* bit 6 */
#define OSFIF                PIR2bits.OSFIF                 /* bit 7 */

#define RA0                  PORTAbits.RA0                  /* bit 0 */
#define RA1                  PORTAbits.RA1                  /* bit 1 */
#define RA2                  PORTAbits.RA2                  /* bit 2 */
#define RA3                  PORTAbits.RA3                  /* bit 3 */
#define RA4                  PORTAbits.RA4                  /* bit 4 */
#define RA5                  PORTAbits.RA5                  /* bit 5 */

#define RB0                  PORTBbits.RB0                  /* bit 0 */
#define RB1                  PORTBbits.RB1                  /* bit 1 */
#define RB2                  PORTBbits.RB2                  /* bit 2 */
#define RB3                  PORTBbits.RB3                  /* bit 3 */
#define RB4                  PORTBbits.RB4                  /* bit 4 */
#define RB5                  PORTBbits.RB5                  /* bit 5 */
#define RB6                  PORTBbits.RB6                  /* bit 6 */
#define RB7                  PORTBbits.RB7                  /* bit 7 */

#define RC0                  PORTCbits.RC0                  /* bit 0 */
#define RC1                  PORTCbits.RC1                  /* bit 1 */
#define RC2                  PORTCbits.RC2                  /* bit 2 */
#define RC3                  PORTCbits.RC3                  /* bit 3 */
#define RC4                  PORTCbits.RC4                  /* bit 4 */
#define RC5                  PORTCbits.RC5                  /* bit 5 */
#define RC6                  PORTCbits.RC6                  /* bit 6 */
#define RC7                  PORTCbits.RC7                  /* bit 7 */

#define RE0                  PORTEbits.RE0                  /* bit 0 */
#define RE1                  PORTEbits.RE1                  /* bit 1 */
#define RE2                  PORTEbits.RE2                  /* bit 2 */

#define RCD8                 RCSTAbits.RCD8                 /* bit 0 */
#define RX9D                 RCSTAbits.RX9D                 /* bit 0 */
#define OERR                 RCSTAbits.OERR                 /* bit 1 */
#define FERR                 RCSTAbits.FERR                 /* bit 2 */
#define ADDEN                RCSTAbits.ADDEN                /* bit 3 */
#define CREN                 RCSTAbits.CREN                 /* bit 4 */
#define SREN                 RCSTAbits.SREN                 /* bit 5 */
#define NOT_RC8              RCSTAbits.NOT_RC8              /* bit 6 */
#define RC8_9                RCSTAbits.RC8_9                /* bit 6 */
#define RC9                  RCSTAbits.RC9                  /* bit 6 */
#define RX9                  RCSTAbits.RX9                  /* bit 6 */
#define SPEN                 RCSTAbits.SPEN                 /* bit 7 */

#define SSPM0                SSPCONbits.SSPM0               /* bit 0 */
#define SSPM1                SSPCONbits.SSPM1               /* bit 1 */
#define SSPM2                SSPCONbits.SSPM2               /* bit 2 */
#define SSPM3                SSPCONbits.SSPM3               /* bit 3 */
#define CKP                  SSPCONbits.CKP                 /* bit 4 */
#define SSPEN                SSPCONbits.SSPEN               /* bit 5 */
#define SSPOV                SSPCONbits.SSPOV               /* bit 6 */
#define WCOL                 SSPCONbits.WCOL                /* bit 7 */

#define BF                   SSPSTATbits.BF                 /* bit 0 */
#define UA                   SSPSTATbits.UA                 /* bit 1 */
#define I2C_READ             SSPSTATbits.I2C_READ           /* bit 2 */
#define NOT_W                SSPSTATbits.NOT_W              /* bit 2 */
#define NOT_WRITE            SSPSTATbits.NOT_WRITE          /* bit 2 */
#define R                    SSPSTATbits.R                  /* bit 2 */
#define READ_WRITE           SSPSTATbits.READ_WRITE         /* bit 2 */
#define R_W                  SSPSTATbits.R_W                /* bit 2 */
#define I2C_START            SSPSTATbits.I2C_START          /* bit 3 */
#define S                    SSPSTATbits.S                  /* bit 3 */
#define I2C_STOP             SSPSTATbits.I2C_STOP           /* bit 4 */
#define P                    SSPSTATbits.P                  /* bit 4 */
#define D                    SSPSTATbits.D                  /* bit 5 */
#define DATA_ADDRESS         SSPSTATbits.DATA_ADDRESS       /* bit 5 */
#define D_A                  SSPSTATbits.D_A                /* bit 5 */
#define I2C_DATA             SSPSTATbits.I2C_DATA           /* bit 5 */
#define NOT_A                SSPSTATbits.NOT_A              /* bit 5 */
#define NOT_ADDRESS          SSPSTATbits.NOT_ADDRESS        /* bit 5 */
#define CKE                  SSPSTATbits.CKE                /* bit 6 */
#define SMP                  SSPSTATbits.SMP                /* bit 7 */

#define C                    STATUSbits.C                   /* bit 0 */
#define DC                   STATUSbits.DC                  /* bit 1 */
#define Z                    STATUSbits.Z                   /* bit 2 */
#define NOT_PD               STATUSbits.NOT_PD              /* bit 3 */
#define NOT_TO               STATUSbits.NOT_TO              /* bit 4 */
#define RP0                  STATUSbits.RP0                 /* bit 5 */
#define RP1                  STATUSbits.RP1                 /* bit 6 */
#define IRP                  STATUSbits.IRP                 /* bit 7 */

#define TMR1ON               T1CONbits.TMR1ON               /* bit 0 */
#define TMR1CS               T1CONbits.TMR1CS               /* bit 1 */
#define NOT_T1SYNC           T1CONbits.NOT_T1SYNC           /* bit 2 */
#define T1INSYNC             T1CONbits.T1INSYNC             /* bit 2 */
#define T1SYNC               T1CONbits.T1SYNC               /* bit 2 */
#define T1OSCEN              T1CONbits.T1OSCEN              /* bit 3 */
#define T1CKPS0              T1CONbits.T1CKPS0              /* bit 4 */
#define T1CKPS1              T1CONbits.T1CKPS1              /* bit 5 */
#define T1GE                 T1CONbits.T1GE                 /* bit 6 */
#define T1GINV               T1CONbits.T1GINV               /* bit 7 */

#define T2CKPS0              T2CONbits.T2CKPS0              /* bit 0 */
#define T2CKPS1              T2CONbits.T2CKPS1              /* bit 1 */
#define TMR2ON               T2CONbits.TMR2ON               /* bit 2 */
#define TOUTPS0              T2CONbits.TOUTPS0              /* bit 3 */
#define TOUTPS1              T2CONbits.TOUTPS1              /* bit 4 */
#define TOUTPS2              T2CONbits.TOUTPS2              /* bit 5 */
#define TOUTPS3              T2CONbits.TOUTPS3              /* bit 6 */

#define TRISA0               TRISAbits.TRISA0               /* bit 0 */
#define TRISA1               TRISAbits.TRISA1               /* bit 1 */
#define TRISA2               TRISAbits.TRISA2               /* bit 2 */
#define TRISA3               TRISAbits.TRISA3               /* bit 3 */
#define TRISA4               TRISAbits.TRISA4               /* bit 4 */
#define TRISA5               TRISAbits.TRISA5               /* bit 5 */

#define TRISB0               TRISBbits.TRISB0               /* bit 0 */
#define TRISB1               TRISBbits.TRISB1               /* bit 1 */
#define TRISB2               TRISBbits.TRISB2               /* bit 2 */
#define TRISB3               TRISBbits.TRISB3               /* bit 3 */
#define TRISB4               TRISBbits.TRISB4               /* bit 4 */
#define TRISB5               TRISBbits.TRISB5               /* bit 5 */
#define TRISB6               TRISBbits.TRISB6               /* bit 6 */
#define TRISB7               TRISBbits.TRISB7               /* bit 7 */

#define TRISC0               TRISCbits.TRISC0               /* bit 0 */
#define TRISC1               TRISCbits.TRISC1               /* bit 1 */
#define TRISC2               TRISCbits.TRISC2               /* bit 2 */
#define TRISC3               TRISCbits.TRISC3               /* bit 3 */
#define TRISC4               TRISCbits.TRISC4               /* bit 4 */
#define TRISC5               TRISCbits.TRISC5               /* bit 5 */
#define TRISC6               TRISCbits.TRISC6               /* bit 6 */
#define TRISC7               TRISCbits.TRISC7               /* bit 7 */

#define TRISE0               TRISEbits.TRISE0               /* bit 0 */
#define TRISE1               TRISEbits.TRISE1               /* bit 1 */
#define TRISE2               TRISEbits.TRISE2               /* bit 2 */

#define TX9D                 TXSTAbits.TX9D                 /* bit 0 */
#define TXD8                 TXSTAbits.TXD8                 /* bit 0 */
#define TRMT                 TXSTAbits.TRMT                 /* bit 1 */
#define BRGH                 TXSTAbits.BRGH                 /* bit 2 */
#define SYNC                 TXSTAbits.SYNC                 /* bit 4 */
#define TXEN                 TXSTAbits.TXEN                 /* bit 5 */
#define NOT_TX8              TXSTAbits.NOT_TX8              /* bit 6 */
#define TX8_9                TXSTAbits.TX8_9                /* bit 6 */
#define TX9                  TXSTAbits.TX9                  /* bit 6 */
#define CSRC                 TXSTAbits.CSRC                 /* bit 7 */

#define VR0                  VRCONbits.VR0                  /* bit 0 */
#define VR1                  VRCONbits.VR1                  /* bit 1 */
#define VR2                  VRCONbits.VR2                  /* bit 2 */
#define VR3                  VRCONbits.VR3                  /* bit 3 */
#define VRR                  VRCONbits.VRR                  /* bit 5 */
#define VREN                 VRCONbits.VREN                 /* bit 7 */

#define SWDTE                WDTCONbits.SWDTE               /* bit 0 */
#define SWDTEN               WDTCONbits.SWDTEN              /* bit 0 */
#define WDTPS0               WDTCONbits.WDTPS0              /* bit 1 */
#define WDTPS1               WDTCONbits.WDTPS1              /* bit 2 */
#define WDTPS2               WDTCONbits.WDTPS2              /* bit 3 */
#define WDTPS3               WDTCONbits.WDTPS3              /* bit 4 */

#define WPUB0                WPUBbits.WPUB0                 /* bit 0 */
#define WPUB1                WPUBbits.WPUB1                 /* bit 1 */
#define WPUB2                WPUBbits.WPUB2                 /* bit 2 */
#define WPUB3                WPUBbits.WPUB3                 /* bit 3 */
#define WPUB4                WPUBbits.WPUB4                 /* bit 4 */
#define WPUB5                WPUBbits.WPUB5                 /* bit 5 */
#define WPUB6                WPUBbits.WPUB6                 /* bit 6 */
#define WPUB7                WPUBbits.WPUB7                 /* bit 7 */

#define WPU0                 WPUbits.WPU0                   /* bit 0 */
#define WPU1                 WPUbits.WPU1                   /* bit 1 */
#define WPU2                 WPUbits.WPU2                   /* bit 2 */
#define WPU3                 WPUbits.WPU3                   /* bit 3 */
#define WPU4                 WPUbits.WPU4                   /* bit 4 */
#define WPU5                 WPUbits.WPU5                   /* bit 5 */
#define WPU6                 WPUbits.WPU6                   /* bit 6 */
#define WPU7                 WPUbits.WPU7                   /* bit 7 */
#endif /* NO_BIT_DEFINES */

#ifndef NO_LEGACY_NAMES
#define ADCON0_bits          ADCON0bits
#define ADCON1_bits          ADCON1bits
#define ANSEL_bits           ANSELbits
#define CCP1CON_bits         CCP1CONbits
#define CMCON0_bits          CMCON0bits
#define CMCON1_bits          CMCON1bits
#define EEADRH_bits          EEADRHbits
#define EEADRL_bits          EEADRLbits
#define EECON1_bits          EECON1bits
#define INTCON_bits          INTCONbits
#define IOC_bits             IOCbits
#define IOCB_bits            IOCBbits
#define LCDCON_bits          LCDCONbits
#define LCDDATA0_bits        LCDDATA0bits
#define LCDDATA1_bits        LCDDATA1bits
#define LCDDATA10_bits       LCDDATA10bits
#define LCDDATA3_bits        LCDDATA3bits
#define LCDDATA4_bits        LCDDATA4bits
#define LCDDATA6_bits        LCDDATA6bits
#define LCDDATA7_bits        LCDDATA7bits
#define LCDDATA9_bits        LCDDATA9bits
#define LCDPS_bits           LCDPSbits
#define LCDSE0_bits          LCDSE0bits
#define LCDSE1_bits          LCDSE1bits
#define LVDCON_bits          LVDCONbits
#define OPTION_REG_bits      OPTION_REGbits
#define OSCCON_bits          OSCCONbits
#define OSCTUNE_bits         OSCTUNEbits
#define PCON_bits            PCONbits
#define PIE1_bits            PIE1bits
#define PIE2_bits            PIE2bits
#define PIR1_bits            PIR1bits
#define PIR2_bits            PIR2bits
#define PORTA_bits           PORTAbits
#define PORTB_bits           PORTBbits
#define PORTC_bits           PORTCbits
#define PORTE_bits           PORTEbits
#define RCSTA_bits           RCSTAbits
#define SSPCON_bits          SSPCONbits
#define SSPSTAT_bits         SSPSTATbits
#define STATUS_bits          STATUSbits
#define T1CON_bits           T1CONbits
#define T2CON_bits           T2CONbits
#define TRISA_bits           TRISAbits
#define TRISB_bits           TRISBbits
#define TRISC_bits           TRISCbits
#define TRISE_bits           TRISEbits
#define TXSTA_bits           TXSTAbits
#define VRCON_bits           VRCONbits
#define WDTCON_bits          WDTCONbits
#define WPU_bits             WPUbits
#define WPUB_bits            WPUBbits
#endif /* NO_LEGACY_NAMES */

#endif
