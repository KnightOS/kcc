//
// Register Declarations for Microchip 16F1936 Processor
//
//
// This header file was automatically generated by:
//
//	inc2h.pl V4850
//
//	Copyright (c) 2002, Kevin L. Pauba, All Rights Reserved
//
//	SDCC is licensed under the GNU Public license (GPL) v2.  Note that
//	this license covers the code to the compiler and other executables,
//	but explicitly does not cover any code or objects generated by sdcc.
//	We have not yet decided on a license for the run time libraries, but
//	it will not put any requirements on code linked against it. See:
// 
//	http://www.gnu.org/copyleft/gpl/html
//
//	See http://sdcc.sourceforge.net/ for the latest information on sdcc.
//
// 
#ifndef P16F1936_H
#define P16F1936_H

//
// Register addresses.
//
#define INDF0_ADDR	0x0000
#define INDF1_ADDR	0x0001
#define PCL_ADDR	0x0002
#define STATUS_ADDR	0x0003
#define FSR0L_ADDR	0x0004
#define FSR0_ADDR	0x0004
#define FSR0H_ADDR	0x0005
#define FSR1L_ADDR	0x0006
#define FSR1_ADDR	0x0006
#define FSR1H_ADDR	0x0007
#define BSR_ADDR	0x0008
#define WREG_ADDR	0x0009
#define PCLATH_ADDR	0x000A
#define INTCON_ADDR	0x000B
#define PORTA_ADDR	0x000C
#define PORTB_ADDR	0x000D
#define PORTC_ADDR	0x000E
#define PORTE_ADDR	0x0010
#define PIR1_ADDR	0x0011
#define PIR2_ADDR	0x0012
#define PIR3_ADDR	0x0013
#define TMR0_ADDR	0x0015
#define TMR1L_ADDR	0x0016
#define TMR1_ADDR	0x0016
#define TMR1H_ADDR	0x0017
#define T1CON_ADDR	0x0018
#define T1GCON_ADDR	0x0019
#define TMR2_ADDR	0x001A
#define PR2_ADDR	0x001B
#define T2CON_ADDR	0x001C
#define CPSCON0_ADDR	0x001E
#define CPSCON1_ADDR	0x001F
#define TRISA_ADDR	0x008C
#define TRISB_ADDR	0x008D
#define TRISC_ADDR	0x008E
#define TRISE_ADDR	0x0090
#define PIE1_ADDR	0x0091
#define PIE2_ADDR	0x0092
#define PIE3_ADDR	0x0093
#define OPTION_REG_ADDR	0x0095
#define PCON_ADDR	0x0096
#define WDTCON_ADDR	0x0097
#define OSCTUNE_ADDR	0x0098
#define OSCCON_ADDR	0x0099
#define OSCCONL_ADDR	0x0099
#define OSCCONH_ADDR	0x009A
#define OSCSTAT_ADDR	0x009A
#define ADRESL_ADDR	0x009B
#define ADRES_ADDR	0x009B
#define ADRESH_ADDR	0x009C
#define ADCON0_ADDR	0x009D
#define ADCON1_ADDR	0x009E
#define LATA_ADDR	0x010C
#define LATB_ADDR	0x010D
#define LATC_ADDR	0x010E
#define LATE_ADDR	0x0110
#define CM1CON0_ADDR	0x0111
#define CM1CON1_ADDR	0x0112
#define CM2CON0_ADDR	0x0113
#define CM2CON1_ADDR	0x0114
#define CMOUT_ADDR	0x0115
#define BORCON_ADDR	0x0116
#define FVRCON_ADDR	0x0117
#define DACCON0_ADDR	0x0118
#define DACCON1_ADDR	0x0119
#define SRCON0_ADDR	0x011A
#define SRCON1_ADDR	0x011B
#define APFCON_ADDR	0x011D
#define ANSELA_ADDR	0x018C
#define ANSELB_ADDR	0x018D
#define EEADRL_ADDR	0x0191
#define EEADR_ADDR	0x0191
#define EEADRH_ADDR	0x0192
#define EEDATL_ADDR	0x0193
#define EEDAT_ADDR	0x0193
#define EEDATH_ADDR	0x0194
#define EECON1_ADDR	0x0195
#define EECON2_ADDR	0x0196
#define RCREG_ADDR	0x0199
#define TXREG_ADDR	0x019A
#define SPBRGL_ADDR	0x019B
#define SPBRG_ADDR	0x019B
#define SPBRGH_ADDR	0x019C
#define RCSTA_ADDR	0x019D
#define TXSTA_ADDR	0x019E
#define BAUDCON_ADDR	0x019F
#define WPUB_ADDR	0x020D
#define WPUE_ADDR	0x0210
#define SSPBUF_ADDR	0x0211
#define SSPADD_ADDR	0x0212
#define SSPMSK_ADDR	0x0213
#define SSPSTAT_ADDR	0x0214
#define SSPCON1_ADDR	0x0215
#define SSPCON_ADDR	0x0215
#define SSPCON2_ADDR	0x0216
#define SSPCON3_ADDR	0x0217
#define CCPR1L_ADDR	0x0291
#define CCPR1H_ADDR	0x0292
#define CCP1CON_ADDR	0x0293
#define PWM1CON_ADDR	0x0294
#define CCP1AS_ADDR	0x0295
#define ECCP1AS_ADDR	0x0295
#define PSTR1CON_ADDR	0x0296
#define CCPR2L_ADDR	0x0298
#define CCPR2H_ADDR	0x0299
#define CCP2CON_ADDR	0x029A
#define PWM2CON_ADDR	0x029B
#define CCP2AS_ADDR	0x029C
#define ECCP2AS_ADDR	0x029C
#define PSTR2CON_ADDR	0x029D
#define CCPTMRS0_ADDR	0x029E
#define CCPTMRS1_ADDR	0x029F
#define CCPR3L_ADDR	0x0311
#define CCPR3H_ADDR	0x0312
#define CCP3CON_ADDR	0x0313
#define PWM3CON_ADDR	0x0314
#define CCP3AS_ADDR	0x0315
#define ECCP3AS_ADDR	0x0315
#define PSTR3CON_ADDR	0x0316
#define CCPR4L_ADDR	0x0318
#define CCPR4H_ADDR	0x0319
#define CCP4CON_ADDR	0x031A
#define CCPR5L_ADDR	0x031C
#define CCPR5H_ADDR	0x031D
#define CCP5CON_ADDR	0x031E
#define IOCBP_ADDR	0x0394
#define IOCBN_ADDR	0x0395
#define IOCBF_ADDR	0x0396
#define TMR4_ADDR	0x0415
#define PR4_ADDR	0x0416
#define T4CON_ADDR	0x0417
#define TMR6_ADDR	0x041C
#define PR6_ADDR	0x041D
#define T6CON_ADDR	0x041E
#define LCDCON_ADDR	0x0791
#define LCDPS_ADDR	0x0792
#define LCDREF_ADDR	0x0793
#define LCDCST_ADDR	0x0794
#define LCDRL_ADDR	0x0795
#define LCDSE0_ADDR	0x0798
#define LCDSE1_ADDR	0x0799
#define LCDDATA0_ADDR	0x07A0
#define LCDDATA1_ADDR	0x07A1
#define LCDDATA3_ADDR	0x07A3
#define LCDDATA4_ADDR	0x07A4
#define LCDDATA6_ADDR	0x07A6
#define LCDDATA7_ADDR	0x07A7
#define LCDDATA9_ADDR	0x07A9
#define LCDDATA10_ADDR	0x07AA
#define STATUS_SHAD_ADDR	0x0FE4
#define WREG_SHAD_ADDR	0x0FE5
#define BSR_SHAD_ADDR	0x0FE6
#define PCLATH_SHAD_ADDR	0x0FE7
#define FSR0L_SHAD_ADDR	0x0FE8
#define FSR0H_SHAD_ADDR	0x0FE9
#define FSR1L_SHAD_ADDR	0x0FEA
#define FSR1H_SHAD_ADDR	0x0FEB
#define STKPTR_ADDR	0x0FED
#define TOSL_ADDR	0x0FEE
#define TOSH_ADDR	0x0FEF

//
// Memory organization.
//



//         LIST

//==========================================================================
//  MPASM PIC16F1936 processor include
// 
//  (c) Copyright 1999-2009 Microchip Technology, All rights reserved
//==========================================================================

//         NOLIST

//==========================================================================
//  This header file defines configurations, registers, and other useful
//  bits of information for the PIC16F1936 microcontroller.  These names
//  are taken to match the data sheets as closely as possible.
//
//  Note that the processor must be selected before this file is included.
//  The processor may be selected the following ways:
//
//       1. Command line switch:
//               C:\MPASM MYFILE.ASM /PIC16F1936
//       2. LIST directive in the source file
//               LIST   P=PIC16F1936
//       3. Processor Type entry in the MPASM full-screen interface
//       4. Setting the processor in the MPLAB Project Dialog
//==========================================================================

//==========================================================================
//
//       Verify Processor
//
//==========================================================================
//        IFNDEF __16F1936
//            MESSG "Processor-header file mismatch.  Verify selected processor."
//         ENDIF

// W               EQU 0
// F               EQU 1


//==========================================================================
//
//       Register Definitions
//
//==========================================================================

//----- Register Files -----------------------------------------------------

//-----Bank0------------------
extern __sfr  __at (INDF0_ADDR)                   INDF0;
extern __sfr  __at (INDF1_ADDR)                   INDF1;
extern __sfr  __at (PCL_ADDR)                     PCL;
extern __sfr  __at (STATUS_ADDR)                  STATUS;
extern __sfr  __at (FSR0L_ADDR)                   FSR0L;
extern __sfr  __at (FSR0_ADDR)                    FSR0;
extern __sfr  __at (FSR0H_ADDR)                   FSR0H;
extern __sfr  __at (FSR1L_ADDR)                   FSR1L;
extern __sfr  __at (FSR1_ADDR)                    FSR1;
extern __sfr  __at (FSR1H_ADDR)                   FSR1H;
extern __sfr  __at (BSR_ADDR)                     BSR;
extern __sfr  __at (WREG_ADDR)                    WREG;
extern __sfr  __at (PCLATH_ADDR)                  PCLATH;
extern __sfr  __at (INTCON_ADDR)                  INTCON;
extern __sfr  __at (PORTA_ADDR)                   PORTA;
extern __sfr  __at (PORTB_ADDR)                   PORTB;
extern __sfr  __at (PORTC_ADDR)                   PORTC;
extern __sfr  __at (PORTE_ADDR)                   PORTE;
extern __sfr  __at (PIR1_ADDR)                    PIR1;
extern __sfr  __at (PIR2_ADDR)                    PIR2;
extern __sfr  __at (PIR3_ADDR)                    PIR3;
extern __sfr  __at (TMR0_ADDR)                    TMR0;
extern __sfr  __at (TMR1L_ADDR)                   TMR1L;
extern __sfr  __at (TMR1_ADDR)                    TMR1;
extern __sfr  __at (TMR1H_ADDR)                   TMR1H;
extern __sfr  __at (T1CON_ADDR)                   T1CON;
extern __sfr  __at (T1GCON_ADDR)                  T1GCON;
extern __sfr  __at (TMR2_ADDR)                    TMR2;
extern __sfr  __at (PR2_ADDR)                     PR2;
extern __sfr  __at (T2CON_ADDR)                   T2CON;
extern __sfr  __at (CPSCON0_ADDR)                 CPSCON0;
extern __sfr  __at (CPSCON1_ADDR)                 CPSCON1;

//-----Bank1------------------
extern __sfr  __at (TRISA_ADDR)                   TRISA;
extern __sfr  __at (TRISB_ADDR)                   TRISB;
extern __sfr  __at (TRISC_ADDR)                   TRISC;
extern __sfr  __at (TRISE_ADDR)                   TRISE;
extern __sfr  __at (PIE1_ADDR)                    PIE1;
extern __sfr  __at (PIE2_ADDR)                    PIE2;
extern __sfr  __at (PIE3_ADDR)                    PIE3;
extern __sfr  __at (OPTION_REG_ADDR)              OPTION_REG;
extern __sfr  __at (PCON_ADDR)                    PCON;
extern __sfr  __at (WDTCON_ADDR)                  WDTCON;
extern __sfr  __at (OSCTUNE_ADDR)                 OSCTUNE;
extern __sfr  __at (OSCCON_ADDR)                  OSCCON;
extern __sfr  __at (OSCCONL_ADDR)                 OSCCONL;
extern __sfr  __at (OSCCONH_ADDR)                 OSCCONH;
extern __sfr  __at (OSCSTAT_ADDR)                 OSCSTAT;
extern __sfr  __at (ADRESL_ADDR)                  ADRESL;
extern __sfr  __at (ADRES_ADDR)                   ADRES;
extern __sfr  __at (ADRESH_ADDR)                  ADRESH;
extern __sfr  __at (ADCON0_ADDR)                  ADCON0;
extern __sfr  __at (ADCON1_ADDR)                  ADCON1;

//-----Bank2------------------
extern __sfr  __at (LATA_ADDR)                    LATA;
extern __sfr  __at (LATB_ADDR)                    LATB;
extern __sfr  __at (LATC_ADDR)                    LATC;
extern __sfr  __at (LATE_ADDR)                    LATE;
extern __sfr  __at (CM1CON0_ADDR)                 CM1CON0;
extern __sfr  __at (CM1CON1_ADDR)                 CM1CON1;
extern __sfr  __at (CM2CON0_ADDR)                 CM2CON0;
extern __sfr  __at (CM2CON1_ADDR)                 CM2CON1;
extern __sfr  __at (CMOUT_ADDR)                   CMOUT;
extern __sfr  __at (BORCON_ADDR)                  BORCON;
extern __sfr  __at (FVRCON_ADDR)                  FVRCON;
extern __sfr  __at (DACCON0_ADDR)                 DACCON0;
extern __sfr  __at (DACCON1_ADDR)                 DACCON1;
extern __sfr  __at (SRCON0_ADDR)                  SRCON0;
extern __sfr  __at (SRCON1_ADDR)                  SRCON1;
extern __sfr  __at (APFCON_ADDR)                  APFCON;

//-----Bank3------------------
extern __sfr  __at (ANSELA_ADDR)                  ANSELA;
extern __sfr  __at (ANSELB_ADDR)                  ANSELB;
extern __sfr  __at (EEADRL_ADDR)                  EEADRL;
extern __sfr  __at (EEADR_ADDR)                   EEADR;
extern __sfr  __at (EEADRH_ADDR)                  EEADRH;
extern __sfr  __at (EEDATL_ADDR)                  EEDATL;
extern __sfr  __at (EEDAT_ADDR)                   EEDAT;
extern __sfr  __at (EEDATH_ADDR)                  EEDATH;
extern __sfr  __at (EECON1_ADDR)                  EECON1;
extern __sfr  __at (EECON2_ADDR)                  EECON2;
extern __sfr  __at (RCREG_ADDR)                   RCREG;
extern __sfr  __at (TXREG_ADDR)                   TXREG;
extern __sfr  __at (SPBRGL_ADDR)                  SPBRGL;
extern __sfr  __at (SPBRG_ADDR)                   SPBRG;
extern __sfr  __at (SPBRGH_ADDR)                  SPBRGH;
extern __sfr  __at (RCSTA_ADDR)                   RCSTA;
extern __sfr  __at (TXSTA_ADDR)                   TXSTA;
extern __sfr  __at (BAUDCON_ADDR)                 BAUDCON;

//-----Bank4------------------
extern __sfr  __at (WPUB_ADDR)                    WPUB;
extern __sfr  __at (WPUE_ADDR)                    WPUE;
extern __sfr  __at (SSPBUF_ADDR)                  SSPBUF;
extern __sfr  __at (SSPADD_ADDR)                  SSPADD;
extern __sfr  __at (SSPMSK_ADDR)                  SSPMSK;
extern __sfr  __at (SSPSTAT_ADDR)                 SSPSTAT;
extern __sfr  __at (SSPCON1_ADDR)                 SSPCON1;
extern __sfr  __at (SSPCON_ADDR)                  SSPCON;
extern __sfr  __at (SSPCON2_ADDR)                 SSPCON2;
extern __sfr  __at (SSPCON3_ADDR)                 SSPCON3;

//-----Bank5------------------
extern __sfr  __at (CCPR1L_ADDR)                  CCPR1L;
extern __sfr  __at (CCPR1H_ADDR)                  CCPR1H;
extern __sfr  __at (CCP1CON_ADDR)                 CCP1CON;
extern __sfr  __at (PWM1CON_ADDR)                 PWM1CON;
extern __sfr  __at (CCP1AS_ADDR)                  CCP1AS;
extern __sfr  __at (ECCP1AS_ADDR)                 ECCP1AS;
extern __sfr  __at (PSTR1CON_ADDR)                PSTR1CON;
extern __sfr  __at (CCPR2L_ADDR)                  CCPR2L;
extern __sfr  __at (CCPR2H_ADDR)                  CCPR2H;
extern __sfr  __at (CCP2CON_ADDR)                 CCP2CON;
extern __sfr  __at (PWM2CON_ADDR)                 PWM2CON;
extern __sfr  __at (CCP2AS_ADDR)                  CCP2AS;
extern __sfr  __at (ECCP2AS_ADDR)                 ECCP2AS;
extern __sfr  __at (PSTR2CON_ADDR)                PSTR2CON;
extern __sfr  __at (CCPTMRS0_ADDR)                CCPTMRS0;
extern __sfr  __at (CCPTMRS1_ADDR)                CCPTMRS1;

//-----Bank6------------------
extern __sfr  __at (CCPR3L_ADDR)                  CCPR3L;
extern __sfr  __at (CCPR3H_ADDR)                  CCPR3H;
extern __sfr  __at (CCP3CON_ADDR)                 CCP3CON;
extern __sfr  __at (PWM3CON_ADDR)                 PWM3CON;
extern __sfr  __at (CCP3AS_ADDR)                  CCP3AS;
extern __sfr  __at (ECCP3AS_ADDR)                 ECCP3AS;
extern __sfr  __at (PSTR3CON_ADDR)                PSTR3CON;
extern __sfr  __at (CCPR4L_ADDR)                  CCPR4L;
extern __sfr  __at (CCPR4H_ADDR)                  CCPR4H;
extern __sfr  __at (CCP4CON_ADDR)                 CCP4CON;
extern __sfr  __at (CCPR5L_ADDR)                  CCPR5L;
extern __sfr  __at (CCPR5H_ADDR)                  CCPR5H;
extern __sfr  __at (CCP5CON_ADDR)                 CCP5CON;

//-----Bank7------------------
extern __sfr  __at (IOCBP_ADDR)                   IOCBP;
extern __sfr  __at (IOCBN_ADDR)                   IOCBN;
extern __sfr  __at (IOCBF_ADDR)                   IOCBF;

//-----Bank8------------------
extern __sfr  __at (TMR4_ADDR)                    TMR4;
extern __sfr  __at (PR4_ADDR)                     PR4;
extern __sfr  __at (T4CON_ADDR)                   T4CON;
extern __sfr  __at (TMR6_ADDR)                    TMR6;
extern __sfr  __at (PR6_ADDR)                     PR6;
extern __sfr  __at (T6CON_ADDR)                   T6CON;

//-----Bank15------------------
extern __sfr  __at (LCDCON_ADDR)                  LCDCON;
extern __sfr  __at (LCDPS_ADDR)                   LCDPS;
extern __sfr  __at (LCDREF_ADDR)                  LCDREF;
extern __sfr  __at (LCDCST_ADDR)                  LCDCST;
extern __sfr  __at (LCDRL_ADDR)                   LCDRL;
extern __sfr  __at (LCDSE0_ADDR)                  LCDSE0;
extern __sfr  __at (LCDSE1_ADDR)                  LCDSE1;
extern __sfr  __at (LCDDATA0_ADDR)                LCDDATA0;
extern __sfr  __at (LCDDATA1_ADDR)                LCDDATA1;
extern __sfr  __at (LCDDATA3_ADDR)                LCDDATA3;
extern __sfr  __at (LCDDATA4_ADDR)                LCDDATA4;
extern __sfr  __at (LCDDATA6_ADDR)                LCDDATA6;
extern __sfr  __at (LCDDATA7_ADDR)                LCDDATA7;
extern __sfr  __at (LCDDATA9_ADDR)                LCDDATA9;
extern __sfr  __at (LCDDATA10_ADDR)               LCDDATA10;

//-----Bank31------------------
extern __sfr  __at (STATUS_SHAD_ADDR)             STATUS_SHAD;
extern __sfr  __at (WREG_SHAD_ADDR)               WREG_SHAD;
extern __sfr  __at (BSR_SHAD_ADDR)                BSR_SHAD;
extern __sfr  __at (PCLATH_SHAD_ADDR)             PCLATH_SHAD;
extern __sfr  __at (FSR0L_SHAD_ADDR)              FSR0L_SHAD;
extern __sfr  __at (FSR0H_SHAD_ADDR)              FSR0H_SHAD;
extern __sfr  __at (FSR1L_SHAD_ADDR)              FSR1L_SHAD;
extern __sfr  __at (FSR1H_SHAD_ADDR)              FSR1H_SHAD;
extern __sfr  __at (STKPTR_ADDR)                  STKPTR;
extern __sfr  __at (TOSL_ADDR)                    TOSL;
extern __sfr  __at (TOSH_ADDR)                    TOSH;


//----- STATUS Bits -----------------------------------------------------


//----- BSR Bits -----------------------------------------------------



//----- INTCON Bits -----------------------------------------------------


//----- PORTA Bits -----------------------------------------------------



//----- PORTB Bits -----------------------------------------------------



//----- PORTC Bits -----------------------------------------------------



//----- PORTE Bits -----------------------------------------------------



//----- PIR1 Bits -----------------------------------------------------


//----- PIR2 Bits -----------------------------------------------------


//----- PIR3 Bits -----------------------------------------------------


//----- T1CON Bits -----------------------------------------------------



//----- T1GCON Bits -----------------------------------------------------



//----- T2CON Bits -----------------------------------------------------



//----- CPSCON0 Bits -----------------------------------------------------



//----- CPSCON1 Bits -----------------------------------------------------



//----- TRISA Bits -----------------------------------------------------



//----- TRISB Bits -----------------------------------------------------



//----- TRISC Bits -----------------------------------------------------



//----- PIE1 Bits -----------------------------------------------------


//----- PIE2 Bits -----------------------------------------------------


//----- PIE3 Bits -----------------------------------------------------


//----- OPTION_REG Bits -----------------------------------------------------



//----- PCON Bits -----------------------------------------------------


//----- WDTCON Bits -----------------------------------------------------



//----- OSCTUNE Bits -----------------------------------------------------



//----- OSCCON Bits -----------------------------------------------------



//----- OSCSTAT Bits -----------------------------------------------------


//----- ADCON0 Bits -----------------------------------------------------



//----- ADCON1 Bits -----------------------------------------------------



//----- LATA Bits -----------------------------------------------------



//----- LATB Bits -----------------------------------------------------



//----- LATC Bits -----------------------------------------------------



//----- CM1CON0 Bits -----------------------------------------------------


//----- CM1CON1 Bits -----------------------------------------------------



//----- CM2CON0 Bits -----------------------------------------------------


//----- CM2CON1 Bits -----------------------------------------------------



//----- CMOUT Bits -----------------------------------------------------


//----- BORCON Bits -----------------------------------------------------


//----- FVRCON Bits -----------------------------------------------------



//----- DACCON0 Bits -----------------------------------------------------



//----- DACCON1 Bits -----------------------------------------------------



//----- SRCON0 Bits -----------------------------------------------------



//----- SRCON1 Bits -----------------------------------------------------


//----- APFCON Bits -----------------------------------------------------


//----- ANSELA Bits -----------------------------------------------------



//----- ANSELB Bits -----------------------------------------------------



//----- EECON1 Bits -----------------------------------------------------


//----- RCSTA Bits -----------------------------------------------------


//----- TXSTA Bits -----------------------------------------------------


//----- BAUDCON Bits -----------------------------------------------------


//----- WPUB Bits -----------------------------------------------------



//----- WPUE Bits -----------------------------------------------------


//----- SSPSTAT Bits -----------------------------------------------------


//----- SSPCON1 Bits -----------------------------------------------------


//----- SSPCON Bits -----------------------------------------------------


//----- SSPCON2 Bits -----------------------------------------------------


//----- SSPCON3 Bits -----------------------------------------------------


//----- CCP1CON Bits -----------------------------------------------------



//----- PWM1CON Bits -----------------------------------------------------


//----- CCP1AS Bits -----------------------------------------------------


//----- ECCP1AS Bits -----------------------------------------------------


//----- PSTR1CON Bits -----------------------------------------------------


//----- CCP2CON Bits -----------------------------------------------------


//----- PWM2CON Bits -----------------------------------------------------


//----- CCP2AS Bits -----------------------------------------------------


//----- ECCP2AS Bits -----------------------------------------------------


//----- PSTR2CON Bits -----------------------------------------------------


//----- CCPTMRS0 Bits -----------------------------------------------------


//----- CCPTMRS1 Bits -----------------------------------------------------


//----- CCP3CON Bits -----------------------------------------------------


//----- PWM3CON Bits -----------------------------------------------------


//----- CCP3AS Bits -----------------------------------------------------


//----- ECCP3AS Bits -----------------------------------------------------


//----- PSTR3CON Bits -----------------------------------------------------


//----- CCP4CON Bits -----------------------------------------------------


//----- CCP5CON Bits -----------------------------------------------------


//----- IOCBP Bits -----------------------------------------------------



//----- IOCBN Bits -----------------------------------------------------



//----- IOCBF Bits -----------------------------------------------------



//----- T4CON Bits -----------------------------------------------------



//----- T6CON Bits -----------------------------------------------------



//----- LCDCON Bits -----------------------------------------------------



//----- LCDPS Bits -----------------------------------------------------



//----- LCDREF Bits -----------------------------------------------------


//----- LCDCST Bits -----------------------------------------------------



//----- LCDRL Bits -----------------------------------------------------



//----- LCDSE0 Bits -----------------------------------------------------


//----- LCDSE1 Bits -----------------------------------------------------


//----- LCDDATA0 Bits -----------------------------------------------------


//----- LCDDATA1 Bits -----------------------------------------------------


//----- LCDDATA3 Bits -----------------------------------------------------


//----- LCDDATA4 Bits -----------------------------------------------------


//----- LCDDATA6 Bits -----------------------------------------------------


//----- LCDDATA7 Bits -----------------------------------------------------


//----- LCDDATA9 Bits -----------------------------------------------------


//----- LCDDATA10 Bits -----------------------------------------------------


//----- STATUS_SHAD Bits -----------------------------------------------------



//==========================================================================
//
//       RAM Definitions
//
//==========================================================================
//        __MAXRAM  H'0FFF'
//        __BADRAM  H'000F'
//        __BADRAM  H'0014'
//        __BADRAM  H'001D'
//        __BADRAM  H'008F'
//        __BADRAM  H'0094'
//        __BADRAM  H'009F'
//        __BADRAM  H'010F'
//        __BADRAM  H'011C'
//        __BADRAM  H'011E'-H'011F'
//        __BADRAM  H'018E'-H'0190'
//        __BADRAM  H'0197'-H'0198'
//        __BADRAM  H'020C'
//        __BADRAM  H'020E'-H'020F'
//        __BADRAM  H'0218'-H'021F'
//        __BADRAM  H'028C'-H'0290'
//        __BADRAM  H'0297'
//        __BADRAM  H'030C'-H'0310'
//        __BADRAM  H'0317'
//        __BADRAM  H'031B'
//        __BADRAM  H'031F'
//        __BADRAM  H'0330'-H'036F'
//        __BADRAM  H'038C'-H'0393'
//        __BADRAM  H'0397'-H'039F'
//        __BADRAM  H'03A0'-H'03EF'
//        __BADRAM  H'040C'-H'0414'
//        __BADRAM  H'0418'-H'041B'
//        __BADRAM  H'041F'
//        __BADRAM  H'0420'-H'046F'
//        __BADRAM  H'048C'-H'049F'
//        __BADRAM  H'04A0'-H'04EF'
//        __BADRAM  H'050C'-H'051F'
//        __BADRAM  H'0520'-H'056F'
//        __BADRAM  H'058C'-H'059F'
//        __BADRAM  H'05A0'-H'05EF'
//        __BADRAM  H'060C'-H'061F'
//        __BADRAM  H'0620'-H'066F'
//        __BADRAM  H'068C'-H'069F'
//        __BADRAM  H'06A0'-H'06EF'
//        __BADRAM  H'070C'-H'071F'
//        __BADRAM  H'0720'-H'076F'
//        __BADRAM  H'078C'-H'0790'
//        __BADRAM  H'0796'-H'0797'
//        __BADRAM  H'079A'-H'079F'
//        __BADRAM  H'07A2'
//        __BADRAM  H'07A5'
//        __BADRAM  H'07A8'
//        __BADRAM  H'07AB'-H'07EF'
//        __BADRAM  H'080C'-H'081F'
//        __BADRAM  H'0820'-H'086F'
//        __BADRAM  H'088C'-H'089F'
//        __BADRAM  H'08A0'-H'08EF'
//        __BADRAM  H'090C'-H'091F'
//        __BADRAM  H'0920'-H'096F'
//        __BADRAM  H'098C'-H'099F'
//        __BADRAM  H'09A0'-H'09EF'
//        __BADRAM  H'0A0C'-H'0A1F'
//        __BADRAM  H'0A20'-H'0A6F'
//        __BADRAM  H'0A8C'-H'0A9F'
//        __BADRAM  H'0AA0'-H'0AEF'
//        __BADRAM  H'0B0C'-H'0B1F'
//        __BADRAM  H'0B20'-H'0B6F'
//        __BADRAM  H'0B8C'-H'0B9F'
//        __BADRAM  H'0BA0'-H'0BEF'
//        __BADRAM  H'0C0C'-H'0C1F'
//        __BADRAM  H'0C20'-H'0C6F'
//        __BADRAM  H'0C8C'-H'0C9F'
//        __BADRAM  H'0CA0'-H'0CEF'
//        __BADRAM  H'0D0C'-H'0D1F'
//        __BADRAM  H'0D20'-H'0D6F'
//        __BADRAM  H'0D8C'-H'0D9F'
//        __BADRAM  H'0DA0'-H'0DEF'
//        __BADRAM  H'0E0C'-H'0E1F'
//        __BADRAM  H'0E20'-H'0E6F'
//        __BADRAM  H'0E8C'-H'0E9F'
//        __BADRAM  H'0EA0'-H'0EEF'
//        __BADRAM  H'0F0C'-H'0F1F'
//        __BADRAM  H'0F20'-H'0F6F'
//        __BADRAM  H'0F8C'-H'0FE3'
//        __BADRAM  H'0FEC'

//==========================================================================
//
//       Configuration Bits
//
//   NAME            Address
//   CONFIG1           8007h
//   CONFIG2           8008h
//
//==========================================================================

// The following is an assignment of address values for all of the
// configuration registers for the purpose of table reads
#define _CONFIG1             0x8007
#define _CONFIG2             0x8008

//----- CONFIG1 Options --------------------------------------------------
#define _FOSC_LP             0xFFF8    // LP Oscillator, Low-power crystal on RA6/OSC2/CLKO pin and RA7/OSC1/CLKI
#define _FOSC_XT             0xFFF9    // XT Oscillator, Crystal/resonator on RA6/OSC2/CLKO pin and RA7/OSC1/CLKI
#define _FOSC_HS             0xFFFA    // HS Oscillator, High speed crystal/resonator on RA6/OSC2/CLKO pin and RA7/OSC1/CLKI
#define _FOSC_EXTRC          0xFFFB    // EXTRC Oscillator, RC on RA7/OSC1/CLKIN
#define _FOSC_INTOSC         0xFFFC    // INTOSC Oscillator, I/O function on RA7/OSC1/CLKI
#define _FOSC_ECL            0xFFFD    // ECL, External Clock, Low Power Mode: CLKI on RA7/OSC1/CLKI
#define _FOSC_ECM            0xFFFE    // ECM, External Clock, Medium Power Mode: CLKI on RA7/OSC1/CLKI
#define _FOSC_ECH            0xFFFF    // ECH, External Clock, High Power Mode: CLKI on RA7/OSC1/CLKI

#define _WDTE_OFF            0xFFE7    // WDT disabled
#define _WDTE_SWDTEN         0xFFEF    // WDT controlled by the SWDTEN bit in the WDTCON register
#define _WDTE_NSLEEP         0xFFF7    // WDT enabled while running and disabled in Sleep
#define _WDTE_ON             0xFFFF    // WDT enabled

#define _PWRTE_ON            0xFFDF    // PWRT enabled
#define _PWRTE_OFF           0xFFFF    // PWRT disabled

#define _MCLRE_OFF           0xFFBF    // RE3/MCLR/VPP pin function is digital input
#define _MCLRE_ON            0xFFFF    // RE3/MCLR/VPP pin function is MCLR

#define _CP_ON               0xFF7F    // On
#define _CP_OFF              0xFFFF    // Off

#define _CPD_ON              0xFEFF    // Data memory code protection is enabled
#define _CPD_OFF             0xFFFF    // Data memory code protection is disabled

#define _BOREN_OFF           0xF9FF    // Brown-out Reset disabled
#define _BOREN_SBODEN        0xFBFF    // Brown-out Reset controlled by the SBOREN bit in the PCON register
#define _BOREN_NSLEEP        0xFDFF    // Brown-out Reset enabled while running and disabled in Sleep
#define _BOREN_ON            0xFFFF    // Brown-out Reset enabled

#define _CLKOUTEN_ON         0xF7FF    // CLKOUT function is enabled on RA6/CLKOUT pin
#define _CLKOUTEN_OFF        0xFFFF    // CLKOUT function is disabled. I/O or oscillator function on RA6/CLKOUT

#define _IESO_OFF            0xEFFF    // Internal/External Switchover mode is disabled
#define _IESO_ON             0xFFFF    // Internal/External Switchover mode is enabled

#define _FCMEN_OFF           0xDFFF    // Fail-Safe Clock Monitor is disabled
#define _FCMEN_ON            0xFFFF    // Fail-Safe Clock Monitor is enabled

//----- CONFIG2 Options --------------------------------------------------
#define _WRT_ALL             0xFFFC    // 000h to 1FFFh write protected, no addresses may be modified by EECON control
#define _WRT_HALF            0xFFFD    // 000h to FFFh write protected, 1000h to 1FFFh may be modified by EECON control
#define _WRT_BOOT            0xFFFE    // 000h to 1FFh write protected, 200h to 1FFFh may be modified by EECON control
#define _WRT_OFF             0xFFFF    // Write protection off

#define _VCAPEN_RA0          0xFFCF    // VCAP functionality is enabled on RA0
#define _VCAPEN_RA5          0xFFDF    // VCAP functionality is enabled on RA5
#define _VCAPEN_RA6          0xFFEF    // VCAP functionality is enabled on RA6
#define _VCAPEN_OFF          0xFFFF    // All VCAP pin functions are disabled

#define _PLLEN_OFF           0xFEFF    // 4x PLL disabled
#define _PLLEN_ON            0xFFFF    // 4x PLL enabled

#define _STVREN_OFF          0xFDFF    // Stack Overflow or underflow will not cause a Reset
#define _STVREN_ON           0xFFFF    // Stack Overflow or underflow will cause a Reset

#define _BORV_27             0xFBFF    // Brown-out Reset Voltage (VBOR) set to 2.7 V
#define _BORV_19             0xFFFF    // Brown-out Reset Voltage (VBOR) set to 1.9 V

#define _LVP_OFF             0xDFFF    // HV on MCLR/VPP must be used for programming
#define _LVP_ON              0xFFFF    // Low voltage programming enabled


#define _DEVID1              0x008006

#define _IDLOC0              0x008000
#define _IDLOC1              0x008001
#define _IDLOC2              0x008002
#define _IDLOC3              0x008003

//         LIST

// ----- ADCON0 bits --------------------
typedef union {
  struct {
    unsigned char ADON:1;
    unsigned char GO_NOT_DONE:1;
    unsigned char CHS0:1;
    unsigned char CHS1:1;
    unsigned char CHS2:1;
    unsigned char CHS3:1;
    unsigned char CHS4:1;
    unsigned char :1;
  };
  struct {
    unsigned char :1;
    unsigned char ADGO:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __ADCON0_bits_t;
extern volatile __ADCON0_bits_t __at(ADCON0_ADDR) ADCON0_bits;

#ifndef NO_BIT_DEFINES
#define ADON                 ADCON0_bits.ADON
#define GO_NOT_DONE          ADCON0_bits.GO_NOT_DONE
#define ADGO                 ADCON0_bits.ADGO
#define CHS0                 ADCON0_bits.CHS0
#define CHS1                 ADCON0_bits.CHS1
#define CHS2                 ADCON0_bits.CHS2
#define CHS3                 ADCON0_bits.CHS3
#define CHS4                 ADCON0_bits.CHS4
#endif /* NO_BIT_DEFINES */

// ----- ADCON1 bits --------------------
typedef union {
  struct {
    unsigned char ADPREF0:1;
    unsigned char ADPREF1:1;
    unsigned char ADNREF:1;
    unsigned char :1;
    unsigned char ADCS0:1;
    unsigned char ADCS1:1;
    unsigned char ADCS2:1;
    unsigned char ADFM:1;
  };
} __ADCON1_bits_t;
extern volatile __ADCON1_bits_t __at(ADCON1_ADDR) ADCON1_bits;

#ifndef NO_BIT_DEFINES
#define ADPREF0              ADCON1_bits.ADPREF0
#define ADPREF1              ADCON1_bits.ADPREF1
#define ADNREF               ADCON1_bits.ADNREF
#define ADCS0                ADCON1_bits.ADCS0
#define ADCS1                ADCON1_bits.ADCS1
#define ADCS2                ADCON1_bits.ADCS2
#define ADFM                 ADCON1_bits.ADFM
#endif /* NO_BIT_DEFINES */

// ----- ANSELA bits --------------------
typedef union {
  struct {
    unsigned char ANSA0:1;
    unsigned char ANSA1:1;
    unsigned char ANSA2:1;
    unsigned char ANSA3:1;
    unsigned char ANSA4:1;
    unsigned char ANSA5:1;
    unsigned char :1;
    unsigned char :1;
  };
} __ANSELA_bits_t;
extern volatile __ANSELA_bits_t __at(ANSELA_ADDR) ANSELA_bits;

#ifndef NO_BIT_DEFINES
#define ANSA0                ANSELA_bits.ANSA0
#define ANSA1                ANSELA_bits.ANSA1
#define ANSA2                ANSELA_bits.ANSA2
#define ANSA3                ANSELA_bits.ANSA3
#define ANSA4                ANSELA_bits.ANSA4
#define ANSA5                ANSELA_bits.ANSA5
#endif /* NO_BIT_DEFINES */

// ----- ANSELB bits --------------------
typedef union {
  struct {
    unsigned char ANSB0:1;
    unsigned char ANSB1:1;
    unsigned char ANSB2:1;
    unsigned char ANSB3:1;
    unsigned char ANSB4:1;
    unsigned char ANSB5:1;
    unsigned char :1;
    unsigned char :1;
  };
} __ANSELB_bits_t;
extern volatile __ANSELB_bits_t __at(ANSELB_ADDR) ANSELB_bits;

#ifndef NO_BIT_DEFINES
#define ANSB0                ANSELB_bits.ANSB0
#define ANSB1                ANSELB_bits.ANSB1
#define ANSB2                ANSELB_bits.ANSB2
#define ANSB3                ANSELB_bits.ANSB3
#define ANSB4                ANSELB_bits.ANSB4
#define ANSB5                ANSELB_bits.ANSB5
#endif /* NO_BIT_DEFINES */

// ----- APFCON bits --------------------
typedef union {
  struct {
    unsigned char CCP2SEL:1;
    unsigned char SSSEL:1;
    unsigned char C2OUTSEL:1;
    unsigned char SRNQSEL:1;
    unsigned char P2BSEL:1;
    unsigned char T1GSEL:1;
    unsigned char CCP3SEL:1;
    unsigned char :1;
  };
} __APFCON_bits_t;
extern volatile __APFCON_bits_t __at(APFCON_ADDR) APFCON_bits;

#ifndef NO_BIT_DEFINES
#define CCP2SEL              APFCON_bits.CCP2SEL
#define SSSEL                APFCON_bits.SSSEL
#define C2OUTSEL             APFCON_bits.C2OUTSEL
#define SRNQSEL              APFCON_bits.SRNQSEL
#define P2BSEL               APFCON_bits.P2BSEL
#define T1GSEL               APFCON_bits.T1GSEL
#define CCP3SEL              APFCON_bits.CCP3SEL
#endif /* NO_BIT_DEFINES */

// ----- BAUDCON bits --------------------
typedef union {
  struct {
    unsigned char ABDEN:1;
    unsigned char WUE:1;
    unsigned char :1;
    unsigned char BRG16:1;
    unsigned char SCKP:1;
    unsigned char :1;
    unsigned char RCIDL:1;
    unsigned char ABDOVF:1;
  };
} __BAUDCON_bits_t;
extern volatile __BAUDCON_bits_t __at(BAUDCON_ADDR) BAUDCON_bits;

#ifndef NO_BIT_DEFINES
#define ABDEN                BAUDCON_bits.ABDEN
#define WUE                  BAUDCON_bits.WUE
#define BRG16                BAUDCON_bits.BRG16
#define SCKP                 BAUDCON_bits.SCKP
#define RCIDL                BAUDCON_bits.RCIDL
#define ABDOVF               BAUDCON_bits.ABDOVF
#endif /* NO_BIT_DEFINES */

// ----- BORCON bits --------------------
typedef union {
  struct {
    unsigned char BORRDY:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char SBOREN:1;
  };
} __BORCON_bits_t;
extern volatile __BORCON_bits_t __at(BORCON_ADDR) BORCON_bits;

#ifndef NO_BIT_DEFINES
#define BORRDY               BORCON_bits.BORRDY
#define SBOREN               BORCON_bits.SBOREN
#endif /* NO_BIT_DEFINES */

// ----- BSR bits --------------------
typedef union {
  struct {
    unsigned char BSR0:1;
    unsigned char BSR1:1;
    unsigned char BSR2:1;
    unsigned char BSR3:1;
    unsigned char BSR4:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __BSR_bits_t;
extern volatile __BSR_bits_t __at(BSR_ADDR) BSR_bits;

#ifndef NO_BIT_DEFINES
#define BSR0                 BSR_bits.BSR0
#define BSR1                 BSR_bits.BSR1
#define BSR2                 BSR_bits.BSR2
#define BSR3                 BSR_bits.BSR3
#define BSR4                 BSR_bits.BSR4
#endif /* NO_BIT_DEFINES */

// ----- CCP1AS bits --------------------
typedef union {
  struct {
    unsigned char PSS1BD0:1;
    unsigned char PSS1BD1:1;
    unsigned char PSS1AC0:1;
    unsigned char PSS1AC1:1;
    unsigned char CCP1AS0:1;
    unsigned char CCP1AS1:1;
    unsigned char CCP1AS2:1;
    unsigned char CCP1ASE:1;
  };
} __CCP1AS_bits_t;
extern volatile __CCP1AS_bits_t __at(CCP1AS_ADDR) CCP1AS_bits;

// ----- CCP1CON bits --------------------
typedef union {
  struct {
    unsigned char CCP1M0:1;
    unsigned char CCP1M1:1;
    unsigned char CCP1M2:1;
    unsigned char CCP1M3:1;
    unsigned char DC1B0:1;
    unsigned char DC1B1:1;
    unsigned char P1M0:1;
    unsigned char P1M1:1;
  };
} __CCP1CON_bits_t;
extern volatile __CCP1CON_bits_t __at(CCP1CON_ADDR) CCP1CON_bits;

#ifndef NO_BIT_DEFINES
#define CCP1M0               CCP1CON_bits.CCP1M0
#define CCP1M1               CCP1CON_bits.CCP1M1
#define CCP1M2               CCP1CON_bits.CCP1M2
#define CCP1M3               CCP1CON_bits.CCP1M3
#define DC1B0                CCP1CON_bits.DC1B0
#define DC1B1                CCP1CON_bits.DC1B1
#define P1M0                 CCP1CON_bits.P1M0
#define P1M1                 CCP1CON_bits.P1M1
#endif /* NO_BIT_DEFINES */

// ----- CCP2AS bits --------------------
typedef union {
  struct {
    unsigned char PSS2BD0:1;
    unsigned char PSS2BD1:1;
    unsigned char PSS2AC0:1;
    unsigned char PSS2AC1:1;
    unsigned char CCP2AS0:1;
    unsigned char CCP2AS1:1;
    unsigned char CCP2AS2:1;
    unsigned char CCP2ASE:1;
  };
} __CCP2AS_bits_t;
extern volatile __CCP2AS_bits_t __at(CCP2AS_ADDR) CCP2AS_bits;

// ----- CCP2CON bits --------------------
typedef union {
  struct {
    unsigned char CCP2M0:1;
    unsigned char CCP2M1:1;
    unsigned char CCP2M2:1;
    unsigned char CCP2M3:1;
    unsigned char DC2B0:1;
    unsigned char DC2B1:1;
    unsigned char P2M0:1;
    unsigned char P2M1:1;
  };
} __CCP2CON_bits_t;
extern volatile __CCP2CON_bits_t __at(CCP2CON_ADDR) CCP2CON_bits;

#ifndef NO_BIT_DEFINES
#define CCP2M0               CCP2CON_bits.CCP2M0
#define CCP2M1               CCP2CON_bits.CCP2M1
#define CCP2M2               CCP2CON_bits.CCP2M2
#define CCP2M3               CCP2CON_bits.CCP2M3
#define DC2B0                CCP2CON_bits.DC2B0
#define DC2B1                CCP2CON_bits.DC2B1
#define P2M0                 CCP2CON_bits.P2M0
#define P2M1                 CCP2CON_bits.P2M1
#endif /* NO_BIT_DEFINES */

// ----- CCP3AS bits --------------------
typedef union {
  struct {
    unsigned char PSS3BD0:1;
    unsigned char PSS3BD1:1;
    unsigned char PSS3AC0:1;
    unsigned char PSS3AC1:1;
    unsigned char CCP3AS0:1;
    unsigned char CCP3AS1:1;
    unsigned char CCP3AS2:1;
    unsigned char CCP3ASE:1;
  };
} __CCP3AS_bits_t;
extern volatile __CCP3AS_bits_t __at(CCP3AS_ADDR) CCP3AS_bits;

// ----- CCP3CON bits --------------------
typedef union {
  struct {
    unsigned char CCP3M0:1;
    unsigned char CCP3M1:1;
    unsigned char CCP3M2:1;
    unsigned char CCP3M3:1;
    unsigned char DC3B0:1;
    unsigned char DC3B1:1;
    unsigned char P3M0:1;
    unsigned char P3M1:1;
  };
} __CCP3CON_bits_t;
extern volatile __CCP3CON_bits_t __at(CCP3CON_ADDR) CCP3CON_bits;

#ifndef NO_BIT_DEFINES
#define CCP3M0               CCP3CON_bits.CCP3M0
#define CCP3M1               CCP3CON_bits.CCP3M1
#define CCP3M2               CCP3CON_bits.CCP3M2
#define CCP3M3               CCP3CON_bits.CCP3M3
#define DC3B0                CCP3CON_bits.DC3B0
#define DC3B1                CCP3CON_bits.DC3B1
#define P3M0                 CCP3CON_bits.P3M0
#define P3M1                 CCP3CON_bits.P3M1
#endif /* NO_BIT_DEFINES */

// ----- CCP4CON bits --------------------
typedef union {
  struct {
    unsigned char CCP4M0:1;
    unsigned char CCP4M1:1;
    unsigned char CCP4M2:1;
    unsigned char CCP4M3:1;
    unsigned char DC4B0:1;
    unsigned char DC4B1:1;
    unsigned char :1;
    unsigned char :1;
  };
} __CCP4CON_bits_t;
extern volatile __CCP4CON_bits_t __at(CCP4CON_ADDR) CCP4CON_bits;

#ifndef NO_BIT_DEFINES
#define CCP4M0               CCP4CON_bits.CCP4M0
#define CCP4M1               CCP4CON_bits.CCP4M1
#define CCP4M2               CCP4CON_bits.CCP4M2
#define CCP4M3               CCP4CON_bits.CCP4M3
#define DC4B0                CCP4CON_bits.DC4B0
#define DC4B1                CCP4CON_bits.DC4B1
#endif /* NO_BIT_DEFINES */

// ----- CCP5CON bits --------------------
typedef union {
  struct {
    unsigned char CCP5M0:1;
    unsigned char CCP5M1:1;
    unsigned char CCP5M2:1;
    unsigned char CCP5M3:1;
    unsigned char DC5B0:1;
    unsigned char DC5B1:1;
    unsigned char :1;
    unsigned char :1;
  };
} __CCP5CON_bits_t;
extern volatile __CCP5CON_bits_t __at(CCP5CON_ADDR) CCP5CON_bits;

#ifndef NO_BIT_DEFINES
#define CCP5M0               CCP5CON_bits.CCP5M0
#define CCP5M1               CCP5CON_bits.CCP5M1
#define CCP5M2               CCP5CON_bits.CCP5M2
#define CCP5M3               CCP5CON_bits.CCP5M3
#define DC5B0                CCP5CON_bits.DC5B0
#define DC5B1                CCP5CON_bits.DC5B1
#endif /* NO_BIT_DEFINES */

// ----- CCPTMRS0 bits --------------------
typedef union {
  struct {
    unsigned char C1TSEL0:1;
    unsigned char C1TSEL1:1;
    unsigned char C2TSEL0:1;
    unsigned char C2TSEL1:1;
    unsigned char C3TSEL0:1;
    unsigned char C3TSEL1:1;
    unsigned char C4TSEL0:1;
    unsigned char C4TSEL1:1;
  };
} __CCPTMRS0_bits_t;
extern volatile __CCPTMRS0_bits_t __at(CCPTMRS0_ADDR) CCPTMRS0_bits;

#ifndef NO_BIT_DEFINES
#define C1TSEL0              CCPTMRS0_bits.C1TSEL0
#define C1TSEL1              CCPTMRS0_bits.C1TSEL1
#define C2TSEL0              CCPTMRS0_bits.C2TSEL0
#define C2TSEL1              CCPTMRS0_bits.C2TSEL1
#define C3TSEL0              CCPTMRS0_bits.C3TSEL0
#define C3TSEL1              CCPTMRS0_bits.C3TSEL1
#define C4TSEL0              CCPTMRS0_bits.C4TSEL0
#define C4TSEL1              CCPTMRS0_bits.C4TSEL1
#endif /* NO_BIT_DEFINES */

// ----- CCPTMRS1 bits --------------------
typedef union {
  struct {
    unsigned char C5TSEL0:1;
    unsigned char C5TSEL1:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __CCPTMRS1_bits_t;
extern volatile __CCPTMRS1_bits_t __at(CCPTMRS1_ADDR) CCPTMRS1_bits;

#ifndef NO_BIT_DEFINES
#define C5TSEL0              CCPTMRS1_bits.C5TSEL0
#define C5TSEL1              CCPTMRS1_bits.C5TSEL1
#endif /* NO_BIT_DEFINES */

// ----- CM1CON0 bits --------------------
typedef union {
  struct {
    unsigned char C1SYNC:1;
    unsigned char C1HYS:1;
    unsigned char C1SP:1;
    unsigned char :1;
    unsigned char C1POL:1;
    unsigned char C1OE:1;
    unsigned char C1OUT:1;
    unsigned char C1ON:1;
  };
} __CM1CON0_bits_t;
extern volatile __CM1CON0_bits_t __at(CM1CON0_ADDR) CM1CON0_bits;

#ifndef NO_BIT_DEFINES
#define C1SYNC               CM1CON0_bits.C1SYNC
#define C1HYS                CM1CON0_bits.C1HYS
#define C1SP                 CM1CON0_bits.C1SP
#define C1POL                CM1CON0_bits.C1POL
#define C1OE                 CM1CON0_bits.C1OE
#define C1OUT                CM1CON0_bits.C1OUT
#define C1ON                 CM1CON0_bits.C1ON
#endif /* NO_BIT_DEFINES */

// ----- CM1CON1 bits --------------------
typedef union {
  struct {
    unsigned char C1NCH0:1;
    unsigned char C1NCH1:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char C1PCH0:1;
    unsigned char C1PCH1:1;
    unsigned char C1INTN:1;
    unsigned char C1INTP:1;
  };
} __CM1CON1_bits_t;
extern volatile __CM1CON1_bits_t __at(CM1CON1_ADDR) CM1CON1_bits;

#ifndef NO_BIT_DEFINES
#define C1NCH0               CM1CON1_bits.C1NCH0
#define C1NCH1               CM1CON1_bits.C1NCH1
#define C1PCH0               CM1CON1_bits.C1PCH0
#define C1PCH1               CM1CON1_bits.C1PCH1
#define C1INTN               CM1CON1_bits.C1INTN
#define C1INTP               CM1CON1_bits.C1INTP
#endif /* NO_BIT_DEFINES */

// ----- CM2CON0 bits --------------------
typedef union {
  struct {
    unsigned char C2SYNC:1;
    unsigned char C2HYS:1;
    unsigned char C2SP:1;
    unsigned char :1;
    unsigned char C2POL:1;
    unsigned char C2OE:1;
    unsigned char C2OUT:1;
    unsigned char C2ON:1;
  };
} __CM2CON0_bits_t;
extern volatile __CM2CON0_bits_t __at(CM2CON0_ADDR) CM2CON0_bits;

#ifndef NO_BIT_DEFINES
#define C2SYNC               CM2CON0_bits.C2SYNC
#define C2HYS                CM2CON0_bits.C2HYS
#define C2SP                 CM2CON0_bits.C2SP
#define C2POL                CM2CON0_bits.C2POL
#define C2OE                 CM2CON0_bits.C2OE
#define C2OUT                CM2CON0_bits.C2OUT
#define C2ON                 CM2CON0_bits.C2ON
#endif /* NO_BIT_DEFINES */

// ----- CM2CON1 bits --------------------
typedef union {
  struct {
    unsigned char C2NCH0:1;
    unsigned char C2NCH1:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char C2PCH0:1;
    unsigned char C2PCH1:1;
    unsigned char C2INTN:1;
    unsigned char C2INTP:1;
  };
} __CM2CON1_bits_t;
extern volatile __CM2CON1_bits_t __at(CM2CON1_ADDR) CM2CON1_bits;

#ifndef NO_BIT_DEFINES
#define C2NCH0               CM2CON1_bits.C2NCH0
#define C2NCH1               CM2CON1_bits.C2NCH1
#define C2PCH0               CM2CON1_bits.C2PCH0
#define C2PCH1               CM2CON1_bits.C2PCH1
#define C2INTN               CM2CON1_bits.C2INTN
#define C2INTP               CM2CON1_bits.C2INTP
#endif /* NO_BIT_DEFINES */

// ----- CMOUT bits --------------------
typedef union {
  struct {
    unsigned char MC1OUT:1;
    unsigned char MC2OUT:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __CMOUT_bits_t;
extern volatile __CMOUT_bits_t __at(CMOUT_ADDR) CMOUT_bits;

#ifndef NO_BIT_DEFINES
#define MC1OUT               CMOUT_bits.MC1OUT
#define MC2OUT               CMOUT_bits.MC2OUT
#endif /* NO_BIT_DEFINES */

// ----- CPSCON0 bits --------------------
typedef union {
  struct {
    unsigned char T0XCS:1;
    unsigned char CPSOUT:1;
    unsigned char CPSRNG0:1;
    unsigned char CPSRNG1:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char CPSON:1;
  };
} __CPSCON0_bits_t;
extern volatile __CPSCON0_bits_t __at(CPSCON0_ADDR) CPSCON0_bits;

#ifndef NO_BIT_DEFINES
#define T0XCS                CPSCON0_bits.T0XCS
#define CPSOUT               CPSCON0_bits.CPSOUT
#define CPSRNG0              CPSCON0_bits.CPSRNG0
#define CPSRNG1              CPSCON0_bits.CPSRNG1
#define CPSON                CPSCON0_bits.CPSON
#endif /* NO_BIT_DEFINES */

// ----- CPSCON1 bits --------------------
typedef union {
  struct {
    unsigned char CPSCH0:1;
    unsigned char CPSCH1:1;
    unsigned char CPSCH2:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __CPSCON1_bits_t;
extern volatile __CPSCON1_bits_t __at(CPSCON1_ADDR) CPSCON1_bits;

#ifndef NO_BIT_DEFINES
#define CPSCH0               CPSCON1_bits.CPSCH0
#define CPSCH1               CPSCON1_bits.CPSCH1
#define CPSCH2               CPSCON1_bits.CPSCH2
#endif /* NO_BIT_DEFINES */

// ----- DACCON0 bits --------------------
typedef union {
  struct {
    unsigned char DACNSS:1;
    unsigned char :1;
    unsigned char DACPSS0:1;
    unsigned char DACPSS1:1;
    unsigned char :1;
    unsigned char DACOE:1;
    unsigned char DACLPS:1;
    unsigned char DACEN:1;
  };
} __DACCON0_bits_t;
extern volatile __DACCON0_bits_t __at(DACCON0_ADDR) DACCON0_bits;

#ifndef NO_BIT_DEFINES
#define DACNSS               DACCON0_bits.DACNSS
#define DACPSS0              DACCON0_bits.DACPSS0
#define DACPSS1              DACCON0_bits.DACPSS1
#define DACOE                DACCON0_bits.DACOE
#define DACLPS               DACCON0_bits.DACLPS
#define DACEN                DACCON0_bits.DACEN
#endif /* NO_BIT_DEFINES */

// ----- DACCON1 bits --------------------
typedef union {
  struct {
    unsigned char DACR0:1;
    unsigned char DACR1:1;
    unsigned char DACR2:1;
    unsigned char DACR3:1;
    unsigned char DACR4:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __DACCON1_bits_t;
extern volatile __DACCON1_bits_t __at(DACCON1_ADDR) DACCON1_bits;

#ifndef NO_BIT_DEFINES
#define DACR0                DACCON1_bits.DACR0
#define DACR1                DACCON1_bits.DACR1
#define DACR2                DACCON1_bits.DACR2
#define DACR3                DACCON1_bits.DACR3
#define DACR4                DACCON1_bits.DACR4
#endif /* NO_BIT_DEFINES */

// ----- ECCP1AS bits --------------------
typedef union {
  struct {
    unsigned char PSS1BD0:1;
    unsigned char PSS1BD1:1;
    unsigned char PSS1AC0:1;
    unsigned char PSS1AC1:1;
    unsigned char CCP1AS0:1;
    unsigned char CCP1AS1:1;
    unsigned char CCP1AS2:1;
    unsigned char CCP1ASE:1;
  };
} __ECCP1AS_bits_t;
extern volatile __ECCP1AS_bits_t __at(ECCP1AS_ADDR) ECCP1AS_bits;

#ifndef NO_BIT_DEFINES
#define PSS1BD0              ECCP1AS_bits.PSS1BD0
#define PSS1BD1              ECCP1AS_bits.PSS1BD1
#define PSS1AC0              ECCP1AS_bits.PSS1AC0
#define PSS1AC1              ECCP1AS_bits.PSS1AC1
#define CCP1AS0              ECCP1AS_bits.CCP1AS0
#define CCP1AS1              ECCP1AS_bits.CCP1AS1
#define CCP1AS2              ECCP1AS_bits.CCP1AS2
#define CCP1ASE              ECCP1AS_bits.CCP1ASE
#endif /* NO_BIT_DEFINES */

// ----- ECCP2AS bits --------------------
typedef union {
  struct {
    unsigned char PSS2BD0:1;
    unsigned char PSS2BD1:1;
    unsigned char PSS2AC0:1;
    unsigned char PSS2AC1:1;
    unsigned char CCP2AS0:1;
    unsigned char CCP2AS1:1;
    unsigned char CCP2AS2:1;
    unsigned char CCP2ASE:1;
  };
} __ECCP2AS_bits_t;
extern volatile __ECCP2AS_bits_t __at(ECCP2AS_ADDR) ECCP2AS_bits;

#ifndef NO_BIT_DEFINES
#define PSS2BD0              ECCP2AS_bits.PSS2BD0
#define PSS2BD1              ECCP2AS_bits.PSS2BD1
#define PSS2AC0              ECCP2AS_bits.PSS2AC0
#define PSS2AC1              ECCP2AS_bits.PSS2AC1
#define CCP2AS0              ECCP2AS_bits.CCP2AS0
#define CCP2AS1              ECCP2AS_bits.CCP2AS1
#define CCP2AS2              ECCP2AS_bits.CCP2AS2
#define CCP2ASE              ECCP2AS_bits.CCP2ASE
#endif /* NO_BIT_DEFINES */

// ----- ECCP3AS bits --------------------
typedef union {
  struct {
    unsigned char PSS3BD0:1;
    unsigned char PSS3BD1:1;
    unsigned char PSS3AC0:1;
    unsigned char PSS3AC1:1;
    unsigned char CCP3AS0:1;
    unsigned char CCP3AS1:1;
    unsigned char CCP3AS2:1;
    unsigned char CCP3ASE:1;
  };
} __ECCP3AS_bits_t;
extern volatile __ECCP3AS_bits_t __at(ECCP3AS_ADDR) ECCP3AS_bits;

#ifndef NO_BIT_DEFINES
#define PSS3BD0              ECCP3AS_bits.PSS3BD0
#define PSS3BD1              ECCP3AS_bits.PSS3BD1
#define PSS3AC0              ECCP3AS_bits.PSS3AC0
#define PSS3AC1              ECCP3AS_bits.PSS3AC1
#define CCP3AS0              ECCP3AS_bits.CCP3AS0
#define CCP3AS1              ECCP3AS_bits.CCP3AS1
#define CCP3AS2              ECCP3AS_bits.CCP3AS2
#define CCP3ASE              ECCP3AS_bits.CCP3ASE
#endif /* NO_BIT_DEFINES */

// ----- EECON1 bits --------------------
typedef union {
  struct {
    unsigned char RD:1;
    unsigned char WR:1;
    unsigned char WREN:1;
    unsigned char WRERR:1;
    unsigned char FREE:1;
    unsigned char LWLO:1;
    unsigned char CFGS:1;
    unsigned char EEPGD:1;
  };
} __EECON1_bits_t;
extern volatile __EECON1_bits_t __at(EECON1_ADDR) EECON1_bits;

#ifndef NO_BIT_DEFINES
#define RD                   EECON1_bits.RD
#define WR                   EECON1_bits.WR
#define WREN                 EECON1_bits.WREN
#define WRERR                EECON1_bits.WRERR
#define FREE                 EECON1_bits.FREE
#define LWLO                 EECON1_bits.LWLO
#define CFGS                 EECON1_bits.CFGS
#define EEPGD                EECON1_bits.EEPGD
#endif /* NO_BIT_DEFINES */

// ----- FVRCON bits --------------------
typedef union {
  struct {
    unsigned char ADFVR0:1;
    unsigned char ADFVR1:1;
    unsigned char CDAFVR0:1;
    unsigned char CDAFVR1:1;
    unsigned char TSRNG:1;
    unsigned char TSEN:1;
    unsigned char FVRRDY:1;
    unsigned char FVREN:1;
  };
} __FVRCON_bits_t;
extern volatile __FVRCON_bits_t __at(FVRCON_ADDR) FVRCON_bits;

#ifndef NO_BIT_DEFINES
#define ADFVR0               FVRCON_bits.ADFVR0
#define ADFVR1               FVRCON_bits.ADFVR1
#define CDAFVR0              FVRCON_bits.CDAFVR0
#define CDAFVR1              FVRCON_bits.CDAFVR1
#define TSRNG                FVRCON_bits.TSRNG
#define TSEN                 FVRCON_bits.TSEN
#define FVRRDY               FVRCON_bits.FVRRDY
#define FVREN                FVRCON_bits.FVREN
#endif /* NO_BIT_DEFINES */

// ----- INTCON bits --------------------
typedef union {
  struct {
    unsigned char IOCIF:1;
    unsigned char INTF:1;
    unsigned char TMR0IF:1;
    unsigned char IOCIE:1;
    unsigned char INTE:1;
    unsigned char TMR0IE:1;
    unsigned char PEIE:1;
    unsigned char GIE:1;
  };
} __INTCON_bits_t;
extern volatile __INTCON_bits_t __at(INTCON_ADDR) INTCON_bits;

#ifndef NO_BIT_DEFINES
#define IOCIF                INTCON_bits.IOCIF
#define INTF                 INTCON_bits.INTF
#define TMR0IF               INTCON_bits.TMR0IF
#define IOCIE                INTCON_bits.IOCIE
#define INTE                 INTCON_bits.INTE
#define TMR0IE               INTCON_bits.TMR0IE
#define PEIE                 INTCON_bits.PEIE
#define GIE                  INTCON_bits.GIE
#endif /* NO_BIT_DEFINES */

// ----- IOCBF bits --------------------
typedef union {
  struct {
    unsigned char IOCBF0:1;
    unsigned char IOCBF1:1;
    unsigned char IOCBF2:1;
    unsigned char IOCBF3:1;
    unsigned char IOCBF4:1;
    unsigned char IOCBF5:1;
    unsigned char IOCBF6:1;
    unsigned char IOCBF7:1;
  };
} __IOCBF_bits_t;
extern volatile __IOCBF_bits_t __at(IOCBF_ADDR) IOCBF_bits;

#ifndef NO_BIT_DEFINES
#define IOCBF0               IOCBF_bits.IOCBF0
#define IOCBF1               IOCBF_bits.IOCBF1
#define IOCBF2               IOCBF_bits.IOCBF2
#define IOCBF3               IOCBF_bits.IOCBF3
#define IOCBF4               IOCBF_bits.IOCBF4
#define IOCBF5               IOCBF_bits.IOCBF5
#define IOCBF6               IOCBF_bits.IOCBF6
#define IOCBF7               IOCBF_bits.IOCBF7
#endif /* NO_BIT_DEFINES */

// ----- IOCBN bits --------------------
typedef union {
  struct {
    unsigned char IOCBN0:1;
    unsigned char IOCBN1:1;
    unsigned char IOCBN2:1;
    unsigned char IOCBN3:1;
    unsigned char IOCBN4:1;
    unsigned char IOCBN5:1;
    unsigned char IOCBN6:1;
    unsigned char IOCBN7:1;
  };
} __IOCBN_bits_t;
extern volatile __IOCBN_bits_t __at(IOCBN_ADDR) IOCBN_bits;

#ifndef NO_BIT_DEFINES
#define IOCBN0               IOCBN_bits.IOCBN0
#define IOCBN1               IOCBN_bits.IOCBN1
#define IOCBN2               IOCBN_bits.IOCBN2
#define IOCBN3               IOCBN_bits.IOCBN3
#define IOCBN4               IOCBN_bits.IOCBN4
#define IOCBN5               IOCBN_bits.IOCBN5
#define IOCBN6               IOCBN_bits.IOCBN6
#define IOCBN7               IOCBN_bits.IOCBN7
#endif /* NO_BIT_DEFINES */

// ----- IOCBP bits --------------------
typedef union {
  struct {
    unsigned char IOCBP0:1;
    unsigned char IOCBP1:1;
    unsigned char IOCBP2:1;
    unsigned char IOCBP3:1;
    unsigned char IOCBP4:1;
    unsigned char IOCBP5:1;
    unsigned char IOCBP6:1;
    unsigned char IOCBP7:1;
  };
} __IOCBP_bits_t;
extern volatile __IOCBP_bits_t __at(IOCBP_ADDR) IOCBP_bits;

#ifndef NO_BIT_DEFINES
#define IOCBP0               IOCBP_bits.IOCBP0
#define IOCBP1               IOCBP_bits.IOCBP1
#define IOCBP2               IOCBP_bits.IOCBP2
#define IOCBP3               IOCBP_bits.IOCBP3
#define IOCBP4               IOCBP_bits.IOCBP4
#define IOCBP5               IOCBP_bits.IOCBP5
#define IOCBP6               IOCBP_bits.IOCBP6
#define IOCBP7               IOCBP_bits.IOCBP7
#endif /* NO_BIT_DEFINES */

// ----- LATA bits --------------------
typedef union {
  struct {
    unsigned char LATA0:1;
    unsigned char LATA1:1;
    unsigned char LATA2:1;
    unsigned char LATA3:1;
    unsigned char LATA4:1;
    unsigned char LATA5:1;
    unsigned char LATA6:1;
    unsigned char LATA7:1;
  };
} __LATA_bits_t;
extern volatile __LATA_bits_t __at(LATA_ADDR) LATA_bits;

#ifndef NO_BIT_DEFINES
#define LATA0                LATA_bits.LATA0
#define LATA1                LATA_bits.LATA1
#define LATA2                LATA_bits.LATA2
#define LATA3                LATA_bits.LATA3
#define LATA4                LATA_bits.LATA4
#define LATA5                LATA_bits.LATA5
#define LATA6                LATA_bits.LATA6
#define LATA7                LATA_bits.LATA7
#endif /* NO_BIT_DEFINES */

// ----- LATB bits --------------------
typedef union {
  struct {
    unsigned char LATB0:1;
    unsigned char LATB1:1;
    unsigned char LATB2:1;
    unsigned char LATB3:1;
    unsigned char LATB4:1;
    unsigned char LATB5:1;
    unsigned char LATB6:1;
    unsigned char LATB7:1;
  };
} __LATB_bits_t;
extern volatile __LATB_bits_t __at(LATB_ADDR) LATB_bits;

#ifndef NO_BIT_DEFINES
#define LATB0                LATB_bits.LATB0
#define LATB1                LATB_bits.LATB1
#define LATB2                LATB_bits.LATB2
#define LATB3                LATB_bits.LATB3
#define LATB4                LATB_bits.LATB4
#define LATB5                LATB_bits.LATB5
#define LATB6                LATB_bits.LATB6
#define LATB7                LATB_bits.LATB7
#endif /* NO_BIT_DEFINES */

// ----- LATC bits --------------------
typedef union {
  struct {
    unsigned char LATC0:1;
    unsigned char LATC1:1;
    unsigned char LATC2:1;
    unsigned char LATC3:1;
    unsigned char LATC4:1;
    unsigned char LATC5:1;
    unsigned char LATC6:1;
    unsigned char LATC7:1;
  };
} __LATC_bits_t;
extern volatile __LATC_bits_t __at(LATC_ADDR) LATC_bits;

#ifndef NO_BIT_DEFINES
#define LATC0                LATC_bits.LATC0
#define LATC1                LATC_bits.LATC1
#define LATC2                LATC_bits.LATC2
#define LATC3                LATC_bits.LATC3
#define LATC4                LATC_bits.LATC4
#define LATC5                LATC_bits.LATC5
#define LATC6                LATC_bits.LATC6
#define LATC7                LATC_bits.LATC7
#endif /* NO_BIT_DEFINES */

// ----- LCDCON bits --------------------
typedef union {
  struct {
    unsigned char LMUX0:1;
    unsigned char LMUX1:1;
    unsigned char CS0:1;
    unsigned char CS1:1;
    unsigned char :1;
    unsigned char WERR:1;
    unsigned char SLPEN:1;
    unsigned char LCDEN:1;
  };
} __LCDCON_bits_t;
extern volatile __LCDCON_bits_t __at(LCDCON_ADDR) LCDCON_bits;

#ifndef NO_BIT_DEFINES
#define LMUX0                LCDCON_bits.LMUX0
#define LMUX1                LCDCON_bits.LMUX1
#define CS0                  LCDCON_bits.CS0
#define CS1                  LCDCON_bits.CS1
#define WERR                 LCDCON_bits.WERR
#define SLPEN                LCDCON_bits.SLPEN
#define LCDEN                LCDCON_bits.LCDEN
#endif /* NO_BIT_DEFINES */

// ----- LCDCST bits --------------------
typedef union {
  struct {
    unsigned char LCDCST0:1;
    unsigned char LCDCST1:1;
    unsigned char LCDCST2:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __LCDCST_bits_t;
extern volatile __LCDCST_bits_t __at(LCDCST_ADDR) LCDCST_bits;

#ifndef NO_BIT_DEFINES
#define LCDCST0              LCDCST_bits.LCDCST0
#define LCDCST1              LCDCST_bits.LCDCST1
#define LCDCST2              LCDCST_bits.LCDCST2
#endif /* NO_BIT_DEFINES */

// ----- LCDDATA0 bits --------------------
typedef union {
  struct {
    unsigned char SEG0COM0:1;
    unsigned char SEG1COM0:1;
    unsigned char SEG2COM0:1;
    unsigned char SEG3COM0:1;
    unsigned char SEG4COM0:1;
    unsigned char SEG5COM0:1;
    unsigned char SEG6COM0:1;
    unsigned char SEG7COM0:1;
  };
} __LCDDATA0_bits_t;
extern volatile __LCDDATA0_bits_t __at(LCDDATA0_ADDR) LCDDATA0_bits;

#ifndef NO_BIT_DEFINES
#define SEG0COM0             LCDDATA0_bits.SEG0COM0
#define SEG1COM0             LCDDATA0_bits.SEG1COM0
#define SEG2COM0             LCDDATA0_bits.SEG2COM0
#define SEG3COM0             LCDDATA0_bits.SEG3COM0
#define SEG4COM0             LCDDATA0_bits.SEG4COM0
#define SEG5COM0             LCDDATA0_bits.SEG5COM0
#define SEG6COM0             LCDDATA0_bits.SEG6COM0
#define SEG7COM0             LCDDATA0_bits.SEG7COM0
#endif /* NO_BIT_DEFINES */

// ----- LCDDATA1 bits --------------------
typedef union {
  struct {
    unsigned char SEG8COM0:1;
    unsigned char SEG9COM0:1;
    unsigned char SEG10COM0:1;
    unsigned char SEG11COM0:1;
    unsigned char SEG12COM0:1;
    unsigned char SEG13COM0:1;
    unsigned char SEG14COM0:1;
    unsigned char SEG15COM0:1;
  };
} __LCDDATA1_bits_t;
extern volatile __LCDDATA1_bits_t __at(LCDDATA1_ADDR) LCDDATA1_bits;

#ifndef NO_BIT_DEFINES
#define SEG8COM0             LCDDATA1_bits.SEG8COM0
#define SEG9COM0             LCDDATA1_bits.SEG9COM0
#define SEG10COM0            LCDDATA1_bits.SEG10COM0
#define SEG11COM0            LCDDATA1_bits.SEG11COM0
#define SEG12COM0            LCDDATA1_bits.SEG12COM0
#define SEG13COM0            LCDDATA1_bits.SEG13COM0
#define SEG14COM0            LCDDATA1_bits.SEG14COM0
#define SEG15COM0            LCDDATA1_bits.SEG15COM0
#endif /* NO_BIT_DEFINES */

// ----- LCDDATA10 bits --------------------
typedef union {
  struct {
    unsigned char SEG8COM3:1;
    unsigned char SEG9COM3:1;
    unsigned char SEG10COM3:1;
    unsigned char SEG11COM3:1;
    unsigned char SEG12COM3:1;
    unsigned char SEG13COM3:1;
    unsigned char SEG14COM3:1;
    unsigned char SEG15COM3:1;
  };
} __LCDDATA10_bits_t;
extern volatile __LCDDATA10_bits_t __at(LCDDATA10_ADDR) LCDDATA10_bits;

#ifndef NO_BIT_DEFINES
#define SEG8COM3             LCDDATA10_bits.SEG8COM3
#define SEG9COM3             LCDDATA10_bits.SEG9COM3
#define SEG10COM3            LCDDATA10_bits.SEG10COM3
#define SEG11COM3            LCDDATA10_bits.SEG11COM3
#define SEG12COM3            LCDDATA10_bits.SEG12COM3
#define SEG13COM3            LCDDATA10_bits.SEG13COM3
#define SEG14COM3            LCDDATA10_bits.SEG14COM3
#define SEG15COM3            LCDDATA10_bits.SEG15COM3
#endif /* NO_BIT_DEFINES */

// ----- LCDDATA3 bits --------------------
typedef union {
  struct {
    unsigned char SEG0COM1:1;
    unsigned char SEG1COM1:1;
    unsigned char SEG2COM1:1;
    unsigned char SEG3COM1:1;
    unsigned char SEG4COM1:1;
    unsigned char SEG5COM1:1;
    unsigned char SEG6COM1:1;
    unsigned char SEG7COM1:1;
  };
} __LCDDATA3_bits_t;
extern volatile __LCDDATA3_bits_t __at(LCDDATA3_ADDR) LCDDATA3_bits;

#ifndef NO_BIT_DEFINES
#define SEG0COM1             LCDDATA3_bits.SEG0COM1
#define SEG1COM1             LCDDATA3_bits.SEG1COM1
#define SEG2COM1             LCDDATA3_bits.SEG2COM1
#define SEG3COM1             LCDDATA3_bits.SEG3COM1
#define SEG4COM1             LCDDATA3_bits.SEG4COM1
#define SEG5COM1             LCDDATA3_bits.SEG5COM1
#define SEG6COM1             LCDDATA3_bits.SEG6COM1
#define SEG7COM1             LCDDATA3_bits.SEG7COM1
#endif /* NO_BIT_DEFINES */

// ----- LCDDATA4 bits --------------------
typedef union {
  struct {
    unsigned char SEG8COM1:1;
    unsigned char SEG9COM1:1;
    unsigned char SEG10COM1:1;
    unsigned char SEG11COM1:1;
    unsigned char SEG12COM1:1;
    unsigned char SEG13COM1:1;
    unsigned char SEG14COM1:1;
    unsigned char SEG15COM1:1;
  };
} __LCDDATA4_bits_t;
extern volatile __LCDDATA4_bits_t __at(LCDDATA4_ADDR) LCDDATA4_bits;

#ifndef NO_BIT_DEFINES
#define SEG8COM1             LCDDATA4_bits.SEG8COM1
#define SEG9COM1             LCDDATA4_bits.SEG9COM1
#define SEG10COM1            LCDDATA4_bits.SEG10COM1
#define SEG11COM1            LCDDATA4_bits.SEG11COM1
#define SEG12COM1            LCDDATA4_bits.SEG12COM1
#define SEG13COM1            LCDDATA4_bits.SEG13COM1
#define SEG14COM1            LCDDATA4_bits.SEG14COM1
#define SEG15COM1            LCDDATA4_bits.SEG15COM1
#endif /* NO_BIT_DEFINES */

// ----- LCDDATA6 bits --------------------
typedef union {
  struct {
    unsigned char SEG0COM2:1;
    unsigned char SEG1COM2:1;
    unsigned char SEG2COM2:1;
    unsigned char SEG3COM2:1;
    unsigned char SEG4COM2:1;
    unsigned char SEG5COM2:1;
    unsigned char SEG6COM2:1;
    unsigned char SEG7COM2:1;
  };
} __LCDDATA6_bits_t;
extern volatile __LCDDATA6_bits_t __at(LCDDATA6_ADDR) LCDDATA6_bits;

#ifndef NO_BIT_DEFINES
#define SEG0COM2             LCDDATA6_bits.SEG0COM2
#define SEG1COM2             LCDDATA6_bits.SEG1COM2
#define SEG2COM2             LCDDATA6_bits.SEG2COM2
#define SEG3COM2             LCDDATA6_bits.SEG3COM2
#define SEG4COM2             LCDDATA6_bits.SEG4COM2
#define SEG5COM2             LCDDATA6_bits.SEG5COM2
#define SEG6COM2             LCDDATA6_bits.SEG6COM2
#define SEG7COM2             LCDDATA6_bits.SEG7COM2
#endif /* NO_BIT_DEFINES */

// ----- LCDDATA7 bits --------------------
typedef union {
  struct {
    unsigned char SEG8COM2:1;
    unsigned char SEG9COM2:1;
    unsigned char SEG10COM2:1;
    unsigned char SEG11COM2:1;
    unsigned char SEG12COM2:1;
    unsigned char SEG13COM2:1;
    unsigned char SEG14COM2:1;
    unsigned char SEG15COM2:1;
  };
} __LCDDATA7_bits_t;
extern volatile __LCDDATA7_bits_t __at(LCDDATA7_ADDR) LCDDATA7_bits;

#ifndef NO_BIT_DEFINES
#define SEG8COM2             LCDDATA7_bits.SEG8COM2
#define SEG9COM2             LCDDATA7_bits.SEG9COM2
#define SEG10COM2            LCDDATA7_bits.SEG10COM2
#define SEG11COM2            LCDDATA7_bits.SEG11COM2
#define SEG12COM2            LCDDATA7_bits.SEG12COM2
#define SEG13COM2            LCDDATA7_bits.SEG13COM2
#define SEG14COM2            LCDDATA7_bits.SEG14COM2
#define SEG15COM2            LCDDATA7_bits.SEG15COM2
#endif /* NO_BIT_DEFINES */

// ----- LCDDATA9 bits --------------------
typedef union {
  struct {
    unsigned char SEG0COM3:1;
    unsigned char SEG1COM3:1;
    unsigned char SEG2COM3:1;
    unsigned char SEG3COM3:1;
    unsigned char SEG4COM3:1;
    unsigned char SEG5COM3:1;
    unsigned char SEG6COM3:1;
    unsigned char SEG7COM3:1;
  };
} __LCDDATA9_bits_t;
extern volatile __LCDDATA9_bits_t __at(LCDDATA9_ADDR) LCDDATA9_bits;

#ifndef NO_BIT_DEFINES
#define SEG0COM3             LCDDATA9_bits.SEG0COM3
#define SEG1COM3             LCDDATA9_bits.SEG1COM3
#define SEG2COM3             LCDDATA9_bits.SEG2COM3
#define SEG3COM3             LCDDATA9_bits.SEG3COM3
#define SEG4COM3             LCDDATA9_bits.SEG4COM3
#define SEG5COM3             LCDDATA9_bits.SEG5COM3
#define SEG6COM3             LCDDATA9_bits.SEG6COM3
#define SEG7COM3             LCDDATA9_bits.SEG7COM3
#endif /* NO_BIT_DEFINES */

// ----- LCDPS bits --------------------
typedef union {
  struct {
    unsigned char LP0:1;
    unsigned char LP1:1;
    unsigned char LP2:1;
    unsigned char LP3:1;
    unsigned char WA:1;
    unsigned char LCDA:1;
    unsigned char BIASMD:1;
    unsigned char WFT:1;
  };
} __LCDPS_bits_t;
extern volatile __LCDPS_bits_t __at(LCDPS_ADDR) LCDPS_bits;

#ifndef NO_BIT_DEFINES
#define LP0                  LCDPS_bits.LP0
#define LP1                  LCDPS_bits.LP1
#define LP2                  LCDPS_bits.LP2
#define LP3                  LCDPS_bits.LP3
#define WA                   LCDPS_bits.WA
#define LCDA                 LCDPS_bits.LCDA
#define BIASMD               LCDPS_bits.BIASMD
#define WFT                  LCDPS_bits.WFT
#endif /* NO_BIT_DEFINES */

// ----- LCDREF bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char VLCD1PE:1;
    unsigned char VLCD2PE:1;
    unsigned char VLCD3PE:1;
    unsigned char :1;
    unsigned char LCDIRI:1;
    unsigned char LCDIRS:1;
    unsigned char LCDIRE:1;
  };
} __LCDREF_bits_t;
extern volatile __LCDREF_bits_t __at(LCDREF_ADDR) LCDREF_bits;

#ifndef NO_BIT_DEFINES
#define VLCD1PE              LCDREF_bits.VLCD1PE
#define VLCD2PE              LCDREF_bits.VLCD2PE
#define VLCD3PE              LCDREF_bits.VLCD3PE
#define LCDIRI               LCDREF_bits.LCDIRI
#define LCDIRS               LCDREF_bits.LCDIRS
#define LCDIRE               LCDREF_bits.LCDIRE
#endif /* NO_BIT_DEFINES */

// ----- LCDRL bits --------------------
typedef union {
  struct {
    unsigned char LRLAT0:1;
    unsigned char LRLAT1:1;
    unsigned char LRLAT2:1;
    unsigned char :1;
    unsigned char LRLBP0:1;
    unsigned char LRLBP1:1;
    unsigned char LRLAP0:1;
    unsigned char LRLAP1:1;
  };
} __LCDRL_bits_t;
extern volatile __LCDRL_bits_t __at(LCDRL_ADDR) LCDRL_bits;

#ifndef NO_BIT_DEFINES
#define LRLAT0               LCDRL_bits.LRLAT0
#define LRLAT1               LCDRL_bits.LRLAT1
#define LRLAT2               LCDRL_bits.LRLAT2
#define LRLBP0               LCDRL_bits.LRLBP0
#define LRLBP1               LCDRL_bits.LRLBP1
#define LRLAP0               LCDRL_bits.LRLAP0
#define LRLAP1               LCDRL_bits.LRLAP1
#endif /* NO_BIT_DEFINES */

// ----- LCDSE0 bits --------------------
typedef union {
  struct {
    unsigned char SEG0:1;
    unsigned char SEG1:1;
    unsigned char SEG2:1;
    unsigned char SEG3:1;
    unsigned char SEG4:1;
    unsigned char SEG5:1;
    unsigned char SEG6:1;
    unsigned char SEG7:1;
  };
} __LCDSE0_bits_t;
extern volatile __LCDSE0_bits_t __at(LCDSE0_ADDR) LCDSE0_bits;

#ifndef NO_BIT_DEFINES
#define SEG0                 LCDSE0_bits.SEG0
#define SEG1                 LCDSE0_bits.SEG1
#define SEG2                 LCDSE0_bits.SEG2
#define SEG3                 LCDSE0_bits.SEG3
#define SEG4                 LCDSE0_bits.SEG4
#define SEG5                 LCDSE0_bits.SEG5
#define SEG6                 LCDSE0_bits.SEG6
#define SEG7                 LCDSE0_bits.SEG7
#endif /* NO_BIT_DEFINES */

// ----- LCDSE1 bits --------------------
typedef union {
  struct {
    unsigned char SEG8:1;
    unsigned char SEG9:1;
    unsigned char SEG10:1;
    unsigned char SEG11:1;
    unsigned char SEG12:1;
    unsigned char SEG13:1;
    unsigned char SEG14:1;
    unsigned char SEG15:1;
  };
} __LCDSE1_bits_t;
extern volatile __LCDSE1_bits_t __at(LCDSE1_ADDR) LCDSE1_bits;

#ifndef NO_BIT_DEFINES
#define SEG8                 LCDSE1_bits.SEG8
#define SEG9                 LCDSE1_bits.SEG9
#define SEG10                LCDSE1_bits.SEG10
#define SEG11                LCDSE1_bits.SEG11
#define SEG12                LCDSE1_bits.SEG12
#define SEG13                LCDSE1_bits.SEG13
#define SEG14                LCDSE1_bits.SEG14
#define SEG15                LCDSE1_bits.SEG15
#endif /* NO_BIT_DEFINES */

// ----- OPTION_REG bits --------------------
typedef union {
  struct {
    unsigned char PS0:1;
    unsigned char PS1:1;
    unsigned char PS2:1;
    unsigned char PSA:1;
    unsigned char T0SE:1;
    unsigned char T0CS:1;
    unsigned char INTEDG:1;
    unsigned char NOT_WPUEN:1;
  };
} __OPTION_REG_bits_t;
extern volatile __OPTION_REG_bits_t __at(OPTION_REG_ADDR) OPTION_REG_bits;

#ifndef NO_BIT_DEFINES
#define PS0                  OPTION_REG_bits.PS0
#define PS1                  OPTION_REG_bits.PS1
#define PS2                  OPTION_REG_bits.PS2
#define PSA                  OPTION_REG_bits.PSA
#define T0SE                 OPTION_REG_bits.T0SE
#define T0CS                 OPTION_REG_bits.T0CS
#define INTEDG               OPTION_REG_bits.INTEDG
#define NOT_WPUEN            OPTION_REG_bits.NOT_WPUEN
#endif /* NO_BIT_DEFINES */

// ----- OSCCON bits --------------------
typedef union {
  struct {
    unsigned char SCS0:1;
    unsigned char SCS1:1;
    unsigned char :1;
    unsigned char IRCF0:1;
    unsigned char IRCF1:1;
    unsigned char IRCF2:1;
    unsigned char IRCF3:1;
    unsigned char SPLLEN:1;
  };
} __OSCCON_bits_t;
extern volatile __OSCCON_bits_t __at(OSCCON_ADDR) OSCCON_bits;

#ifndef NO_BIT_DEFINES
#define SCS0                 OSCCON_bits.SCS0
#define SCS1                 OSCCON_bits.SCS1
#define IRCF0                OSCCON_bits.IRCF0
#define IRCF1                OSCCON_bits.IRCF1
#define IRCF2                OSCCON_bits.IRCF2
#define IRCF3                OSCCON_bits.IRCF3
#define SPLLEN               OSCCON_bits.SPLLEN
#endif /* NO_BIT_DEFINES */

// ----- OSCSTAT bits --------------------
typedef union {
  struct {
    unsigned char HFIOFS:1;
    unsigned char LFIOFR:1;
    unsigned char MFIOFR:1;
    unsigned char HFIOFL:1;
    unsigned char HFIOFR:1;
    unsigned char OSTS:1;
    unsigned char PLLR:1;
    unsigned char T1OSCR:1;
  };
} __OSCSTAT_bits_t;
extern volatile __OSCSTAT_bits_t __at(OSCSTAT_ADDR) OSCSTAT_bits;

#ifndef NO_BIT_DEFINES
#define HFIOFS               OSCSTAT_bits.HFIOFS
#define LFIOFR               OSCSTAT_bits.LFIOFR
#define MFIOFR               OSCSTAT_bits.MFIOFR
#define HFIOFL               OSCSTAT_bits.HFIOFL
#define HFIOFR               OSCSTAT_bits.HFIOFR
#define OSTS                 OSCSTAT_bits.OSTS
#define PLLR                 OSCSTAT_bits.PLLR
#define T1OSCR               OSCSTAT_bits.T1OSCR
#endif /* NO_BIT_DEFINES */

// ----- OSCTUNE bits --------------------
typedef union {
  struct {
    unsigned char TUN0:1;
    unsigned char TUN1:1;
    unsigned char TUN2:1;
    unsigned char TUN3:1;
    unsigned char TUN4:1;
    unsigned char TUN5:1;
    unsigned char :1;
    unsigned char :1;
  };
} __OSCTUNE_bits_t;
extern volatile __OSCTUNE_bits_t __at(OSCTUNE_ADDR) OSCTUNE_bits;

#ifndef NO_BIT_DEFINES
#define TUN0                 OSCTUNE_bits.TUN0
#define TUN1                 OSCTUNE_bits.TUN1
#define TUN2                 OSCTUNE_bits.TUN2
#define TUN3                 OSCTUNE_bits.TUN3
#define TUN4                 OSCTUNE_bits.TUN4
#define TUN5                 OSCTUNE_bits.TUN5
#endif /* NO_BIT_DEFINES */

// ----- PCON bits --------------------
typedef union {
  struct {
    unsigned char NOT_BOR:1;
    unsigned char NOT_POR:1;
    unsigned char NOT_RI:1;
    unsigned char NOT_RMCLR:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char STKUNF:1;
    unsigned char STKOVF:1;
  };
} __PCON_bits_t;
extern volatile __PCON_bits_t __at(PCON_ADDR) PCON_bits;

#ifndef NO_BIT_DEFINES
#define NOT_BOR              PCON_bits.NOT_BOR
#define NOT_POR              PCON_bits.NOT_POR
#define NOT_RI               PCON_bits.NOT_RI
#define NOT_RMCLR            PCON_bits.NOT_RMCLR
#define STKUNF               PCON_bits.STKUNF
#define STKOVF               PCON_bits.STKOVF
#endif /* NO_BIT_DEFINES */

// ----- PIE1 bits --------------------
typedef union {
  struct {
    unsigned char TMR1IE:1;
    unsigned char TMR2IE:1;
    unsigned char CCP1IE:1;
    unsigned char SSPIE:1;
    unsigned char TXIE:1;
    unsigned char RCIE:1;
    unsigned char ADIE:1;
    unsigned char TMR1GIE:1;
  };
} __PIE1_bits_t;
extern volatile __PIE1_bits_t __at(PIE1_ADDR) PIE1_bits;

#ifndef NO_BIT_DEFINES
#define TMR1IE               PIE1_bits.TMR1IE
#define TMR2IE               PIE1_bits.TMR2IE
#define CCP1IE               PIE1_bits.CCP1IE
#define SSPIE                PIE1_bits.SSPIE
#define TXIE                 PIE1_bits.TXIE
#define RCIE                 PIE1_bits.RCIE
#define ADIE                 PIE1_bits.ADIE
#define TMR1GIE              PIE1_bits.TMR1GIE
#endif /* NO_BIT_DEFINES */

// ----- PIE2 bits --------------------
typedef union {
  struct {
    unsigned char CCP2IE:1;
    unsigned char :1;
    unsigned char LCDIE:1;
    unsigned char BCLIE:1;
    unsigned char EEIE:1;
    unsigned char C1IE:1;
    unsigned char C2IE:1;
    unsigned char OSFIE:1;
  };
} __PIE2_bits_t;
extern volatile __PIE2_bits_t __at(PIE2_ADDR) PIE2_bits;

#ifndef NO_BIT_DEFINES
#define CCP2IE               PIE2_bits.CCP2IE
#define LCDIE                PIE2_bits.LCDIE
#define BCLIE                PIE2_bits.BCLIE
#define EEIE                 PIE2_bits.EEIE
#define C1IE                 PIE2_bits.C1IE
#define C2IE                 PIE2_bits.C2IE
#define OSFIE                PIE2_bits.OSFIE
#endif /* NO_BIT_DEFINES */

// ----- PIE3 bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char TMR4IE:1;
    unsigned char :1;
    unsigned char TMR6IE:1;
    unsigned char CCP3IE:1;
    unsigned char CCP4IE:1;
    unsigned char CCP5IE:1;
    unsigned char :1;
  };
} __PIE3_bits_t;
extern volatile __PIE3_bits_t __at(PIE3_ADDR) PIE3_bits;

#ifndef NO_BIT_DEFINES
#define TMR4IE               PIE3_bits.TMR4IE
#define TMR6IE               PIE3_bits.TMR6IE
#define CCP3IE               PIE3_bits.CCP3IE
#define CCP4IE               PIE3_bits.CCP4IE
#define CCP5IE               PIE3_bits.CCP5IE
#endif /* NO_BIT_DEFINES */

// ----- PIR1 bits --------------------
typedef union {
  struct {
    unsigned char TMR1IF:1;
    unsigned char TMR2IF:1;
    unsigned char CCP1IF:1;
    unsigned char SSPIF:1;
    unsigned char TXIF:1;
    unsigned char RCIF:1;
    unsigned char ADIF:1;
    unsigned char TMR1GIF:1;
  };
} __PIR1_bits_t;
extern volatile __PIR1_bits_t __at(PIR1_ADDR) PIR1_bits;

#ifndef NO_BIT_DEFINES
#define TMR1IF               PIR1_bits.TMR1IF
#define TMR2IF               PIR1_bits.TMR2IF
#define CCP1IF               PIR1_bits.CCP1IF
#define SSPIF                PIR1_bits.SSPIF
#define TXIF                 PIR1_bits.TXIF
#define RCIF                 PIR1_bits.RCIF
#define ADIF                 PIR1_bits.ADIF
#define TMR1GIF              PIR1_bits.TMR1GIF
#endif /* NO_BIT_DEFINES */

// ----- PIR2 bits --------------------
typedef union {
  struct {
    unsigned char CCP2IF:1;
    unsigned char :1;
    unsigned char LCDIF:1;
    unsigned char BCLIF:1;
    unsigned char EEIF:1;
    unsigned char C1IF:1;
    unsigned char C2IF:1;
    unsigned char OSFIF:1;
  };
} __PIR2_bits_t;
extern volatile __PIR2_bits_t __at(PIR2_ADDR) PIR2_bits;

#ifndef NO_BIT_DEFINES
#define CCP2IF               PIR2_bits.CCP2IF
#define LCDIF                PIR2_bits.LCDIF
#define BCLIF                PIR2_bits.BCLIF
#define EEIF                 PIR2_bits.EEIF
#define C1IF                 PIR2_bits.C1IF
#define C2IF                 PIR2_bits.C2IF
#define OSFIF                PIR2_bits.OSFIF
#endif /* NO_BIT_DEFINES */

// ----- PIR3 bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char TMR4IF:1;
    unsigned char :1;
    unsigned char TMR6IF:1;
    unsigned char CCP3IF:1;
    unsigned char CCP4IF:1;
    unsigned char CCP5IF:1;
    unsigned char :1;
  };
} __PIR3_bits_t;
extern volatile __PIR3_bits_t __at(PIR3_ADDR) PIR3_bits;

#ifndef NO_BIT_DEFINES
#define TMR4IF               PIR3_bits.TMR4IF
#define TMR6IF               PIR3_bits.TMR6IF
#define CCP3IF               PIR3_bits.CCP3IF
#define CCP4IF               PIR3_bits.CCP4IF
#define CCP5IF               PIR3_bits.CCP5IF
#endif /* NO_BIT_DEFINES */

// ----- PORTA bits --------------------
typedef union {
  struct {
    unsigned char RA0:1;
    unsigned char RA1:1;
    unsigned char RA2:1;
    unsigned char RA3:1;
    unsigned char RA4:1;
    unsigned char RA5:1;
    unsigned char RA6:1;
    unsigned char RA7:1;
  };
} __PORTA_bits_t;
extern volatile __PORTA_bits_t __at(PORTA_ADDR) PORTA_bits;

#ifndef NO_BIT_DEFINES
#define RA0                  PORTA_bits.RA0
#define RA1                  PORTA_bits.RA1
#define RA2                  PORTA_bits.RA2
#define RA3                  PORTA_bits.RA3
#define RA4                  PORTA_bits.RA4
#define RA5                  PORTA_bits.RA5
#define RA6                  PORTA_bits.RA6
#define RA7                  PORTA_bits.RA7
#endif /* NO_BIT_DEFINES */

// ----- PORTB bits --------------------
typedef union {
  struct {
    unsigned char RB0:1;
    unsigned char RB1:1;
    unsigned char RB2:1;
    unsigned char RB3:1;
    unsigned char RB4:1;
    unsigned char RB5:1;
    unsigned char RB6:1;
    unsigned char RB7:1;
  };
} __PORTB_bits_t;
extern volatile __PORTB_bits_t __at(PORTB_ADDR) PORTB_bits;

#ifndef NO_BIT_DEFINES
#define RB0                  PORTB_bits.RB0
#define RB1                  PORTB_bits.RB1
#define RB2                  PORTB_bits.RB2
#define RB3                  PORTB_bits.RB3
#define RB4                  PORTB_bits.RB4
#define RB5                  PORTB_bits.RB5
#define RB6                  PORTB_bits.RB6
#define RB7                  PORTB_bits.RB7
#endif /* NO_BIT_DEFINES */

// ----- PORTC bits --------------------
typedef union {
  struct {
    unsigned char RC0:1;
    unsigned char RC1:1;
    unsigned char RC2:1;
    unsigned char RC3:1;
    unsigned char RC4:1;
    unsigned char RC5:1;
    unsigned char RC6:1;
    unsigned char RC7:1;
  };
} __PORTC_bits_t;
extern volatile __PORTC_bits_t __at(PORTC_ADDR) PORTC_bits;

#ifndef NO_BIT_DEFINES
#define RC0                  PORTC_bits.RC0
#define RC1                  PORTC_bits.RC1
#define RC2                  PORTC_bits.RC2
#define RC3                  PORTC_bits.RC3
#define RC4                  PORTC_bits.RC4
#define RC5                  PORTC_bits.RC5
#define RC6                  PORTC_bits.RC6
#define RC7                  PORTC_bits.RC7
#endif /* NO_BIT_DEFINES */

// ----- PORTE bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char RE3:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __PORTE_bits_t;
extern volatile __PORTE_bits_t __at(PORTE_ADDR) PORTE_bits;

#ifndef NO_BIT_DEFINES
#define RE3                  PORTE_bits.RE3
#endif /* NO_BIT_DEFINES */

// ----- PSTR1CON bits --------------------
typedef union {
  struct {
    unsigned char STR1A:1;
    unsigned char STR1B:1;
    unsigned char STR1C:1;
    unsigned char STR1D:1;
    unsigned char STR1SYNC:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __PSTR1CON_bits_t;
extern volatile __PSTR1CON_bits_t __at(PSTR1CON_ADDR) PSTR1CON_bits;

#ifndef NO_BIT_DEFINES
#define STR1A                PSTR1CON_bits.STR1A
#define STR1B                PSTR1CON_bits.STR1B
#define STR1C                PSTR1CON_bits.STR1C
#define STR1D                PSTR1CON_bits.STR1D
#define STR1SYNC             PSTR1CON_bits.STR1SYNC
#endif /* NO_BIT_DEFINES */

// ----- PSTR2CON bits --------------------
typedef union {
  struct {
    unsigned char STR2A:1;
    unsigned char STR2B:1;
    unsigned char STR2C:1;
    unsigned char STR2D:1;
    unsigned char STR2SYNC:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __PSTR2CON_bits_t;
extern volatile __PSTR2CON_bits_t __at(PSTR2CON_ADDR) PSTR2CON_bits;

#ifndef NO_BIT_DEFINES
#define STR2A                PSTR2CON_bits.STR2A
#define STR2B                PSTR2CON_bits.STR2B
#define STR2C                PSTR2CON_bits.STR2C
#define STR2D                PSTR2CON_bits.STR2D
#define STR2SYNC             PSTR2CON_bits.STR2SYNC
#endif /* NO_BIT_DEFINES */

// ----- PSTR3CON bits --------------------
typedef union {
  struct {
    unsigned char STR3A:1;
    unsigned char STR3B:1;
    unsigned char STR3C:1;
    unsigned char STR3D:1;
    unsigned char STR3SYNC:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __PSTR3CON_bits_t;
extern volatile __PSTR3CON_bits_t __at(PSTR3CON_ADDR) PSTR3CON_bits;

#ifndef NO_BIT_DEFINES
#define STR3A                PSTR3CON_bits.STR3A
#define STR3B                PSTR3CON_bits.STR3B
#define STR3C                PSTR3CON_bits.STR3C
#define STR3D                PSTR3CON_bits.STR3D
#define STR3SYNC             PSTR3CON_bits.STR3SYNC
#endif /* NO_BIT_DEFINES */

// ----- PWM1CON bits --------------------
typedef union {
  struct {
    unsigned char P1DC0:1;
    unsigned char P1DC1:1;
    unsigned char P1DC2:1;
    unsigned char P1DC3:1;
    unsigned char P1DC4:1;
    unsigned char P1DC5:1;
    unsigned char P1DC6:1;
    unsigned char P1RSEN:1;
  };
} __PWM1CON_bits_t;
extern volatile __PWM1CON_bits_t __at(PWM1CON_ADDR) PWM1CON_bits;

#ifndef NO_BIT_DEFINES
#define P1DC0                PWM1CON_bits.P1DC0
#define P1DC1                PWM1CON_bits.P1DC1
#define P1DC2                PWM1CON_bits.P1DC2
#define P1DC3                PWM1CON_bits.P1DC3
#define P1DC4                PWM1CON_bits.P1DC4
#define P1DC5                PWM1CON_bits.P1DC5
#define P1DC6                PWM1CON_bits.P1DC6
#define P1RSEN               PWM1CON_bits.P1RSEN
#endif /* NO_BIT_DEFINES */

// ----- PWM2CON bits --------------------
typedef union {
  struct {
    unsigned char P2DC0:1;
    unsigned char P2DC1:1;
    unsigned char P2DC2:1;
    unsigned char P2DC3:1;
    unsigned char P2DC4:1;
    unsigned char P2DC5:1;
    unsigned char P2DC6:1;
    unsigned char P2RSEN:1;
  };
} __PWM2CON_bits_t;
extern volatile __PWM2CON_bits_t __at(PWM2CON_ADDR) PWM2CON_bits;

#ifndef NO_BIT_DEFINES
#define P2DC0                PWM2CON_bits.P2DC0
#define P2DC1                PWM2CON_bits.P2DC1
#define P2DC2                PWM2CON_bits.P2DC2
#define P2DC3                PWM2CON_bits.P2DC3
#define P2DC4                PWM2CON_bits.P2DC4
#define P2DC5                PWM2CON_bits.P2DC5
#define P2DC6                PWM2CON_bits.P2DC6
#define P2RSEN               PWM2CON_bits.P2RSEN
#endif /* NO_BIT_DEFINES */

// ----- PWM3CON bits --------------------
typedef union {
  struct {
    unsigned char P3DC0:1;
    unsigned char P3DC1:1;
    unsigned char P3DC2:1;
    unsigned char P3DC3:1;
    unsigned char P3DC4:1;
    unsigned char P3DC5:1;
    unsigned char P3DC6:1;
    unsigned char P3RSEN:1;
  };
} __PWM3CON_bits_t;
extern volatile __PWM3CON_bits_t __at(PWM3CON_ADDR) PWM3CON_bits;

#ifndef NO_BIT_DEFINES
#define P3DC0                PWM3CON_bits.P3DC0
#define P3DC1                PWM3CON_bits.P3DC1
#define P3DC2                PWM3CON_bits.P3DC2
#define P3DC3                PWM3CON_bits.P3DC3
#define P3DC4                PWM3CON_bits.P3DC4
#define P3DC5                PWM3CON_bits.P3DC5
#define P3DC6                PWM3CON_bits.P3DC6
#define P3RSEN               PWM3CON_bits.P3RSEN
#endif /* NO_BIT_DEFINES */

// ----- RCSTA bits --------------------
typedef union {
  struct {
    unsigned char RX9D:1;
    unsigned char OERR:1;
    unsigned char FERR:1;
    unsigned char ADDEN:1;
    unsigned char CREN:1;
    unsigned char SREN:1;
    unsigned char RX9:1;
    unsigned char SPEN:1;
  };
} __RCSTA_bits_t;
extern volatile __RCSTA_bits_t __at(RCSTA_ADDR) RCSTA_bits;

#ifndef NO_BIT_DEFINES
#define RX9D                 RCSTA_bits.RX9D
#define OERR                 RCSTA_bits.OERR
#define FERR                 RCSTA_bits.FERR
#define ADDEN                RCSTA_bits.ADDEN
#define CREN                 RCSTA_bits.CREN
#define SREN                 RCSTA_bits.SREN
#define RX9                  RCSTA_bits.RX9
#define SPEN                 RCSTA_bits.SPEN
#endif /* NO_BIT_DEFINES */

// ----- SRCON0 bits --------------------
typedef union {
  struct {
    unsigned char SRPR:1;
    unsigned char SRPS:1;
    unsigned char SRNQEN:1;
    unsigned char SRQEN:1;
    unsigned char SRCLK0:1;
    unsigned char SRCLK1:1;
    unsigned char SRCLK2:1;
    unsigned char SRLEN:1;
  };
} __SRCON0_bits_t;
extern volatile __SRCON0_bits_t __at(SRCON0_ADDR) SRCON0_bits;

#ifndef NO_BIT_DEFINES
#define SRPR                 SRCON0_bits.SRPR
#define SRPS                 SRCON0_bits.SRPS
#define SRNQEN               SRCON0_bits.SRNQEN
#define SRQEN                SRCON0_bits.SRQEN
#define SRCLK0               SRCON0_bits.SRCLK0
#define SRCLK1               SRCON0_bits.SRCLK1
#define SRCLK2               SRCON0_bits.SRCLK2
#define SRLEN                SRCON0_bits.SRLEN
#endif /* NO_BIT_DEFINES */

// ----- SRCON1 bits --------------------
typedef union {
  struct {
    unsigned char SRRC1E:1;
    unsigned char SRRC2E:1;
    unsigned char SRRCKE:1;
    unsigned char SRRPE:1;
    unsigned char SRSC1E:1;
    unsigned char SRSC2E:1;
    unsigned char SRSCKE:1;
    unsigned char SRSPE:1;
  };
} __SRCON1_bits_t;
extern volatile __SRCON1_bits_t __at(SRCON1_ADDR) SRCON1_bits;

#ifndef NO_BIT_DEFINES
#define SRRC1E               SRCON1_bits.SRRC1E
#define SRRC2E               SRCON1_bits.SRRC2E
#define SRRCKE               SRCON1_bits.SRRCKE
#define SRRPE                SRCON1_bits.SRRPE
#define SRSC1E               SRCON1_bits.SRSC1E
#define SRSC2E               SRCON1_bits.SRSC2E
#define SRSCKE               SRCON1_bits.SRSCKE
#define SRSPE                SRCON1_bits.SRSPE
#endif /* NO_BIT_DEFINES */

// ----- SSPCON bits --------------------
typedef union {
  struct {
    unsigned char SSPM0:1;
    unsigned char SSPM1:1;
    unsigned char SSPM2:1;
    unsigned char SSPM3:1;
    unsigned char CKP:1;
    unsigned char SSPEN:1;
    unsigned char SSPOV:1;
    unsigned char WCOL:1;
  };
} __SSPCON_bits_t;
extern volatile __SSPCON_bits_t __at(SSPCON_ADDR) SSPCON_bits;

// ----- SSPCON1 bits --------------------
typedef union {
  struct {
    unsigned char SSPM0:1;
    unsigned char SSPM1:1;
    unsigned char SSPM2:1;
    unsigned char SSPM3:1;
    unsigned char CKP:1;
    unsigned char SSPEN:1;
    unsigned char SSPOV:1;
    unsigned char WCOL:1;
  };
} __SSPCON1_bits_t;
extern volatile __SSPCON1_bits_t __at(SSPCON1_ADDR) SSPCON1_bits;

#ifndef NO_BIT_DEFINES
#define SSPM0                SSPCON1_bits.SSPM0
#define SSPM1                SSPCON1_bits.SSPM1
#define SSPM2                SSPCON1_bits.SSPM2
#define SSPM3                SSPCON1_bits.SSPM3
#define CKP                  SSPCON1_bits.CKP
#define SSPEN                SSPCON1_bits.SSPEN
#define SSPOV                SSPCON1_bits.SSPOV
#define WCOL                 SSPCON1_bits.WCOL
#endif /* NO_BIT_DEFINES */

// ----- SSPCON2 bits --------------------
typedef union {
  struct {
    unsigned char SEN:1;
    unsigned char RSEN:1;
    unsigned char PEN:1;
    unsigned char RCEN:1;
    unsigned char ACKEN:1;
    unsigned char ACKDT:1;
    unsigned char ACKSTAT:1;
    unsigned char GCEN:1;
  };
} __SSPCON2_bits_t;
extern volatile __SSPCON2_bits_t __at(SSPCON2_ADDR) SSPCON2_bits;

#ifndef NO_BIT_DEFINES
#define SEN                  SSPCON2_bits.SEN
#define RSEN                 SSPCON2_bits.RSEN
#define PEN                  SSPCON2_bits.PEN
#define RCEN                 SSPCON2_bits.RCEN
#define ACKEN                SSPCON2_bits.ACKEN
#define ACKDT                SSPCON2_bits.ACKDT
#define ACKSTAT              SSPCON2_bits.ACKSTAT
#define GCEN                 SSPCON2_bits.GCEN
#endif /* NO_BIT_DEFINES */

// ----- SSPCON3 bits --------------------
typedef union {
  struct {
    unsigned char DHEN:1;
    unsigned char AHEN:1;
    unsigned char SBCDE:1;
    unsigned char SDAHT:1;
    unsigned char BOEN:1;
    unsigned char SCIE:1;
    unsigned char PCIE:1;
    unsigned char ACKTIM:1;
  };
} __SSPCON3_bits_t;
extern volatile __SSPCON3_bits_t __at(SSPCON3_ADDR) SSPCON3_bits;

#ifndef NO_BIT_DEFINES
#define DHEN                 SSPCON3_bits.DHEN
#define AHEN                 SSPCON3_bits.AHEN
#define SBCDE                SSPCON3_bits.SBCDE
#define SDAHT                SSPCON3_bits.SDAHT
#define BOEN                 SSPCON3_bits.BOEN
#define SCIE                 SSPCON3_bits.SCIE
#define PCIE                 SSPCON3_bits.PCIE
#define ACKTIM               SSPCON3_bits.ACKTIM
#endif /* NO_BIT_DEFINES */

// ----- SSPSTAT bits --------------------
typedef union {
  struct {
    unsigned char BF:1;
    unsigned char UA:1;
    unsigned char R_NOT_W:1;
    unsigned char S:1;
    unsigned char P:1;
    unsigned char D_NOT_A:1;
    unsigned char CKE:1;
    unsigned char SMP:1;
  };
} __SSPSTAT_bits_t;
extern volatile __SSPSTAT_bits_t __at(SSPSTAT_ADDR) SSPSTAT_bits;

#ifndef NO_BIT_DEFINES
#define BF                   SSPSTAT_bits.BF
#define UA                   SSPSTAT_bits.UA
#define R_NOT_W              SSPSTAT_bits.R_NOT_W
#define S                    SSPSTAT_bits.S
#define P                    SSPSTAT_bits.P
#define D_NOT_A              SSPSTAT_bits.D_NOT_A
#define CKE                  SSPSTAT_bits.CKE
#define SMP                  SSPSTAT_bits.SMP
#endif /* NO_BIT_DEFINES */

// ----- STATUS bits --------------------
typedef union {
  struct {
    unsigned char C:1;
    unsigned char DC:1;
    unsigned char Z:1;
    unsigned char NOT_PD:1;
    unsigned char NOT_TO:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __STATUS_bits_t;
extern volatile __STATUS_bits_t __at(STATUS_ADDR) STATUS_bits;

#ifndef NO_BIT_DEFINES
#define C                    STATUS_bits.C
#define DC                   STATUS_bits.DC
#define Z                    STATUS_bits.Z
#define NOT_PD               STATUS_bits.NOT_PD
#define NOT_TO               STATUS_bits.NOT_TO
#endif /* NO_BIT_DEFINES */

// ----- STATUS_SHAD bits --------------------
typedef union {
  struct {
    unsigned char C_SHAD:1;
    unsigned char DC_SHAD:1;
    unsigned char Z_SHAD:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __STATUS_SHAD_bits_t;
extern volatile __STATUS_SHAD_bits_t __at(STATUS_SHAD_ADDR) STATUS_SHAD_bits;

#ifndef NO_BIT_DEFINES
#define C_SHAD               STATUS_SHAD_bits.C_SHAD
#define DC_SHAD              STATUS_SHAD_bits.DC_SHAD
#define Z_SHAD               STATUS_SHAD_bits.Z_SHAD
#endif /* NO_BIT_DEFINES */

// ----- T1CON bits --------------------
typedef union {
  struct {
    unsigned char TMR1ON:1;
    unsigned char :1;
    unsigned char NOT_T1SYNC:1;
    unsigned char T1OSCEN:1;
    unsigned char T1CKPS0:1;
    unsigned char T1CKPS1:1;
    unsigned char TMR1CS0:1;
    unsigned char TMR1CS1:1;
  };
} __T1CON_bits_t;
extern volatile __T1CON_bits_t __at(T1CON_ADDR) T1CON_bits;

#ifndef NO_BIT_DEFINES
#define TMR1ON               T1CON_bits.TMR1ON
#define NOT_T1SYNC           T1CON_bits.NOT_T1SYNC
#define T1OSCEN              T1CON_bits.T1OSCEN
#define T1CKPS0              T1CON_bits.T1CKPS0
#define T1CKPS1              T1CON_bits.T1CKPS1
#define TMR1CS0              T1CON_bits.TMR1CS0
#define TMR1CS1              T1CON_bits.TMR1CS1
#endif /* NO_BIT_DEFINES */

// ----- T1GCON bits --------------------
typedef union {
  struct {
    unsigned char T1GSS0:1;
    unsigned char T1GSS1:1;
    unsigned char T1GVAL:1;
    unsigned char T1GGO:1;
    unsigned char T1GSPM:1;
    unsigned char T1GTM:1;
    unsigned char T1GPOL:1;
    unsigned char TMR1GE:1;
  };
} __T1GCON_bits_t;
extern volatile __T1GCON_bits_t __at(T1GCON_ADDR) T1GCON_bits;

#ifndef NO_BIT_DEFINES
#define T1GSS0               T1GCON_bits.T1GSS0
#define T1GSS1               T1GCON_bits.T1GSS1
#define T1GVAL               T1GCON_bits.T1GVAL
#define T1GGO                T1GCON_bits.T1GGO
#define T1GSPM               T1GCON_bits.T1GSPM
#define T1GTM                T1GCON_bits.T1GTM
#define T1GPOL               T1GCON_bits.T1GPOL
#define TMR1GE               T1GCON_bits.TMR1GE
#endif /* NO_BIT_DEFINES */

// ----- T2CON bits --------------------
typedef union {
  struct {
    unsigned char T2CKPS0:1;
    unsigned char T2CKPS1:1;
    unsigned char TMR2ON:1;
    unsigned char T2OUTPS0:1;
    unsigned char T2OUTPS1:1;
    unsigned char T2OUTPS2:1;
    unsigned char T2OUTPS3:1;
    unsigned char :1;
  };
} __T2CON_bits_t;
extern volatile __T2CON_bits_t __at(T2CON_ADDR) T2CON_bits;

#ifndef NO_BIT_DEFINES
#define T2CKPS0              T2CON_bits.T2CKPS0
#define T2CKPS1              T2CON_bits.T2CKPS1
#define TMR2ON               T2CON_bits.TMR2ON
#define T2OUTPS0             T2CON_bits.T2OUTPS0
#define T2OUTPS1             T2CON_bits.T2OUTPS1
#define T2OUTPS2             T2CON_bits.T2OUTPS2
#define T2OUTPS3             T2CON_bits.T2OUTPS3
#endif /* NO_BIT_DEFINES */

// ----- T4CON bits --------------------
typedef union {
  struct {
    unsigned char T4CKPS0:1;
    unsigned char T4CKPS1:1;
    unsigned char TMR4ON:1;
    unsigned char T4OUTPS0:1;
    unsigned char T4OUTPS1:1;
    unsigned char T4OUTPS2:1;
    unsigned char T4OUTPS3:1;
    unsigned char :1;
  };
} __T4CON_bits_t;
extern volatile __T4CON_bits_t __at(T4CON_ADDR) T4CON_bits;

#ifndef NO_BIT_DEFINES
#define T4CKPS0              T4CON_bits.T4CKPS0
#define T4CKPS1              T4CON_bits.T4CKPS1
#define TMR4ON               T4CON_bits.TMR4ON
#define T4OUTPS0             T4CON_bits.T4OUTPS0
#define T4OUTPS1             T4CON_bits.T4OUTPS1
#define T4OUTPS2             T4CON_bits.T4OUTPS2
#define T4OUTPS3             T4CON_bits.T4OUTPS3
#endif /* NO_BIT_DEFINES */

// ----- T6CON bits --------------------
typedef union {
  struct {
    unsigned char T6CKPS0:1;
    unsigned char T6CKPS1:1;
    unsigned char TMR6ON:1;
    unsigned char T6OUTPS0:1;
    unsigned char T6OUTPS1:1;
    unsigned char T6OUTPS2:1;
    unsigned char T6OUTPS3:1;
    unsigned char :1;
  };
} __T6CON_bits_t;
extern volatile __T6CON_bits_t __at(T6CON_ADDR) T6CON_bits;

#ifndef NO_BIT_DEFINES
#define T6CKPS0              T6CON_bits.T6CKPS0
#define T6CKPS1              T6CON_bits.T6CKPS1
#define TMR6ON               T6CON_bits.TMR6ON
#define T6OUTPS0             T6CON_bits.T6OUTPS0
#define T6OUTPS1             T6CON_bits.T6OUTPS1
#define T6OUTPS2             T6CON_bits.T6OUTPS2
#define T6OUTPS3             T6CON_bits.T6OUTPS3
#endif /* NO_BIT_DEFINES */

// ----- TRISA bits --------------------
typedef union {
  struct {
    unsigned char TRISA0:1;
    unsigned char TRISA1:1;
    unsigned char TRISA2:1;
    unsigned char TRISA3:1;
    unsigned char TRISA4:1;
    unsigned char TRISA5:1;
    unsigned char TRISA6:1;
    unsigned char TRISA7:1;
  };
} __TRISA_bits_t;
extern volatile __TRISA_bits_t __at(TRISA_ADDR) TRISA_bits;

#ifndef NO_BIT_DEFINES
#define TRISA0               TRISA_bits.TRISA0
#define TRISA1               TRISA_bits.TRISA1
#define TRISA2               TRISA_bits.TRISA2
#define TRISA3               TRISA_bits.TRISA3
#define TRISA4               TRISA_bits.TRISA4
#define TRISA5               TRISA_bits.TRISA5
#define TRISA6               TRISA_bits.TRISA6
#define TRISA7               TRISA_bits.TRISA7
#endif /* NO_BIT_DEFINES */

// ----- TRISB bits --------------------
typedef union {
  struct {
    unsigned char TRISB0:1;
    unsigned char TRISB1:1;
    unsigned char TRISB2:1;
    unsigned char TRISB3:1;
    unsigned char TRISB4:1;
    unsigned char TRISB5:1;
    unsigned char TRISB6:1;
    unsigned char TRISB7:1;
  };
} __TRISB_bits_t;
extern volatile __TRISB_bits_t __at(TRISB_ADDR) TRISB_bits;

#ifndef NO_BIT_DEFINES
#define TRISB0               TRISB_bits.TRISB0
#define TRISB1               TRISB_bits.TRISB1
#define TRISB2               TRISB_bits.TRISB2
#define TRISB3               TRISB_bits.TRISB3
#define TRISB4               TRISB_bits.TRISB4
#define TRISB5               TRISB_bits.TRISB5
#define TRISB6               TRISB_bits.TRISB6
#define TRISB7               TRISB_bits.TRISB7
#endif /* NO_BIT_DEFINES */

// ----- TRISC bits --------------------
typedef union {
  struct {
    unsigned char TRISC0:1;
    unsigned char TRISC1:1;
    unsigned char TRISC2:1;
    unsigned char TRISC3:1;
    unsigned char TRISC4:1;
    unsigned char TRISC5:1;
    unsigned char TRISC6:1;
    unsigned char TRISC7:1;
  };
} __TRISC_bits_t;
extern volatile __TRISC_bits_t __at(TRISC_ADDR) TRISC_bits;

#ifndef NO_BIT_DEFINES
#define TRISC0               TRISC_bits.TRISC0
#define TRISC1               TRISC_bits.TRISC1
#define TRISC2               TRISC_bits.TRISC2
#define TRISC3               TRISC_bits.TRISC3
#define TRISC4               TRISC_bits.TRISC4
#define TRISC5               TRISC_bits.TRISC5
#define TRISC6               TRISC_bits.TRISC6
#define TRISC7               TRISC_bits.TRISC7
#endif /* NO_BIT_DEFINES */

// ----- TXSTA bits --------------------
typedef union {
  struct {
    unsigned char TX9D:1;
    unsigned char TRMT:1;
    unsigned char BRGH:1;
    unsigned char SENDB:1;
    unsigned char SYNC:1;
    unsigned char TXEN:1;
    unsigned char TX9:1;
    unsigned char CSRC:1;
  };
} __TXSTA_bits_t;
extern volatile __TXSTA_bits_t __at(TXSTA_ADDR) TXSTA_bits;

#ifndef NO_BIT_DEFINES
#define TX9D                 TXSTA_bits.TX9D
#define TRMT                 TXSTA_bits.TRMT
#define BRGH                 TXSTA_bits.BRGH
#define SENDB                TXSTA_bits.SENDB
#define SYNC                 TXSTA_bits.SYNC
#define TXEN                 TXSTA_bits.TXEN
#define TX9                  TXSTA_bits.TX9
#define CSRC                 TXSTA_bits.CSRC
#endif /* NO_BIT_DEFINES */

// ----- WDTCON bits --------------------
typedef union {
  struct {
    unsigned char SWDTEN:1;
    unsigned char WDTPS0:1;
    unsigned char WDTPS1:1;
    unsigned char WDTPS2:1;
    unsigned char WDTPS3:1;
    unsigned char WDTPS4:1;
    unsigned char :1;
    unsigned char :1;
  };
} __WDTCON_bits_t;
extern volatile __WDTCON_bits_t __at(WDTCON_ADDR) WDTCON_bits;

#ifndef NO_BIT_DEFINES
#define SWDTEN               WDTCON_bits.SWDTEN
#define WDTPS0               WDTCON_bits.WDTPS0
#define WDTPS1               WDTCON_bits.WDTPS1
#define WDTPS2               WDTCON_bits.WDTPS2
#define WDTPS3               WDTCON_bits.WDTPS3
#define WDTPS4               WDTCON_bits.WDTPS4
#endif /* NO_BIT_DEFINES */

// ----- WPUB bits --------------------
typedef union {
  struct {
    unsigned char WPUB0:1;
    unsigned char WPUB1:1;
    unsigned char WPUB2:1;
    unsigned char WPUB3:1;
    unsigned char WPUB4:1;
    unsigned char WPUB5:1;
    unsigned char WPUB6:1;
    unsigned char WPUB7:1;
  };
} __WPUB_bits_t;
extern volatile __WPUB_bits_t __at(WPUB_ADDR) WPUB_bits;

#ifndef NO_BIT_DEFINES
#define WPUB0                WPUB_bits.WPUB0
#define WPUB1                WPUB_bits.WPUB1
#define WPUB2                WPUB_bits.WPUB2
#define WPUB3                WPUB_bits.WPUB3
#define WPUB4                WPUB_bits.WPUB4
#define WPUB5                WPUB_bits.WPUB5
#define WPUB6                WPUB_bits.WPUB6
#define WPUB7                WPUB_bits.WPUB7
#endif /* NO_BIT_DEFINES */

// ----- WPUE bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char WPUE3:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __WPUE_bits_t;
extern volatile __WPUE_bits_t __at(WPUE_ADDR) WPUE_bits;

#ifndef NO_BIT_DEFINES
#define WPUE3                WPUE_bits.WPUE3
#endif /* NO_BIT_DEFINES */

#endif
