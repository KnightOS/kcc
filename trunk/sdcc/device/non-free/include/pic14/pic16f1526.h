//
// Register Declarations for Microchip 16F1526 Processor
//
//
// This header file was automatically generated by:
//
//      inc2h.pl V7033
//
//      Copyright (c) 2002, Kevin L. Pauba, All Rights Reserved
//
//      SDCC is licensed under the GNU Public license (GPL) v2.  Note that
//      this license covers the code to the compiler and other executables,
//      but explicitly does not cover any code or objects generated by sdcc.
//
//      For pic device libraries and header files which are derived from
//      Microchip header (.inc) and linker script (.lkr) files Microchip
//      requires that "The header files should state that they are only to be
//      used with authentic Microchip devices" which makes them incompatible
//      with the GPL. Pic device libraries and header files are located at
//      non-free/lib and non-free/include directories respectively.
//      Sdcc should be run with the --use-non-free command line option in
//      order to include non-free header files and libraries.
//
//      See http://sdcc.sourceforge.net/ for the latest information on sdcc.
//
//
#ifndef P16F1526_H
#define P16F1526_H

//
// Register addresses.
//
#define INDF0_ADDR      0x0000
#define INDF1_ADDR      0x0001
#define PCL_ADDR        0x0002
#define STATUS_ADDR     0x0003
#define FSR0_ADDR       0x0004
#define FSR0L_ADDR      0x0004
#define FSR0H_ADDR      0x0005
#define FSR1_ADDR       0x0006
#define FSR1L_ADDR      0x0006
#define FSR1H_ADDR      0x0007
#define BSR_ADDR        0x0008
#define WREG_ADDR       0x0009
#define PCLATH_ADDR     0x000A
#define INTCON_ADDR     0x000B
#define PORTA_ADDR      0x000C
#define PORTB_ADDR      0x000D
#define PORTC_ADDR      0x000E
#define PORTD_ADDR      0x000F
#define PORTE_ADDR      0x0010
#define PIR1_ADDR       0x0011
#define PIR2_ADDR       0x0012
#define PIR3_ADDR       0x0013
#define PIR4_ADDR       0x0014
#define TMR0_ADDR       0x0015
#define TMR1_ADDR       0x0016
#define TMR1L_ADDR      0x0016
#define TMR1H_ADDR      0x0017
#define T1CON_ADDR      0x0018
#define T1GCON_ADDR     0x0019
#define TMR2_ADDR       0x001A
#define PR2_ADDR        0x001B
#define T2CON_ADDR      0x001C
#define TRISA_ADDR      0x008C
#define TRISB_ADDR      0x008D
#define TRISC_ADDR      0x008E
#define TRISD_ADDR      0x008F
#define TRISE_ADDR      0x0090
#define PIE1_ADDR       0x0091
#define PIE2_ADDR       0x0092
#define PIE3_ADDR       0x0093
#define PIE4_ADDR       0x0094
#define OPTION_REG_ADDR 0x0095
#define PCON_ADDR       0x0096
#define WDTCON_ADDR     0x0097
#define OSCCON_ADDR     0x0099
#define OSCSTAT_ADDR    0x009A
#define ADRES_ADDR      0x009B
#define ADRESL_ADDR     0x009B
#define ADRESH_ADDR     0x009C
#define ADCON0_ADDR     0x009D
#define ADCON1_ADDR     0x009E
#define LATA_ADDR       0x010C
#define LATB_ADDR       0x010D
#define LATC_ADDR       0x010E
#define LATD_ADDR       0x010F
#define LATE_ADDR       0x0110
#define BORCON_ADDR     0x0116
#define FVRCON_ADDR     0x0117
#define APFCON_ADDR     0x011D
#define ANSELA_ADDR     0x018C
#define ANSELB_ADDR     0x018D
#define ANSELD_ADDR     0x018F
#define ANSELE_ADDR     0x0190
#define PMADR_ADDR      0x0191
#define PMADRL_ADDR     0x0191
#define PMADRH_ADDR     0x0192
#define PMDAT_ADDR      0x0193
#define PMDATL_ADDR     0x0193
#define PMDATH_ADDR     0x0194
#define PMCON1_ADDR     0x0195
#define PMCON2_ADDR     0x0196
#define VREGCON_ADDR    0x0197
#define RC1REG_ADDR     0x0199
#define RCREG_ADDR      0x0199
#define RCREG1_ADDR     0x0199
#define TX1REG_ADDR     0x019A
#define TXREG_ADDR      0x019A
#define TXREG1_ADDR     0x019A
#define SP1BRGL_ADDR    0x019B
#define SPBRG_ADDR      0x019B
#define SPBRGL_ADDR     0x019B
#define SPBRGL1_ADDR    0x019B
#define SP1BRGH_ADDR    0x019C
#define SPBRGH_ADDR     0x019C
#define SPBRGH1_ADDR    0x019C
#define RC1STA_ADDR     0x019D
#define RCSTA_ADDR      0x019D
#define RCSTA1_ADDR     0x019D
#define TX1STA_ADDR     0x019E
#define TXSTA_ADDR      0x019E
#define TXSTA1_ADDR     0x019E
#define BAUD1CON_ADDR   0x019F
#define BAUDCON_ADDR    0x019F
#define BAUDCON1_ADDR   0x019F
#define WPUB_ADDR       0x020D
#define WPUD_ADDR       0x020F
#define WPUE_ADDR       0x0210
#define SSP1BUF_ADDR    0x0211
#define SSPBUF_ADDR     0x0211
#define SSP1ADD_ADDR    0x0212
#define SSPADD_ADDR     0x0212
#define SSP1MSK_ADDR    0x0213
#define SSPMSK_ADDR     0x0213
#define SSP1STAT_ADDR   0x0214
#define SSPSTAT_ADDR    0x0214
#define SSP1CON1_ADDR   0x0215
#define SSPCON_ADDR     0x0215
#define SSPCON1_ADDR    0x0215
#define SSP1CON2_ADDR   0x0216
#define SSPCON2_ADDR    0x0216
#define SSP1CON3_ADDR   0x0217
#define SSPCON3_ADDR    0x0217
#define SSP2BUF_ADDR    0x0219
#define SSP2ADD_ADDR    0x021A
#define SSP2MSK_ADDR    0x021B
#define SSP2STAT_ADDR   0x021C
#define SSP2CON1_ADDR   0x021D
#define SSP2CON2_ADDR   0x021E
#define SSP2CON3_ADDR   0x021F
#define PORTF_ADDR      0x028C
#define PORTG_ADDR      0x028D
#define CCPR1_ADDR      0x0291
#define CCPR1L_ADDR     0x0291
#define CCPR1H_ADDR     0x0292
#define CCP1CON_ADDR    0x0293
#define CCPR2_ADDR      0x0298
#define CCPR2L_ADDR     0x0298
#define CCPR2H_ADDR     0x0299
#define CCP2CON_ADDR    0x029A
#define CCPTMRS0_ADDR   0x029D
#define CCPTMRS1_ADDR   0x029E
#define CCPTMRS2_ADDR   0x029F
#define TRISF_ADDR      0x030C
#define TRISG_ADDR      0x030D
#define CCPR3_ADDR      0x0311
#define CCPR3L_ADDR     0x0311
#define CCPR3H_ADDR     0x0312
#define CCP3CON_ADDR    0x0313
#define CCPR4_ADDR      0x0318
#define CCPR4L_ADDR     0x0318
#define CCPR4H_ADDR     0x0319
#define CCP4CON_ADDR    0x031A
#define CCPR5_ADDR      0x031C
#define CCPR5L_ADDR     0x031C
#define CCPR5H_ADDR     0x031D
#define CCP5CON_ADDR    0x031E
#define LATF_ADDR       0x038C
#define LATG_ADDR       0x038D
#define IOCBP_ADDR      0x0394
#define IOCBN_ADDR      0x0395
#define IOCBF_ADDR      0x0396
#define ANSELF_ADDR     0x040C
#define ANSELG_ADDR     0x040D
#define TMR3_ADDR       0x0411
#define TMR3L_ADDR      0x0411
#define TMR3H_ADDR      0x0412
#define T3CON_ADDR      0x0413
#define T3GCON_ADDR     0x0414
#define TMR4_ADDR       0x0415
#define PR4_ADDR        0x0416
#define T4CON_ADDR      0x0417
#define TMR5_ADDR       0x0418
#define TMR5L_ADDR      0x0418
#define TMR5H_ADDR      0x0419
#define T5CON_ADDR      0x041A
#define T5GCON_ADDR     0x041B
#define TMR6_ADDR       0x041C
#define PR6_ADDR        0x041D
#define T6CON_ADDR      0x041E
#define WPUG_ADDR       0x048D
#define RC2REG_ADDR     0x0491
#define RCREG2_ADDR     0x0491
#define TX2REG_ADDR     0x0492
#define TXREG2_ADDR     0x0492
#define SP2BRG_ADDR     0x0493
#define SP2BRGL_ADDR    0x0493
#define SPBRGL2_ADDR    0x0493
#define SP2BRGH_ADDR    0x0494
#define SPBRGH2_ADDR    0x0494
#define RC2STA_ADDR     0x0495
#define RCSTA2_ADDR     0x0495
#define TX2STA_ADDR     0x0496
#define TXSTA2_ADDR     0x0496
#define BAUD2CON_ADDR   0x0497
#define BAUDCON2_ADDR   0x0497
#define TMR8_ADDR       0x0595
#define PR8_ADDR        0x0596
#define T8CON_ADDR      0x0597
#define TMR10_ADDR      0x059C
#define PR10_ADDR       0x059D
#define T10CON_ADDR     0x059E
#define CCPR6_ADDR      0x0611
#define CCPR6L_ADDR     0x0611
#define CCPR6H_ADDR     0x0612
#define CCP6CON_ADDR    0x0613
#define CCPR7_ADDR      0x0614
#define CCPR7L_ADDR     0x0614
#define CCPR7H_ADDR     0x0615
#define CCP7CON_ADDR    0x0616
#define CCPR8_ADDR      0x0617
#define CCPR8L_ADDR     0x0617
#define CCPR8H_ADDR     0x0618
#define CCP8CON_ADDR    0x0619
#define CCPR9_ADDR      0x061A
#define CCPR9L_ADDR     0x061A
#define CCPR9H_ADDR     0x061B
#define CCP9CON_ADDR    0x061C
#define CCPR10_ADDR     0x061D
#define CCPR10L_ADDR    0x061D
#define CCPR10H_ADDR    0x061E
#define CCP10CON_ADDR   0x061F
#define STATUS_SHAD_ADDR        0x0FE4
#define WREG_SHAD_ADDR  0x0FE5
#define BSR_SHAD_ADDR   0x0FE6
#define PCLATH_SHAD_ADDR        0x0FE7
#define FSR0L_SHAD_ADDR 0x0FE8
#define FSR0H_SHAD_ADDR 0x0FE9
#define FSR1L_SHAD_ADDR 0x0FEA
#define FSR1H_SHAD_ADDR 0x0FEB
#define STKPTR_ADDR     0x0FED
#define TOSL_ADDR       0x0FEE
#define TOSH_ADDR       0x0FEF

//
// Memory organization.
//



//         LIST

//==========================================================================
//  MPASM PIC16F1526 processor include
//
//  (c) Copyright 1999-2011 Microchip Technology, All rights reserved
//==========================================================================

//         NOLIST

//==========================================================================
//  This header file defines configurations, registers, and other useful
//  bits of information for the PIC16F1526 microcontroller.  These names
//  are taken to match the data sheets as closely as possible.
//
//  Note that the processor must be selected before this file is included.
//  The processor may be selected the following ways:
//
//       1. Command line switch:
//               C:\MPASM MYFILE.ASM /PIC16F1526
//       2. LIST directive in the source file
//               LIST   P=PIC16F1526
//       3. Processor Type entry in the MPASM full-screen interface
//       4. Setting the processor in the MPLAB Project Dialog
//==========================================================================

//==========================================================================
//
//       Verify Processor
//
//==========================================================================
//        IFNDEF __16F1526
//            MESSG "Processor-header file mismatch.  Verify selected processor."
//         ENDIF



//==========================================================================
//
//       Register Definitions
//
//==========================================================================

#define W                    0x0000
#define F                    0x0001

//----- Register Files -----------------------------------------------------

//-----Bank0------------------
extern __sfr  __at (INDF0_ADDR)                   INDF0;
extern __sfr  __at (INDF1_ADDR)                   INDF1;
extern __sfr  __at (PCL_ADDR)                     PCL;
extern __sfr  __at (STATUS_ADDR)                  STATUS;
extern __sfr  __at (FSR0_ADDR)                    FSR0;
extern __sfr  __at (FSR0L_ADDR)                   FSR0L;
extern __sfr  __at (FSR0H_ADDR)                   FSR0H;
extern __sfr  __at (FSR1_ADDR)                    FSR1;
extern __sfr  __at (FSR1L_ADDR)                   FSR1L;
extern __sfr  __at (FSR1H_ADDR)                   FSR1H;
extern __sfr  __at (BSR_ADDR)                     BSR;
extern __sfr  __at (WREG_ADDR)                    WREG;
extern __sfr  __at (PCLATH_ADDR)                  PCLATH;
extern __sfr  __at (INTCON_ADDR)                  INTCON;
extern __sfr  __at (PORTA_ADDR)                   PORTA;
extern __sfr  __at (PORTB_ADDR)                   PORTB;
extern __sfr  __at (PORTC_ADDR)                   PORTC;
extern __sfr  __at (PORTD_ADDR)                   PORTD;
extern __sfr  __at (PORTE_ADDR)                   PORTE;
extern __sfr  __at (PIR1_ADDR)                    PIR1;
extern __sfr  __at (PIR2_ADDR)                    PIR2;
extern __sfr  __at (PIR3_ADDR)                    PIR3;
extern __sfr  __at (PIR4_ADDR)                    PIR4;
extern __sfr  __at (TMR0_ADDR)                    TMR0;
extern __sfr  __at (TMR1_ADDR)                    TMR1;
extern __sfr  __at (TMR1L_ADDR)                   TMR1L;
extern __sfr  __at (TMR1H_ADDR)                   TMR1H;
extern __sfr  __at (T1CON_ADDR)                   T1CON;
extern __sfr  __at (T1GCON_ADDR)                  T1GCON;
extern __sfr  __at (TMR2_ADDR)                    TMR2;
extern __sfr  __at (PR2_ADDR)                     PR2;
extern __sfr  __at (T2CON_ADDR)                   T2CON;

//-----Bank1------------------
extern __sfr  __at (TRISA_ADDR)                   TRISA;
extern __sfr  __at (TRISB_ADDR)                   TRISB;
extern __sfr  __at (TRISC_ADDR)                   TRISC;
extern __sfr  __at (TRISD_ADDR)                   TRISD;
extern __sfr  __at (TRISE_ADDR)                   TRISE;
extern __sfr  __at (PIE1_ADDR)                    PIE1;
extern __sfr  __at (PIE2_ADDR)                    PIE2;
extern __sfr  __at (PIE3_ADDR)                    PIE3;
extern __sfr  __at (PIE4_ADDR)                    PIE4;
extern __sfr  __at (OPTION_REG_ADDR)              OPTION_REG;
extern __sfr  __at (PCON_ADDR)                    PCON;
extern __sfr  __at (WDTCON_ADDR)                  WDTCON;
extern __sfr  __at (OSCCON_ADDR)                  OSCCON;
extern __sfr  __at (OSCSTAT_ADDR)                 OSCSTAT;
extern __sfr  __at (ADRES_ADDR)                   ADRES;
extern __sfr  __at (ADRESL_ADDR)                  ADRESL;
extern __sfr  __at (ADRESH_ADDR)                  ADRESH;
extern __sfr  __at (ADCON0_ADDR)                  ADCON0;
extern __sfr  __at (ADCON1_ADDR)                  ADCON1;

//-----Bank2------------------
extern __sfr  __at (LATA_ADDR)                    LATA;
extern __sfr  __at (LATB_ADDR)                    LATB;
extern __sfr  __at (LATC_ADDR)                    LATC;
extern __sfr  __at (LATD_ADDR)                    LATD;
extern __sfr  __at (LATE_ADDR)                    LATE;
extern __sfr  __at (BORCON_ADDR)                  BORCON;
extern __sfr  __at (FVRCON_ADDR)                  FVRCON;
extern __sfr  __at (APFCON_ADDR)                  APFCON;

//-----Bank3------------------
extern __sfr  __at (ANSELA_ADDR)                  ANSELA;
extern __sfr  __at (ANSELB_ADDR)                  ANSELB;
extern __sfr  __at (ANSELD_ADDR)                  ANSELD;
extern __sfr  __at (ANSELE_ADDR)                  ANSELE;
extern __sfr  __at (PMADR_ADDR)                   PMADR;
extern __sfr  __at (PMADRL_ADDR)                  PMADRL;
extern __sfr  __at (PMADRH_ADDR)                  PMADRH;
extern __sfr  __at (PMDAT_ADDR)                   PMDAT;
extern __sfr  __at (PMDATL_ADDR)                  PMDATL;
extern __sfr  __at (PMDATH_ADDR)                  PMDATH;
extern __sfr  __at (PMCON1_ADDR)                  PMCON1;
extern __sfr  __at (PMCON2_ADDR)                  PMCON2;
extern __sfr  __at (VREGCON_ADDR)                 VREGCON;
extern __sfr  __at (RC1REG_ADDR)                  RC1REG;
extern __sfr  __at (RCREG_ADDR)                   RCREG;
extern __sfr  __at (RCREG1_ADDR)                  RCREG1;
extern __sfr  __at (TX1REG_ADDR)                  TX1REG;
extern __sfr  __at (TXREG_ADDR)                   TXREG;
extern __sfr  __at (TXREG1_ADDR)                  TXREG1;
extern __sfr  __at (SP1BRGL_ADDR)                 SP1BRGL;
extern __sfr  __at (SPBRG_ADDR)                   SPBRG;
extern __sfr  __at (SPBRGL_ADDR)                  SPBRGL;
extern __sfr  __at (SPBRGL1_ADDR)                 SPBRGL1;
extern __sfr  __at (SP1BRGH_ADDR)                 SP1BRGH;
extern __sfr  __at (SPBRGH_ADDR)                  SPBRGH;
extern __sfr  __at (SPBRGH1_ADDR)                 SPBRGH1;
extern __sfr  __at (RC1STA_ADDR)                  RC1STA;
extern __sfr  __at (RCSTA_ADDR)                   RCSTA;
extern __sfr  __at (RCSTA1_ADDR)                  RCSTA1;
extern __sfr  __at (TX1STA_ADDR)                  TX1STA;
extern __sfr  __at (TXSTA_ADDR)                   TXSTA;
extern __sfr  __at (TXSTA1_ADDR)                  TXSTA1;
extern __sfr  __at (BAUD1CON_ADDR)                BAUD1CON;
extern __sfr  __at (BAUDCON_ADDR)                 BAUDCON;
extern __sfr  __at (BAUDCON1_ADDR)                BAUDCON1;

//-----Bank4------------------
extern __sfr  __at (WPUB_ADDR)                    WPUB;
extern __sfr  __at (WPUD_ADDR)                    WPUD;
extern __sfr  __at (WPUE_ADDR)                    WPUE;
extern __sfr  __at (SSP1BUF_ADDR)                 SSP1BUF;
extern __sfr  __at (SSPBUF_ADDR)                  SSPBUF;
extern __sfr  __at (SSP1ADD_ADDR)                 SSP1ADD;
extern __sfr  __at (SSPADD_ADDR)                  SSPADD;
extern __sfr  __at (SSP1MSK_ADDR)                 SSP1MSK;
extern __sfr  __at (SSPMSK_ADDR)                  SSPMSK;
extern __sfr  __at (SSP1STAT_ADDR)                SSP1STAT;
extern __sfr  __at (SSPSTAT_ADDR)                 SSPSTAT;
extern __sfr  __at (SSP1CON1_ADDR)                SSP1CON1;
extern __sfr  __at (SSPCON_ADDR)                  SSPCON;
extern __sfr  __at (SSPCON1_ADDR)                 SSPCON1;
extern __sfr  __at (SSP1CON2_ADDR)                SSP1CON2;
extern __sfr  __at (SSPCON2_ADDR)                 SSPCON2;
extern __sfr  __at (SSP1CON3_ADDR)                SSP1CON3;
extern __sfr  __at (SSPCON3_ADDR)                 SSPCON3;
extern __sfr  __at (SSP2BUF_ADDR)                 SSP2BUF;
extern __sfr  __at (SSP2ADD_ADDR)                 SSP2ADD;
extern __sfr  __at (SSP2MSK_ADDR)                 SSP2MSK;
extern __sfr  __at (SSP2STAT_ADDR)                SSP2STAT;
extern __sfr  __at (SSP2CON1_ADDR)                SSP2CON1;
extern __sfr  __at (SSP2CON2_ADDR)                SSP2CON2;
extern __sfr  __at (SSP2CON3_ADDR)                SSP2CON3;

//-----Bank5------------------
extern __sfr  __at (PORTF_ADDR)                   PORTF;
extern __sfr  __at (PORTG_ADDR)                   PORTG;
extern __sfr  __at (CCPR1_ADDR)                   CCPR1;
extern __sfr  __at (CCPR1L_ADDR)                  CCPR1L;
extern __sfr  __at (CCPR1H_ADDR)                  CCPR1H;
extern __sfr  __at (CCP1CON_ADDR)                 CCP1CON;
extern __sfr  __at (CCPR2_ADDR)                   CCPR2;
extern __sfr  __at (CCPR2L_ADDR)                  CCPR2L;
extern __sfr  __at (CCPR2H_ADDR)                  CCPR2H;
extern __sfr  __at (CCP2CON_ADDR)                 CCP2CON;
extern __sfr  __at (CCPTMRS0_ADDR)                CCPTMRS0;
extern __sfr  __at (CCPTMRS1_ADDR)                CCPTMRS1;
extern __sfr  __at (CCPTMRS2_ADDR)                CCPTMRS2;

//-----Bank6------------------
extern __sfr  __at (TRISF_ADDR)                   TRISF;
extern __sfr  __at (TRISG_ADDR)                   TRISG;
extern __sfr  __at (CCPR3_ADDR)                   CCPR3;
extern __sfr  __at (CCPR3L_ADDR)                  CCPR3L;
extern __sfr  __at (CCPR3H_ADDR)                  CCPR3H;
extern __sfr  __at (CCP3CON_ADDR)                 CCP3CON;
extern __sfr  __at (CCPR4_ADDR)                   CCPR4;
extern __sfr  __at (CCPR4L_ADDR)                  CCPR4L;
extern __sfr  __at (CCPR4H_ADDR)                  CCPR4H;
extern __sfr  __at (CCP4CON_ADDR)                 CCP4CON;
extern __sfr  __at (CCPR5_ADDR)                   CCPR5;
extern __sfr  __at (CCPR5L_ADDR)                  CCPR5L;
extern __sfr  __at (CCPR5H_ADDR)                  CCPR5H;
extern __sfr  __at (CCP5CON_ADDR)                 CCP5CON;

//-----Bank7------------------
extern __sfr  __at (LATF_ADDR)                    LATF;
extern __sfr  __at (LATG_ADDR)                    LATG;
extern __sfr  __at (IOCBP_ADDR)                   IOCBP;
extern __sfr  __at (IOCBN_ADDR)                   IOCBN;
extern __sfr  __at (IOCBF_ADDR)                   IOCBF;

//-----Bank8------------------
extern __sfr  __at (ANSELF_ADDR)                  ANSELF;
extern __sfr  __at (ANSELG_ADDR)                  ANSELG;
extern __sfr  __at (TMR3_ADDR)                    TMR3;
extern __sfr  __at (TMR3L_ADDR)                   TMR3L;
extern __sfr  __at (TMR3H_ADDR)                   TMR3H;
extern __sfr  __at (T3CON_ADDR)                   T3CON;
extern __sfr  __at (T3GCON_ADDR)                  T3GCON;
extern __sfr  __at (TMR4_ADDR)                    TMR4;
extern __sfr  __at (PR4_ADDR)                     PR4;
extern __sfr  __at (T4CON_ADDR)                   T4CON;
extern __sfr  __at (TMR5_ADDR)                    TMR5;
extern __sfr  __at (TMR5L_ADDR)                   TMR5L;
extern __sfr  __at (TMR5H_ADDR)                   TMR5H;
extern __sfr  __at (T5CON_ADDR)                   T5CON;
extern __sfr  __at (T5GCON_ADDR)                  T5GCON;
extern __sfr  __at (TMR6_ADDR)                    TMR6;
extern __sfr  __at (PR6_ADDR)                     PR6;
extern __sfr  __at (T6CON_ADDR)                   T6CON;

//-----Bank9------------------
extern __sfr  __at (WPUG_ADDR)                    WPUG;
extern __sfr  __at (RC2REG_ADDR)                  RC2REG;
extern __sfr  __at (RCREG2_ADDR)                  RCREG2;
extern __sfr  __at (TX2REG_ADDR)                  TX2REG;
extern __sfr  __at (TXREG2_ADDR)                  TXREG2;
extern __sfr  __at (SP2BRG_ADDR)                  SP2BRG;
extern __sfr  __at (SP2BRGL_ADDR)                 SP2BRGL;
extern __sfr  __at (SPBRGL2_ADDR)                 SPBRGL2;
extern __sfr  __at (SP2BRGH_ADDR)                 SP2BRGH;
extern __sfr  __at (SPBRGH2_ADDR)                 SPBRGH2;
extern __sfr  __at (RC2STA_ADDR)                  RC2STA;
extern __sfr  __at (RCSTA2_ADDR)                  RCSTA2;
extern __sfr  __at (TX2STA_ADDR)                  TX2STA;
extern __sfr  __at (TXSTA2_ADDR)                  TXSTA2;
extern __sfr  __at (BAUD2CON_ADDR)                BAUD2CON;
extern __sfr  __at (BAUDCON2_ADDR)                BAUDCON2;

//-----Bank11------------------
extern __sfr  __at (TMR8_ADDR)                    TMR8;
extern __sfr  __at (PR8_ADDR)                     PR8;
extern __sfr  __at (T8CON_ADDR)                   T8CON;
extern __sfr  __at (TMR10_ADDR)                   TMR10;
extern __sfr  __at (PR10_ADDR)                    PR10;
extern __sfr  __at (T10CON_ADDR)                  T10CON;

//-----Bank12------------------
extern __sfr  __at (CCPR6_ADDR)                   CCPR6;
extern __sfr  __at (CCPR6L_ADDR)                  CCPR6L;
extern __sfr  __at (CCPR6H_ADDR)                  CCPR6H;
extern __sfr  __at (CCP6CON_ADDR)                 CCP6CON;
extern __sfr  __at (CCPR7_ADDR)                   CCPR7;
extern __sfr  __at (CCPR7L_ADDR)                  CCPR7L;
extern __sfr  __at (CCPR7H_ADDR)                  CCPR7H;
extern __sfr  __at (CCP7CON_ADDR)                 CCP7CON;
extern __sfr  __at (CCPR8_ADDR)                   CCPR8;
extern __sfr  __at (CCPR8L_ADDR)                  CCPR8L;
extern __sfr  __at (CCPR8H_ADDR)                  CCPR8H;
extern __sfr  __at (CCP8CON_ADDR)                 CCP8CON;
extern __sfr  __at (CCPR9_ADDR)                   CCPR9;
extern __sfr  __at (CCPR9L_ADDR)                  CCPR9L;
extern __sfr  __at (CCPR9H_ADDR)                  CCPR9H;
extern __sfr  __at (CCP9CON_ADDR)                 CCP9CON;
extern __sfr  __at (CCPR10_ADDR)                  CCPR10;
extern __sfr  __at (CCPR10L_ADDR)                 CCPR10L;
extern __sfr  __at (CCPR10H_ADDR)                 CCPR10H;
extern __sfr  __at (CCP10CON_ADDR)                CCP10CON;

//-----Bank31------------------
extern __sfr  __at (STATUS_SHAD_ADDR)             STATUS_SHAD;
extern __sfr  __at (WREG_SHAD_ADDR)               WREG_SHAD;
extern __sfr  __at (BSR_SHAD_ADDR)                BSR_SHAD;
extern __sfr  __at (PCLATH_SHAD_ADDR)             PCLATH_SHAD;
extern __sfr  __at (FSR0L_SHAD_ADDR)              FSR0L_SHAD;
extern __sfr  __at (FSR0H_SHAD_ADDR)              FSR0H_SHAD;
extern __sfr  __at (FSR1L_SHAD_ADDR)              FSR1L_SHAD;
extern __sfr  __at (FSR1H_SHAD_ADDR)              FSR1H_SHAD;
extern __sfr  __at (STKPTR_ADDR)                  STKPTR;
extern __sfr  __at (TOSL_ADDR)                    TOSL;
extern __sfr  __at (TOSH_ADDR)                    TOSH;

//----- STATUS Bits -----------------------------------------------------


//----- BSR Bits -----------------------------------------------------


//----- INTCON Bits -----------------------------------------------------



//----- PORTA Bits -----------------------------------------------------


//----- PORTB Bits -----------------------------------------------------


//----- PORTC Bits -----------------------------------------------------


//----- PORTD Bits -----------------------------------------------------


//----- PORTE Bits -----------------------------------------------------


//----- PIR1 Bits -----------------------------------------------------



//----- PIR2 Bits -----------------------------------------------------



//----- PIR3 Bits -----------------------------------------------------


//----- PIR4 Bits -----------------------------------------------------


//----- T1CON Bits -----------------------------------------------------



//----- T1GCON Bits -----------------------------------------------------



//----- T2CON Bits -----------------------------------------------------



//----- TRISA Bits -----------------------------------------------------


//----- TRISB Bits -----------------------------------------------------


//----- TRISC Bits -----------------------------------------------------


//----- TRISD Bits -----------------------------------------------------


//----- TRISE Bits -----------------------------------------------------


//----- PIE1 Bits -----------------------------------------------------



//----- PIE2 Bits -----------------------------------------------------



//----- PIE3 Bits -----------------------------------------------------


//----- PIE4 Bits -----------------------------------------------------


//----- OPTION_REG Bits -----------------------------------------------------



//----- PCON Bits -----------------------------------------------------


//----- WDTCON Bits -----------------------------------------------------



//----- OSCCON Bits -----------------------------------------------------


//----- OSCSTAT Bits -----------------------------------------------------



//----- ADCON0 Bits -----------------------------------------------------




//----- ADCON1 Bits -----------------------------------------------------



//----- LATA Bits -----------------------------------------------------


//----- LATB Bits -----------------------------------------------------


//----- LATC Bits -----------------------------------------------------


//----- LATD Bits -----------------------------------------------------



//----- LATE Bits -----------------------------------------------------


//----- BORCON Bits -----------------------------------------------------


//----- FVRCON Bits -----------------------------------------------------



//----- APFCON Bits -----------------------------------------------------


//----- ANSELA Bits -----------------------------------------------------



//----- ANSELB Bits -----------------------------------------------------



//----- ANSELD Bits -----------------------------------------------------



//----- ANSELE Bits -----------------------------------------------------



//----- PMCON1 Bits -----------------------------------------------------


//----- VREGCON Bits -----------------------------------------------------


//----- RC1STA Bits -----------------------------------------------------


//----- RCSTA Bits -----------------------------------------------------


//----- RCSTA1 Bits -----------------------------------------------------


//----- TX1STA Bits -----------------------------------------------------


//----- TXSTA Bits -----------------------------------------------------


//----- TXSTA1 Bits -----------------------------------------------------


//----- BAUD1CON Bits -----------------------------------------------------


//----- BAUDCON Bits -----------------------------------------------------


//----- BAUDCON1 Bits -----------------------------------------------------


//----- WPUB Bits -----------------------------------------------------



//----- WPUD Bits -----------------------------------------------------


//----- WPUE Bits -----------------------------------------------------


//----- SSP1STAT Bits -----------------------------------------------------


//----- SSPSTAT Bits -----------------------------------------------------


//----- SSP1CON1 Bits -----------------------------------------------------



//----- SSPCON Bits -----------------------------------------------------



//----- SSPCON1 Bits -----------------------------------------------------



//----- SSP1CON2 Bits -----------------------------------------------------


//----- SSPCON2 Bits -----------------------------------------------------


//----- SSP1CON3 Bits -----------------------------------------------------


//----- SSPCON3 Bits -----------------------------------------------------


//----- SSP2STAT Bits -----------------------------------------------------


//----- SSP2CON1 Bits -----------------------------------------------------



//----- SSP2CON2 Bits -----------------------------------------------------


//----- SSP2CON3 Bits -----------------------------------------------------


//----- PORTF Bits -----------------------------------------------------


//----- PORTG Bits -----------------------------------------------------


//----- CCP1CON Bits -----------------------------------------------------


//----- CCP2CON Bits -----------------------------------------------------


//----- CCPTMRS0 Bits -----------------------------------------------------


//----- CCPTMRS1 Bits -----------------------------------------------------


//----- CCPTMRS2 Bits -----------------------------------------------------


//----- TRISF Bits -----------------------------------------------------


//----- TRISG Bits -----------------------------------------------------


//----- CCP3CON Bits -----------------------------------------------------


//----- CCP4CON Bits -----------------------------------------------------


//----- CCP5CON Bits -----------------------------------------------------


//----- LATF Bits -----------------------------------------------------


//----- LATG Bits -----------------------------------------------------


//----- IOCBP Bits -----------------------------------------------------



//----- IOCBN Bits -----------------------------------------------------



//----- IOCBF Bits -----------------------------------------------------



//----- ANSELF Bits -----------------------------------------------------


//----- ANSELG Bits -----------------------------------------------------


//----- T3CON Bits -----------------------------------------------------



//----- T3GCON Bits -----------------------------------------------------



//----- T4CON Bits -----------------------------------------------------



//----- T5CON Bits -----------------------------------------------------



//----- T5GCON Bits -----------------------------------------------------



//----- T6CON Bits -----------------------------------------------------



//----- WPUG Bits -----------------------------------------------------


//----- RC2STA Bits -----------------------------------------------------


//----- RCSTA2 Bits -----------------------------------------------------


//----- TX2STA Bits -----------------------------------------------------


//----- TXSTA2 Bits -----------------------------------------------------


//----- BAUD2CON Bits -----------------------------------------------------


//----- BAUDCON2 Bits -----------------------------------------------------


//----- T8CON Bits -----------------------------------------------------



//----- T10CON Bits -----------------------------------------------------



//----- CCP6CON Bits -----------------------------------------------------


//----- CCP7CON Bits -----------------------------------------------------


//----- CCP8CON Bits -----------------------------------------------------


//----- CCP9CON Bits -----------------------------------------------------


//----- CCP10CON Bits -----------------------------------------------------


//----- STATUS_SHAD Bits -----------------------------------------------------



//==========================================================================
//
//       RAM Definitions
//
//==========================================================================
//        __MAXRAM  H'0FFF'
//        __BADRAM  H'001D'-H'001F'
//        __BADRAM  H'0098'
//        __BADRAM  H'009F'
//        __BADRAM  H'0111'-H'0115'
//        __BADRAM  H'0118'-H'011C'
//        __BADRAM  H'011E'-H'011F'
//        __BADRAM  H'018E'
//        __BADRAM  H'0198'
//        __BADRAM  H'020C'
//        __BADRAM  H'020E'
//        __BADRAM  H'0218'
//        __BADRAM  H'028E'-H'0290'
//        __BADRAM  H'0294'-H'0297'
//        __BADRAM  H'029B'-H'029C'
//        __BADRAM  H'030E'-H'0310'
//        __BADRAM  H'0314'-H'0317'
//        __BADRAM  H'031B'
//        __BADRAM  H'031F'
//        __BADRAM  H'038E'-H'0393'
//        __BADRAM  H'0397'-H'039F'
//        __BADRAM  H'040E'-H'0410'
//        __BADRAM  H'041F'
//        __BADRAM  H'048C'
//        __BADRAM  H'048E'-H'0490'
//        __BADRAM  H'0498'-H'049F'
//        __BADRAM  H'04C0'-H'04EF'
//        __BADRAM  H'050C'-H'051F'
//        __BADRAM  H'0520'-H'056F'
//        __BADRAM  H'058C'-H'0594'
//        __BADRAM  H'0598'-H'059B'
//        __BADRAM  H'059F'
//        __BADRAM  H'05A0'-H'05EF'
//        __BADRAM  H'060C'-H'0610'
//        __BADRAM  H'0620'-H'066F'
//        __BADRAM  H'068C'-H'069F'
//        __BADRAM  H'06A0'-H'06EF'
//        __BADRAM  H'070C'-H'071F'
//        __BADRAM  H'0720'-H'076F'
//        __BADRAM  H'078C'-H'079F'
//        __BADRAM  H'07A0'-H'07EF'
//        __BADRAM  H'080C'-H'081F'
//        __BADRAM  H'0820'-H'086F'
//        __BADRAM  H'088C'-H'089F'
//        __BADRAM  H'08A0'-H'08EF'
//        __BADRAM  H'090C'-H'091F'
//        __BADRAM  H'0920'-H'096F'
//        __BADRAM  H'098C'-H'099F'
//        __BADRAM  H'09A0'-H'09EF'
//        __BADRAM  H'0A0C'-H'0A1F'
//        __BADRAM  H'0A20'-H'0A6F'
//        __BADRAM  H'0A8C'-H'0A9F'
//        __BADRAM  H'0AA0'-H'0AEF'
//        __BADRAM  H'0B0C'-H'0B1F'
//        __BADRAM  H'0B20'-H'0B6F'
//        __BADRAM  H'0B8C'-H'0B9F'
//        __BADRAM  H'0BA0'-H'0BEF'
//        __BADRAM  H'0C0C'-H'0C1F'
//        __BADRAM  H'0C20'-H'0C6F'
//        __BADRAM  H'0C8C'-H'0C9F'
//        __BADRAM  H'0CA0'-H'0CEF'
//        __BADRAM  H'0D0C'-H'0D1F'
//        __BADRAM  H'0D20'-H'0D6F'
//        __BADRAM  H'0D8C'-H'0D9F'
//        __BADRAM  H'0DA0'-H'0DEF'
//        __BADRAM  H'0E0C'-H'0E1F'
//        __BADRAM  H'0E20'-H'0E6F'
//        __BADRAM  H'0E8C'-H'0E9F'
//        __BADRAM  H'0EA0'-H'0EEF'
//        __BADRAM  H'0F0C'-H'0F1F'
//        __BADRAM  H'0F20'-H'0F6F'
//        __BADRAM  H'0F8C'-H'0FE3'
//        __BADRAM  H'0FEC'

//==========================================================================
//
//       Configuration Bits
//
//   NAME            Address
//   CONFIG1           8007h
//   CONFIG2           8008h
//
//==========================================================================

// The following is an assignment of address values for all of the
// configuration registers for the purpose of table reads
#define _CONFIG1             0x8007
#define _CONFIG2             0x8008

//----- CONFIG1 Options --------------------------------------------------
#define _FOSC_LP             0xFFF8    // LP Oscillator, Low-power crystal connected between OSC1 and OSC2 pins
#define _FOSC_XT             0xFFF9    // XT Oscillator, Crystal/resonator connected between OSC1 and OSC2 pins
#define _FOSC_HS             0xFFFA    // HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2 pins
#define _FOSC_EXTRC          0xFFFB    // EXTRC oscillator: External RC circuit connected to CLKIN pin
#define _FOSC_INTOSC         0xFFFC    // INTOSC oscillator: I/O function on CLKIN pin
#define _FOSC_ECL            0xFFFD    // ECL, External Clock, Low Power Mode (0-0.5 MHz): device clock supplied to CLKIN pin
#define _FOSC_ECM            0xFFFE    // ECM, External Clock, Medium Power Mode (0.5-4 MHz): device clock supplied to CLKIN pin
#define _FOSC_ECH            0xFFFF    // ECH, External Clock, High Power Mode (4-20 MHz): device clock supplied to CLKIN pin

#define _WDTE_OFF            0xFFE7    // WDT disabled
#define _WDTE_SWDTEN         0xFFEF    // WDT controlled by the SWDTEN bit in the WDTCON register
#define _WDTE_NSLEEP         0xFFF7    // WDT enabled while running and disabled in Sleep
#define _WDTE_ON             0xFFFF    // WDT enabled

#define _PWRTE_ON            0xFFDF    // PWRT enabled
#define _PWRTE_OFF           0xFFFF    // PWRT disabled

#define _MCLRE_OFF           0xFFBF    // MCLR/VPP pin function is digital input
#define _MCLRE_ON            0xFFFF    // MCLR/VPP pin function is MCLR

#define _CP_ON               0xFF7F    // Program memory code protection is enabled
#define _CP_OFF              0xFFFF    // Program memory code protection is disabled

#define _BOREN_OFF           0xF9FF    // Brown-out Reset disabled
#define _BOREN_SBODEN        0xFBFF    // Brown-out Reset controlled by the SBOREN bit in the BORCON register
#define _BOREN_NSLEEP        0xFDFF    // Brown-out Reset enabled while running and disabled in Sleep
#define _BOREN_ON            0xFFFF    // Brown-out Reset enabled

#define _CLKOUTEN_ON         0xF7FF    // CLKOUT function is enabled on the CLKOUT pin
#define _CLKOUTEN_OFF        0xFFFF    // CLKOUT function is disabled. I/O or oscillator function on the CLKOUT pin

#define _IESO_OFF            0xEFFF    // Internal/External Switchover mode is disabled
#define _IESO_ON             0xFFFF    // Internal/External Switchover mode is enabled

#define _FCMEN_OFF           0xDFFF    // Fail-Safe Clock Monitor is disabled
#define _FCMEN_ON            0xFFFF    // Fail-Safe Clock Monitor is enabled

//----- CONFIG2 Options --------------------------------------------------
#define _WRT_ALL             0xFFFC    // 000h to 3FFFh write protected, no addresses may be modified by PMCON control
#define _WRT_HALF            0xFFFD    // 000h to FFFh write protected, 2000h to 3FFFh may be modified by PMCON control
#define _WRT_BOOT            0xFFFE    // 000h to 1FFh write protected, 200h to 3FFFh may be modified by PMCON control
#define _WRT_OFF             0xFFFF    // Write protection off

#define _VCAPEN_ON           0xFFEF    // VCAP pin function enabled
#define _VCAPEN_OFF          0xFFFF    // VCAP pin function disabled

#define _STVREN_OFF          0xFDFF    // Stack Overflow or Underflow will not cause a Reset
#define _STVREN_ON           0xFFFF    // Stack Overflow or Underflow will cause a Reset

#define _BORV_HI             0xFBFF    // Brown-out Reset Voltage (VBOR) set to 2.7V
#define _BORV_270            0xFBFF    // Brown-out Reset Voltage (VBOR) set to 2.7V
#define _BORV_LO             0xFFFF    // Brown-out Reset Voltage (VBOR) set to 2.4V
#define _BORV_245            0xFFFF    // Brown-out Reset Voltage (VBOR) set to 2.4V

#define _LPBOR_ON            0xF7FF    // Low-Power BOR is enabled
#define _LPBOR_OFF           0xFFFF    // Low-Power BOR is disabled

#define _LVP_OFF             0xDFFF    // High-voltage on MCLR/VPP must be used for programming
#define _LVP_ON              0xFFFF    // Low-voltage programming enabled

//----- DEVID Equates --------------------------------------------------
#define _DEVID1              0x8006

//----- IDLOC Equates --------------------------------------------------
#define _IDLOC0              0x8000
#define _IDLOC1              0x8001
#define _IDLOC2              0x8002
#define _IDLOC3              0x8003

//         LIST

// ----- ADCON0 bits --------------------
typedef union {
  struct {
    unsigned char ADON:1;
    unsigned char GO_NOT_DONE:1;
    unsigned char CHS0:1;
    unsigned char CHS1:1;
    unsigned char CHS2:1;
    unsigned char CHS3:1;
    unsigned char CHS4:1;
    unsigned char :1;
  };
  struct {
    unsigned char :1;
    unsigned char ADGO:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
  struct {
    unsigned char :1;
    unsigned char GO:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __ADCON0bits_t;
extern volatile __ADCON0bits_t __at(ADCON0_ADDR) ADCON0bits;

// ----- ADCON1 bits --------------------
typedef union {
  struct {
    unsigned char ADPREF0:1;
    unsigned char ADPREF1:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char ADCS0:1;
    unsigned char ADCS1:1;
    unsigned char ADCS2:1;
    unsigned char ADFM:1;
  };
} __ADCON1bits_t;
extern volatile __ADCON1bits_t __at(ADCON1_ADDR) ADCON1bits;

// ----- ANSELA bits --------------------
typedef union {
  struct {
    unsigned char ANSA0:1;
    unsigned char ANSA1:1;
    unsigned char ANSA2:1;
    unsigned char ANSA3:1;
    unsigned char :1;
    unsigned char ANSA5:1;
    unsigned char :1;
    unsigned char :1;
  };
} __ANSELAbits_t;
extern volatile __ANSELAbits_t __at(ANSELA_ADDR) ANSELAbits;

// ----- ANSELB bits --------------------
typedef union {
  struct {
    unsigned char ANSB0:1;
    unsigned char ANSB1:1;
    unsigned char ANSB2:1;
    unsigned char ANSB3:1;
    unsigned char ANSB4:1;
    unsigned char ANSB5:1;
    unsigned char :1;
    unsigned char :1;
  };
} __ANSELBbits_t;
extern volatile __ANSELBbits_t __at(ANSELB_ADDR) ANSELBbits;

// ----- ANSELD bits --------------------
typedef union {
  struct {
    unsigned char ANSD0:1;
    unsigned char ANSD1:1;
    unsigned char ANSD2:1;
    unsigned char ANSD3:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __ANSELDbits_t;
extern volatile __ANSELDbits_t __at(ANSELD_ADDR) ANSELDbits;

// ----- ANSELE bits --------------------
typedef union {
  struct {
    unsigned char ANSE0:1;
    unsigned char ANSE1:1;
    unsigned char ANSE2:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __ANSELEbits_t;
extern volatile __ANSELEbits_t __at(ANSELE_ADDR) ANSELEbits;

// ----- ANSELF bits --------------------
typedef union {
  struct {
    unsigned char ANSF0:1;
    unsigned char ANSF1:1;
    unsigned char ANSF2:1;
    unsigned char ANSF3:1;
    unsigned char ANSF4:1;
    unsigned char ANSF5:1;
    unsigned char ANSF6:1;
    unsigned char ANSF7:1;
  };
} __ANSELFbits_t;
extern volatile __ANSELFbits_t __at(ANSELF_ADDR) ANSELFbits;

// ----- ANSELG bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char ANSG1:1;
    unsigned char ANSG2:1;
    unsigned char ANSG3:1;
    unsigned char ANSG4:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __ANSELGbits_t;
extern volatile __ANSELGbits_t __at(ANSELG_ADDR) ANSELGbits;

// ----- APFCON bits --------------------
typedef union {
  struct {
    unsigned char CCP2SEL:1;
    unsigned char T3CKISEL:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __APFCONbits_t;
extern volatile __APFCONbits_t __at(APFCON_ADDR) APFCONbits;

// ----- BAUD1CON bits --------------------
typedef union {
  struct {
    unsigned char ABDEN:1;
    unsigned char WUE:1;
    unsigned char :1;
    unsigned char BRG16:1;
    unsigned char SCKP:1;
    unsigned char :1;
    unsigned char RCIDL:1;
    unsigned char ABDOVF:1;
  };
} __BAUD1CONbits_t;
extern volatile __BAUD1CONbits_t __at(BAUD1CON_ADDR) BAUD1CONbits;

// ----- BAUD2CON bits --------------------
typedef union {
  struct {
    unsigned char ABDEN:1;
    unsigned char WUE:1;
    unsigned char :1;
    unsigned char BRG16:1;
    unsigned char SCKP:1;
    unsigned char :1;
    unsigned char RCIDL:1;
    unsigned char ABDOVF:1;
  };
} __BAUD2CONbits_t;
extern volatile __BAUD2CONbits_t __at(BAUD2CON_ADDR) BAUD2CONbits;

// ----- BAUDCON bits --------------------
typedef union {
  struct {
    unsigned char ABDEN:1;
    unsigned char WUE:1;
    unsigned char :1;
    unsigned char BRG16:1;
    unsigned char SCKP:1;
    unsigned char :1;
    unsigned char RCIDL:1;
    unsigned char ABDOVF:1;
  };
} __BAUDCONbits_t;
extern volatile __BAUDCONbits_t __at(BAUDCON_ADDR) BAUDCONbits;

// ----- BAUDCON1 bits --------------------
typedef union {
  struct {
    unsigned char ABDEN:1;
    unsigned char WUE:1;
    unsigned char :1;
    unsigned char BRG16:1;
    unsigned char SCKP:1;
    unsigned char :1;
    unsigned char RCIDL:1;
    unsigned char ABDOVF:1;
  };
} __BAUDCON1bits_t;
extern volatile __BAUDCON1bits_t __at(BAUDCON1_ADDR) BAUDCON1bits;

// ----- BAUDCON2 bits --------------------
typedef union {
  struct {
    unsigned char ABDEN:1;
    unsigned char WUE:1;
    unsigned char :1;
    unsigned char BRG16:1;
    unsigned char SCKP:1;
    unsigned char :1;
    unsigned char RCIDL:1;
    unsigned char ABDOVF:1;
  };
} __BAUDCON2bits_t;
extern volatile __BAUDCON2bits_t __at(BAUDCON2_ADDR) BAUDCON2bits;

// ----- BORCON bits --------------------
typedef union {
  struct {
    unsigned char BORRDY:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char BORFS:1;
    unsigned char SBOREN:1;
  };
} __BORCONbits_t;
extern volatile __BORCONbits_t __at(BORCON_ADDR) BORCONbits;

// ----- BSR bits --------------------
typedef union {
  struct {
    unsigned char BSR0:1;
    unsigned char BSR1:1;
    unsigned char BSR2:1;
    unsigned char BSR3:1;
    unsigned char BSR4:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __BSRbits_t;
extern volatile __BSRbits_t __at(BSR_ADDR) BSRbits;

// ----- CCP10CON bits --------------------
typedef union {
  struct {
    unsigned char CCP10M0:1;
    unsigned char CCP10M1:1;
    unsigned char CCP10M2:1;
    unsigned char CCP10M3:1;
    unsigned char DC10B0:1;
    unsigned char DC10B1:1;
    unsigned char :1;
    unsigned char :1;
  };
} __CCP10CONbits_t;
extern volatile __CCP10CONbits_t __at(CCP10CON_ADDR) CCP10CONbits;

// ----- CCP1CON bits --------------------
typedef union {
  struct {
    unsigned char CCP1M0:1;
    unsigned char CCP1M1:1;
    unsigned char CCP1M2:1;
    unsigned char CCP1M3:1;
    unsigned char DC1B0:1;
    unsigned char DC1B1:1;
    unsigned char :1;
    unsigned char :1;
  };
} __CCP1CONbits_t;
extern volatile __CCP1CONbits_t __at(CCP1CON_ADDR) CCP1CONbits;

// ----- CCP2CON bits --------------------
typedef union {
  struct {
    unsigned char CCP2M0:1;
    unsigned char CCP2M1:1;
    unsigned char CCP2M2:1;
    unsigned char CCP2M3:1;
    unsigned char DC2B0:1;
    unsigned char DC2B1:1;
    unsigned char :1;
    unsigned char :1;
  };
} __CCP2CONbits_t;
extern volatile __CCP2CONbits_t __at(CCP2CON_ADDR) CCP2CONbits;

// ----- CCP3CON bits --------------------
typedef union {
  struct {
    unsigned char CCP3M0:1;
    unsigned char CCP3M1:1;
    unsigned char CCP3M2:1;
    unsigned char CCP3M3:1;
    unsigned char DC3B0:1;
    unsigned char DC3B1:1;
    unsigned char :1;
    unsigned char :1;
  };
} __CCP3CONbits_t;
extern volatile __CCP3CONbits_t __at(CCP3CON_ADDR) CCP3CONbits;

// ----- CCP4CON bits --------------------
typedef union {
  struct {
    unsigned char CCP4M0:1;
    unsigned char CCP4M1:1;
    unsigned char CCP4M2:1;
    unsigned char CCP4M3:1;
    unsigned char DC4B0:1;
    unsigned char DC4B1:1;
    unsigned char :1;
    unsigned char :1;
  };
} __CCP4CONbits_t;
extern volatile __CCP4CONbits_t __at(CCP4CON_ADDR) CCP4CONbits;

// ----- CCP5CON bits --------------------
typedef union {
  struct {
    unsigned char CCP5M0:1;
    unsigned char CCP5M1:1;
    unsigned char CCP5M2:1;
    unsigned char CCP5M3:1;
    unsigned char DC5B0:1;
    unsigned char DC5B1:1;
    unsigned char :1;
    unsigned char :1;
  };
} __CCP5CONbits_t;
extern volatile __CCP5CONbits_t __at(CCP5CON_ADDR) CCP5CONbits;

// ----- CCP6CON bits --------------------
typedef union {
  struct {
    unsigned char CCP6M0:1;
    unsigned char CCP6M1:1;
    unsigned char CCP6M2:1;
    unsigned char CCP6M3:1;
    unsigned char DC6B0:1;
    unsigned char DC6B1:1;
    unsigned char :1;
    unsigned char :1;
  };
} __CCP6CONbits_t;
extern volatile __CCP6CONbits_t __at(CCP6CON_ADDR) CCP6CONbits;

// ----- CCP7CON bits --------------------
typedef union {
  struct {
    unsigned char CCP7M0:1;
    unsigned char CCP7M1:1;
    unsigned char CCP7M2:1;
    unsigned char CCP7M3:1;
    unsigned char DC7B0:1;
    unsigned char DC7B1:1;
    unsigned char :1;
    unsigned char :1;
  };
} __CCP7CONbits_t;
extern volatile __CCP7CONbits_t __at(CCP7CON_ADDR) CCP7CONbits;

// ----- CCP8CON bits --------------------
typedef union {
  struct {
    unsigned char CCP8M0:1;
    unsigned char CCP8M1:1;
    unsigned char CCP8M2:1;
    unsigned char CCP8M3:1;
    unsigned char DC8B0:1;
    unsigned char DC8B1:1;
    unsigned char :1;
    unsigned char :1;
  };
} __CCP8CONbits_t;
extern volatile __CCP8CONbits_t __at(CCP8CON_ADDR) CCP8CONbits;

// ----- CCP9CON bits --------------------
typedef union {
  struct {
    unsigned char CCP9M0:1;
    unsigned char CCP9M1:1;
    unsigned char CCP9M2:1;
    unsigned char CCP9M3:1;
    unsigned char DC9B0:1;
    unsigned char DC9B1:1;
    unsigned char :1;
    unsigned char :1;
  };
} __CCP9CONbits_t;
extern volatile __CCP9CONbits_t __at(CCP9CON_ADDR) CCP9CONbits;

// ----- CCPTMRS0 bits --------------------
typedef union {
  struct {
    unsigned char C1TSEL0:1;
    unsigned char C1TSEL1:1;
    unsigned char C2TSEL0:1;
    unsigned char C2TSEL1:1;
    unsigned char C3TSEL0:1;
    unsigned char C3TSEL1:1;
    unsigned char C4TSEL0:1;
    unsigned char C4TSEL1:1;
  };
} __CCPTMRS0bits_t;
extern volatile __CCPTMRS0bits_t __at(CCPTMRS0_ADDR) CCPTMRS0bits;

// ----- CCPTMRS1 bits --------------------
typedef union {
  struct {
    unsigned char C5TSEL0:1;
    unsigned char C5TSEL1:1;
    unsigned char C6TSEL0:1;
    unsigned char C6TSEL1:1;
    unsigned char C7TSEL0:1;
    unsigned char C7TSEL1:1;
    unsigned char C8TSEL0:1;
    unsigned char C8TSEL1:1;
  };
} __CCPTMRS1bits_t;
extern volatile __CCPTMRS1bits_t __at(CCPTMRS1_ADDR) CCPTMRS1bits;

// ----- CCPTMRS2 bits --------------------
typedef union {
  struct {
    unsigned char C9TSEL0:1;
    unsigned char C9TSEL1:1;
    unsigned char C10TSEL0:1;
    unsigned char C10TSEL1:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __CCPTMRS2bits_t;
extern volatile __CCPTMRS2bits_t __at(CCPTMRS2_ADDR) CCPTMRS2bits;

// ----- FVRCON bits --------------------
typedef union {
  struct {
    unsigned char ADFVR0:1;
    unsigned char ADFVR1:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char TSRNG:1;
    unsigned char TSEN:1;
    unsigned char FVRRDY:1;
    unsigned char FVREN:1;
  };
} __FVRCONbits_t;
extern volatile __FVRCONbits_t __at(FVRCON_ADDR) FVRCONbits;

// ----- INTCON bits --------------------
typedef union {
  struct {
    unsigned char IOCIF:1;
    unsigned char INTF:1;
    unsigned char TMR0IF:1;
    unsigned char IOCIE:1;
    unsigned char INTE:1;
    unsigned char TMR0IE:1;
    unsigned char PEIE:1;
    unsigned char GIE:1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char T0IF:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char T0IE:1;
    unsigned char :1;
    unsigned char :1;
  };
} __INTCONbits_t;
extern volatile __INTCONbits_t __at(INTCON_ADDR) INTCONbits;

// ----- IOCBF bits --------------------
typedef union {
  struct {
    unsigned char IOCBF0:1;
    unsigned char IOCBF1:1;
    unsigned char IOCBF2:1;
    unsigned char IOCBF3:1;
    unsigned char IOCBF4:1;
    unsigned char IOCBF5:1;
    unsigned char IOCBF6:1;
    unsigned char IOCBF7:1;
  };
} __IOCBFbits_t;
extern volatile __IOCBFbits_t __at(IOCBF_ADDR) IOCBFbits;

// ----- IOCBN bits --------------------
typedef union {
  struct {
    unsigned char IOCBN0:1;
    unsigned char IOCBN1:1;
    unsigned char IOCBN2:1;
    unsigned char IOCBN3:1;
    unsigned char IOCBN4:1;
    unsigned char IOCBN5:1;
    unsigned char IOCBN6:1;
    unsigned char IOCBN7:1;
  };
} __IOCBNbits_t;
extern volatile __IOCBNbits_t __at(IOCBN_ADDR) IOCBNbits;

// ----- IOCBP bits --------------------
typedef union {
  struct {
    unsigned char IOCBP0:1;
    unsigned char IOCBP1:1;
    unsigned char IOCBP2:1;
    unsigned char IOCBP3:1;
    unsigned char IOCBP4:1;
    unsigned char IOCBP5:1;
    unsigned char IOCBP6:1;
    unsigned char IOCBP7:1;
  };
} __IOCBPbits_t;
extern volatile __IOCBPbits_t __at(IOCBP_ADDR) IOCBPbits;

// ----- LATA bits --------------------
typedef union {
  struct {
    unsigned char LATA0:1;
    unsigned char LATA1:1;
    unsigned char LATA2:1;
    unsigned char LATA3:1;
    unsigned char LATA4:1;
    unsigned char LATA5:1;
    unsigned char LATA6:1;
    unsigned char LATA7:1;
  };
} __LATAbits_t;
extern volatile __LATAbits_t __at(LATA_ADDR) LATAbits;

// ----- LATB bits --------------------
typedef union {
  struct {
    unsigned char LATB0:1;
    unsigned char LATB1:1;
    unsigned char LATB2:1;
    unsigned char LATB3:1;
    unsigned char LATB4:1;
    unsigned char LATB5:1;
    unsigned char LATB6:1;
    unsigned char LATB7:1;
  };
} __LATBbits_t;
extern volatile __LATBbits_t __at(LATB_ADDR) LATBbits;

// ----- LATC bits --------------------
typedef union {
  struct {
    unsigned char LATC0:1;
    unsigned char LATC1:1;
    unsigned char LATC2:1;
    unsigned char LATC3:1;
    unsigned char LATC4:1;
    unsigned char LATC5:1;
    unsigned char LATC6:1;
    unsigned char LATC7:1;
  };
} __LATCbits_t;
extern volatile __LATCbits_t __at(LATC_ADDR) LATCbits;

// ----- LATD bits --------------------
typedef union {
  struct {
    unsigned char LATD0:1;
    unsigned char LATD1:1;
    unsigned char LATD2:1;
    unsigned char LATD3:1;
    unsigned char LATD4:1;
    unsigned char LATD5:1;
    unsigned char LATD6:1;
    unsigned char LATD7:1;
  };
} __LATDbits_t;
extern volatile __LATDbits_t __at(LATD_ADDR) LATDbits;

// ----- LATE bits --------------------
typedef union {
  struct {
    unsigned char LATE0:1;
    unsigned char LATE1:1;
    unsigned char LATE2:1;
    unsigned char LATE3:1;
    unsigned char LATE4:1;
    unsigned char LATE5:1;
    unsigned char LATE6:1;
    unsigned char LATE7:1;
  };
} __LATEbits_t;
extern volatile __LATEbits_t __at(LATE_ADDR) LATEbits;

// ----- LATF bits --------------------
typedef union {
  struct {
    unsigned char LATF0:1;
    unsigned char LATF1:1;
    unsigned char LATF2:1;
    unsigned char LATF3:1;
    unsigned char LATF4:1;
    unsigned char LATF5:1;
    unsigned char LATF6:1;
    unsigned char LATF7:1;
  };
} __LATFbits_t;
extern volatile __LATFbits_t __at(LATF_ADDR) LATFbits;

// ----- LATG bits --------------------
typedef union {
  struct {
    unsigned char LATG0:1;
    unsigned char LATG1:1;
    unsigned char LATG2:1;
    unsigned char LATG3:1;
    unsigned char LATG4:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __LATGbits_t;
extern volatile __LATGbits_t __at(LATG_ADDR) LATGbits;

// ----- OPTION_REG bits --------------------
typedef union {
  struct {
    unsigned char PS0:1;
    unsigned char PS1:1;
    unsigned char PS2:1;
    unsigned char PSA:1;
    unsigned char TMR0SE:1;
    unsigned char TMR0CS:1;
    unsigned char INTEDG:1;
    unsigned char NOT_WPUEN:1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char T0SE:1;
    unsigned char T0CS:1;
    unsigned char :1;
    unsigned char :1;
  };
} __OPTION_REGbits_t;
extern volatile __OPTION_REGbits_t __at(OPTION_REG_ADDR) OPTION_REGbits;

// ----- OSCCON bits --------------------
typedef union {
  struct {
    unsigned char SCS0:1;
    unsigned char SCS1:1;
    unsigned char :1;
    unsigned char IRCF0:1;
    unsigned char IRCF1:1;
    unsigned char IRCF2:1;
    unsigned char IRCF3:1;
    unsigned char :1;
  };
} __OSCCONbits_t;
extern volatile __OSCCONbits_t __at(OSCCON_ADDR) OSCCONbits;

// ----- OSCSTAT bits --------------------
typedef union {
  struct {
    unsigned char HFIOFS:1;
    unsigned char LFIOFR:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char HFIOFR:1;
    unsigned char OSTS:1;
    unsigned char :1;
    unsigned char SOSCR:1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char T1OSCR:1;
  };
} __OSCSTATbits_t;
extern volatile __OSCSTATbits_t __at(OSCSTAT_ADDR) OSCSTATbits;

// ----- PCON bits --------------------
typedef union {
  struct {
    unsigned char NOT_BOR:1;
    unsigned char NOT_POR:1;
    unsigned char NOT_RI:1;
    unsigned char NOT_RMCLR:1;
    unsigned char NOT_RWDT:1;
    unsigned char :1;
    unsigned char STKUNF:1;
    unsigned char STKOVF:1;
  };
} __PCONbits_t;
extern volatile __PCONbits_t __at(PCON_ADDR) PCONbits;

// ----- PIE1 bits --------------------
typedef union {
  struct {
    unsigned char TMR1IE:1;
    unsigned char TMR2IE:1;
    unsigned char CCP1IE:1;
    unsigned char SSP1IE:1;
    unsigned char TX1IE:1;
    unsigned char RC1IE:1;
    unsigned char ADIE:1;
    unsigned char TMR1GIE:1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char SSPIE:1;
    unsigned char TXIE:1;
    unsigned char RCIE:1;
    unsigned char :1;
    unsigned char :1;
  };
} __PIE1bits_t;
extern volatile __PIE1bits_t __at(PIE1_ADDR) PIE1bits;

// ----- PIE2 bits --------------------
typedef union {
  struct {
    unsigned char CCP2IE:1;
    unsigned char TMR8IE:1;
    unsigned char TMR10IE:1;
    unsigned char BCL1IE:1;
    unsigned char :1;
    unsigned char TMR3GIE:1;
    unsigned char TMR5GIE:1;
    unsigned char OSFIE:1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char BCLIE:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __PIE2bits_t;
extern volatile __PIE2bits_t __at(PIE2_ADDR) PIE2bits;

// ----- PIE3 bits --------------------
typedef union {
  struct {
    unsigned char TMR3IE:1;
    unsigned char TMR4IE:1;
    unsigned char TMR5IE:1;
    unsigned char TMR6IE:1;
    unsigned char CCP3IE:1;
    unsigned char CCP4IE:1;
    unsigned char CCP5IE:1;
    unsigned char CCP6IE:1;
  };
} __PIE3bits_t;
extern volatile __PIE3bits_t __at(PIE3_ADDR) PIE3bits;

// ----- PIE4 bits --------------------
typedef union {
  struct {
    unsigned char SSP2IE:1;
    unsigned char BCL2IE:1;
    unsigned char CCP7IE:1;
    unsigned char CCP8IE:1;
    unsigned char TX2IE:1;
    unsigned char RC2IE:1;
    unsigned char CCP9IE:1;
    unsigned char CCP10IE:1;
  };
} __PIE4bits_t;
extern volatile __PIE4bits_t __at(PIE4_ADDR) PIE4bits;

// ----- PIR1 bits --------------------
typedef union {
  struct {
    unsigned char TMR1IF:1;
    unsigned char TMR2IF:1;
    unsigned char CCP1IF:1;
    unsigned char SSP1IF:1;
    unsigned char TX1IF:1;
    unsigned char RC1IF:1;
    unsigned char ADIF:1;
    unsigned char TMR1GIF:1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char SSPIF:1;
    unsigned char TXIF:1;
    unsigned char RCIF:1;
    unsigned char :1;
    unsigned char :1;
  };
} __PIR1bits_t;
extern volatile __PIR1bits_t __at(PIR1_ADDR) PIR1bits;

// ----- PIR2 bits --------------------
typedef union {
  struct {
    unsigned char CCP2IF:1;
    unsigned char TMR8IF:1;
    unsigned char TMR10IF:1;
    unsigned char BCL1IF:1;
    unsigned char :1;
    unsigned char TMR3GIF:1;
    unsigned char TMR5GIF:1;
    unsigned char OSFIF:1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char BCLIF:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __PIR2bits_t;
extern volatile __PIR2bits_t __at(PIR2_ADDR) PIR2bits;

// ----- PIR3 bits --------------------
typedef union {
  struct {
    unsigned char TMR3IF:1;
    unsigned char TMR4IF:1;
    unsigned char TMR5IF:1;
    unsigned char TMR6IF:1;
    unsigned char CCP3IF:1;
    unsigned char CCP4IF:1;
    unsigned char CCP5IF:1;
    unsigned char CCP6IF:1;
  };
} __PIR3bits_t;
extern volatile __PIR3bits_t __at(PIR3_ADDR) PIR3bits;

// ----- PIR4 bits --------------------
typedef union {
  struct {
    unsigned char SSP2IF:1;
    unsigned char BCL2IF:1;
    unsigned char CCP7IF:1;
    unsigned char CCP8IF:1;
    unsigned char TX2IF:1;
    unsigned char RC2IF:1;
    unsigned char CCP9IF:1;
    unsigned char CCP10IF:1;
  };
} __PIR4bits_t;
extern volatile __PIR4bits_t __at(PIR4_ADDR) PIR4bits;

// ----- PMCON1 bits --------------------
typedef union {
  struct {
    unsigned char RD:1;
    unsigned char WR:1;
    unsigned char WREN:1;
    unsigned char WRERR:1;
    unsigned char FREE:1;
    unsigned char LWLO:1;
    unsigned char CFGS:1;
    unsigned char :1;
  };
} __PMCON1bits_t;
extern volatile __PMCON1bits_t __at(PMCON1_ADDR) PMCON1bits;

// ----- PORTA bits --------------------
typedef union {
  struct {
    unsigned char RA0:1;
    unsigned char RA1:1;
    unsigned char RA2:1;
    unsigned char RA3:1;
    unsigned char RA4:1;
    unsigned char RA5:1;
    unsigned char RA6:1;
    unsigned char RA7:1;
  };
} __PORTAbits_t;
extern volatile __PORTAbits_t __at(PORTA_ADDR) PORTAbits;

// ----- PORTB bits --------------------
typedef union {
  struct {
    unsigned char RB0:1;
    unsigned char RB1:1;
    unsigned char RB2:1;
    unsigned char RB3:1;
    unsigned char RB4:1;
    unsigned char RB5:1;
    unsigned char RB6:1;
    unsigned char RB7:1;
  };
} __PORTBbits_t;
extern volatile __PORTBbits_t __at(PORTB_ADDR) PORTBbits;

// ----- PORTC bits --------------------
typedef union {
  struct {
    unsigned char RC0:1;
    unsigned char RC1:1;
    unsigned char RC2:1;
    unsigned char RC3:1;
    unsigned char RC4:1;
    unsigned char RC5:1;
    unsigned char RC6:1;
    unsigned char RC7:1;
  };
} __PORTCbits_t;
extern volatile __PORTCbits_t __at(PORTC_ADDR) PORTCbits;

// ----- PORTD bits --------------------
typedef union {
  struct {
    unsigned char RD0:1;
    unsigned char RD1:1;
    unsigned char RD2:1;
    unsigned char RD3:1;
    unsigned char RD4:1;
    unsigned char RD5:1;
    unsigned char RD6:1;
    unsigned char RD7:1;
  };
} __PORTDbits_t;
extern volatile __PORTDbits_t __at(PORTD_ADDR) PORTDbits;

// ----- PORTE bits --------------------
typedef union {
  struct {
    unsigned char RE0:1;
    unsigned char RE1:1;
    unsigned char RE2:1;
    unsigned char RE3:1;
    unsigned char RE4:1;
    unsigned char RE5:1;
    unsigned char RE6:1;
    unsigned char RE7:1;
  };
} __PORTEbits_t;
extern volatile __PORTEbits_t __at(PORTE_ADDR) PORTEbits;

// ----- PORTF bits --------------------
typedef union {
  struct {
    unsigned char RF0:1;
    unsigned char RF1:1;
    unsigned char RF2:1;
    unsigned char RF3:1;
    unsigned char RF4:1;
    unsigned char RF5:1;
    unsigned char RF6:1;
    unsigned char RF7:1;
  };
} __PORTFbits_t;
extern volatile __PORTFbits_t __at(PORTF_ADDR) PORTFbits;

// ----- PORTG bits --------------------
typedef union {
  struct {
    unsigned char RG0:1;
    unsigned char RG1:1;
    unsigned char RG2:1;
    unsigned char RG3:1;
    unsigned char RG4:1;
    unsigned char RG5:1;
    unsigned char :1;
    unsigned char :1;
  };
} __PORTGbits_t;
extern volatile __PORTGbits_t __at(PORTG_ADDR) PORTGbits;

// ----- RC1STA bits --------------------
typedef union {
  struct {
    unsigned char RX9D:1;
    unsigned char OERR:1;
    unsigned char FERR:1;
    unsigned char ADDEN:1;
    unsigned char CREN:1;
    unsigned char SREN:1;
    unsigned char RX9:1;
    unsigned char SPEN:1;
  };
} __RC1STAbits_t;
extern volatile __RC1STAbits_t __at(RC1STA_ADDR) RC1STAbits;

// ----- RC2STA bits --------------------
typedef union {
  struct {
    unsigned char RX9D:1;
    unsigned char OERR:1;
    unsigned char FERR:1;
    unsigned char ADDEN:1;
    unsigned char CREN:1;
    unsigned char SREN:1;
    unsigned char RX9:1;
    unsigned char SPEN:1;
  };
} __RC2STAbits_t;
extern volatile __RC2STAbits_t __at(RC2STA_ADDR) RC2STAbits;

// ----- RCSTA bits --------------------
typedef union {
  struct {
    unsigned char RX9D:1;
    unsigned char OERR:1;
    unsigned char FERR:1;
    unsigned char ADDEN:1;
    unsigned char CREN:1;
    unsigned char SREN:1;
    unsigned char RX9:1;
    unsigned char SPEN:1;
  };
} __RCSTAbits_t;
extern volatile __RCSTAbits_t __at(RCSTA_ADDR) RCSTAbits;

// ----- RCSTA1 bits --------------------
typedef union {
  struct {
    unsigned char RX9D:1;
    unsigned char OERR:1;
    unsigned char FERR:1;
    unsigned char ADDEN:1;
    unsigned char CREN:1;
    unsigned char SREN:1;
    unsigned char RX9:1;
    unsigned char SPEN:1;
  };
} __RCSTA1bits_t;
extern volatile __RCSTA1bits_t __at(RCSTA1_ADDR) RCSTA1bits;

// ----- RCSTA2 bits --------------------
typedef union {
  struct {
    unsigned char RX9D:1;
    unsigned char OERR:1;
    unsigned char FERR:1;
    unsigned char ADDEN:1;
    unsigned char CREN:1;
    unsigned char SREN:1;
    unsigned char RX9:1;
    unsigned char SPEN:1;
  };
} __RCSTA2bits_t;
extern volatile __RCSTA2bits_t __at(RCSTA2_ADDR) RCSTA2bits;

// ----- SSP1CON1 bits --------------------
typedef union {
  struct {
    unsigned char SSPM0:1;
    unsigned char SSPM1:1;
    unsigned char SSPM2:1;
    unsigned char SSPM3:1;
    unsigned char CKP:1;
    unsigned char SSPEN:1;
    unsigned char SSPOV:1;
    unsigned char WCOL:1;
  };
} __SSP1CON1bits_t;
extern volatile __SSP1CON1bits_t __at(SSP1CON1_ADDR) SSP1CON1bits;

// ----- SSP1CON2 bits --------------------
typedef union {
  struct {
    unsigned char SEN:1;
    unsigned char RSEN:1;
    unsigned char PEN:1;
    unsigned char RCEN:1;
    unsigned char ACKEN:1;
    unsigned char ACKDT:1;
    unsigned char ACKSTAT:1;
    unsigned char GCEN:1;
  };
} __SSP1CON2bits_t;
extern volatile __SSP1CON2bits_t __at(SSP1CON2_ADDR) SSP1CON2bits;

// ----- SSP1CON3 bits --------------------
typedef union {
  struct {
    unsigned char DHEN:1;
    unsigned char AHEN:1;
    unsigned char SBCDE:1;
    unsigned char SDAHT:1;
    unsigned char BOEN:1;
    unsigned char SCIE:1;
    unsigned char PCIE:1;
    unsigned char ACKTIM:1;
  };
} __SSP1CON3bits_t;
extern volatile __SSP1CON3bits_t __at(SSP1CON3_ADDR) SSP1CON3bits;

// ----- SSP1STAT bits --------------------
typedef union {
  struct {
    unsigned char BF:1;
    unsigned char UA:1;
    unsigned char R_NOT_W:1;
    unsigned char S:1;
    unsigned char P:1;
    unsigned char D_NOT_A:1;
    unsigned char CKE:1;
    unsigned char SMP:1;
  };
} __SSP1STATbits_t;
extern volatile __SSP1STATbits_t __at(SSP1STAT_ADDR) SSP1STATbits;

// ----- SSP2CON1 bits --------------------
typedef union {
  struct {
    unsigned char SSPM0:1;
    unsigned char SSPM1:1;
    unsigned char SSPM2:1;
    unsigned char SSPM3:1;
    unsigned char CKP:1;
    unsigned char SSPEN:1;
    unsigned char SSPOV:1;
    unsigned char WCOL:1;
  };
} __SSP2CON1bits_t;
extern volatile __SSP2CON1bits_t __at(SSP2CON1_ADDR) SSP2CON1bits;

// ----- SSP2CON2 bits --------------------
typedef union {
  struct {
    unsigned char SEN:1;
    unsigned char RSEN:1;
    unsigned char PEN:1;
    unsigned char RCEN:1;
    unsigned char ACKEN:1;
    unsigned char ACKDT:1;
    unsigned char ACKSTAT:1;
    unsigned char GCEN:1;
  };
} __SSP2CON2bits_t;
extern volatile __SSP2CON2bits_t __at(SSP2CON2_ADDR) SSP2CON2bits;

// ----- SSP2CON3 bits --------------------
typedef union {
  struct {
    unsigned char DHEN:1;
    unsigned char AHEN:1;
    unsigned char SBCDE:1;
    unsigned char SDAHT:1;
    unsigned char BOEN:1;
    unsigned char SCIE:1;
    unsigned char PCIE:1;
    unsigned char ACKTIM:1;
  };
} __SSP2CON3bits_t;
extern volatile __SSP2CON3bits_t __at(SSP2CON3_ADDR) SSP2CON3bits;

// ----- SSP2STAT bits --------------------
typedef union {
  struct {
    unsigned char BF:1;
    unsigned char UA:1;
    unsigned char R_NOT_W:1;
    unsigned char S:1;
    unsigned char P:1;
    unsigned char D_NOT_A:1;
    unsigned char CKE:1;
    unsigned char SMP:1;
  };
} __SSP2STATbits_t;
extern volatile __SSP2STATbits_t __at(SSP2STAT_ADDR) SSP2STATbits;

// ----- SSPCON bits --------------------
typedef union {
  struct {
    unsigned char SSPM0:1;
    unsigned char SSPM1:1;
    unsigned char SSPM2:1;
    unsigned char SSPM3:1;
    unsigned char CKP:1;
    unsigned char SSPEN:1;
    unsigned char SSPOV:1;
    unsigned char WCOL:1;
  };
} __SSPCONbits_t;
extern volatile __SSPCONbits_t __at(SSPCON_ADDR) SSPCONbits;

// ----- SSPCON1 bits --------------------
typedef union {
  struct {
    unsigned char SSPM0:1;
    unsigned char SSPM1:1;
    unsigned char SSPM2:1;
    unsigned char SSPM3:1;
    unsigned char CKP:1;
    unsigned char SSPEN:1;
    unsigned char SSPOV:1;
    unsigned char WCOL:1;
  };
} __SSPCON1bits_t;
extern volatile __SSPCON1bits_t __at(SSPCON1_ADDR) SSPCON1bits;

// ----- SSPCON2 bits --------------------
typedef union {
  struct {
    unsigned char SEN:1;
    unsigned char RSEN:1;
    unsigned char PEN:1;
    unsigned char RCEN:1;
    unsigned char ACKEN:1;
    unsigned char ACKDT:1;
    unsigned char ACKSTAT:1;
    unsigned char GCEN:1;
  };
} __SSPCON2bits_t;
extern volatile __SSPCON2bits_t __at(SSPCON2_ADDR) SSPCON2bits;

// ----- SSPCON3 bits --------------------
typedef union {
  struct {
    unsigned char DHEN:1;
    unsigned char AHEN:1;
    unsigned char SBCDE:1;
    unsigned char SDAHT:1;
    unsigned char BOEN:1;
    unsigned char SCIE:1;
    unsigned char PCIE:1;
    unsigned char ACKTIM:1;
  };
} __SSPCON3bits_t;
extern volatile __SSPCON3bits_t __at(SSPCON3_ADDR) SSPCON3bits;

// ----- SSPSTAT bits --------------------
typedef union {
  struct {
    unsigned char BF:1;
    unsigned char UA:1;
    unsigned char R_NOT_W:1;
    unsigned char S:1;
    unsigned char P:1;
    unsigned char D_NOT_A:1;
    unsigned char CKE:1;
    unsigned char SMP:1;
  };
} __SSPSTATbits_t;
extern volatile __SSPSTATbits_t __at(SSPSTAT_ADDR) SSPSTATbits;

// ----- STATUS bits --------------------
typedef union {
  struct {
    unsigned char C:1;
    unsigned char DC:1;
    unsigned char Z:1;
    unsigned char NOT_PD:1;
    unsigned char NOT_TO:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __STATUSbits_t;
extern volatile __STATUSbits_t __at(STATUS_ADDR) STATUSbits;

// ----- STATUS_SHAD bits --------------------
typedef union {
  struct {
    unsigned char C_SHAD:1;
    unsigned char DC_SHAD:1;
    unsigned char Z_SHAD:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __STATUS_SHADbits_t;
extern volatile __STATUS_SHADbits_t __at(STATUS_SHAD_ADDR) STATUS_SHADbits;

// ----- T10CON bits --------------------
typedef union {
  struct {
    unsigned char T10CKPS0:1;
    unsigned char T10CKPS1:1;
    unsigned char TMR10ON:1;
    unsigned char T10OUTPS0:1;
    unsigned char T10OUTPS1:1;
    unsigned char T10OUTPS2:1;
    unsigned char T10OUTPS3:1;
    unsigned char :1;
  };
} __T10CONbits_t;
extern volatile __T10CONbits_t __at(T10CON_ADDR) T10CONbits;

// ----- T1CON bits --------------------
typedef union {
  struct {
    unsigned char TMR1ON:1;
    unsigned char :1;
    unsigned char NOT_T1SYNC:1;
    unsigned char SOSCEN:1;
    unsigned char T1CKPS0:1;
    unsigned char T1CKPS1:1;
    unsigned char TMR1CS0:1;
    unsigned char TMR1CS1:1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char T1OSCEN:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __T1CONbits_t;
extern volatile __T1CONbits_t __at(T1CON_ADDR) T1CONbits;

// ----- T1GCON bits --------------------
typedef union {
  struct {
    unsigned char T1GSS0:1;
    unsigned char T1GSS1:1;
    unsigned char T1GVAL:1;
    unsigned char T1GGO_NOT_DONE:1;
    unsigned char T1GSPM:1;
    unsigned char T1GTM:1;
    unsigned char T1GPOL:1;
    unsigned char TMR1GE:1;
  };
} __T1GCONbits_t;
extern volatile __T1GCONbits_t __at(T1GCON_ADDR) T1GCONbits;

// ----- T2CON bits --------------------
typedef union {
  struct {
    unsigned char T2CKPS0:1;
    unsigned char T2CKPS1:1;
    unsigned char TMR2ON:1;
    unsigned char T2OUTPS0:1;
    unsigned char T2OUTPS1:1;
    unsigned char T2OUTPS2:1;
    unsigned char T2OUTPS3:1;
    unsigned char :1;
  };
} __T2CONbits_t;
extern volatile __T2CONbits_t __at(T2CON_ADDR) T2CONbits;

// ----- T3CON bits --------------------
typedef union {
  struct {
    unsigned char TMR3ON:1;
    unsigned char :1;
    unsigned char NOT_T3SYNC:1;
    unsigned char SOSCEN:1;
    unsigned char T3CKPS0:1;
    unsigned char T3CKPS1:1;
    unsigned char TMR3CS0:1;
    unsigned char TMR3CS1:1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char T3OSCEN:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __T3CONbits_t;
extern volatile __T3CONbits_t __at(T3CON_ADDR) T3CONbits;

// ----- T3GCON bits --------------------
typedef union {
  struct {
    unsigned char T3GSS0:1;
    unsigned char T3GSS1:1;
    unsigned char T3GVAL:1;
    unsigned char T3GGO_NOT_DONE:1;
    unsigned char T3GSPM:1;
    unsigned char T3GTM:1;
    unsigned char T3GPOL:1;
    unsigned char TMR3GE:1;
  };
} __T3GCONbits_t;
extern volatile __T3GCONbits_t __at(T3GCON_ADDR) T3GCONbits;

// ----- T4CON bits --------------------
typedef union {
  struct {
    unsigned char T4CKPS0:1;
    unsigned char T4CKPS1:1;
    unsigned char TMR4ON:1;
    unsigned char T4OUTPS0:1;
    unsigned char T4OUTPS1:1;
    unsigned char T4OUTPS2:1;
    unsigned char T4OUTPS3:1;
    unsigned char :1;
  };
} __T4CONbits_t;
extern volatile __T4CONbits_t __at(T4CON_ADDR) T4CONbits;

// ----- T5CON bits --------------------
typedef union {
  struct {
    unsigned char TMR5ON:1;
    unsigned char :1;
    unsigned char NOT_T5SYNC:1;
    unsigned char SOSCEN:1;
    unsigned char T5CKPS0:1;
    unsigned char T5CKPS1:1;
    unsigned char TMR5CS0:1;
    unsigned char TMR5CS1:1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char T5OSCEN:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __T5CONbits_t;
extern volatile __T5CONbits_t __at(T5CON_ADDR) T5CONbits;

// ----- T5GCON bits --------------------
typedef union {
  struct {
    unsigned char T5GSS0:1;
    unsigned char T5GSS1:1;
    unsigned char T5GVAL:1;
    unsigned char T5GGO_NOT_DONE:1;
    unsigned char T5GSPM:1;
    unsigned char T5GTM:1;
    unsigned char T5GPOL:1;
    unsigned char TMR5GE:1;
  };
} __T5GCONbits_t;
extern volatile __T5GCONbits_t __at(T5GCON_ADDR) T5GCONbits;

// ----- T6CON bits --------------------
typedef union {
  struct {
    unsigned char T6CKPS0:1;
    unsigned char T6CKPS1:1;
    unsigned char TMR6ON:1;
    unsigned char T6OUTPS0:1;
    unsigned char T6OUTPS1:1;
    unsigned char T6OUTPS2:1;
    unsigned char T6OUTPS3:1;
    unsigned char :1;
  };
} __T6CONbits_t;
extern volatile __T6CONbits_t __at(T6CON_ADDR) T6CONbits;

// ----- T8CON bits --------------------
typedef union {
  struct {
    unsigned char T8CKPS0:1;
    unsigned char T8CKPS1:1;
    unsigned char TMR8ON:1;
    unsigned char T8OUTPS0:1;
    unsigned char T8OUTPS1:1;
    unsigned char T8OUTPS2:1;
    unsigned char T8OUTPS3:1;
    unsigned char :1;
  };
} __T8CONbits_t;
extern volatile __T8CONbits_t __at(T8CON_ADDR) T8CONbits;

// ----- TRISA bits --------------------
typedef union {
  struct {
    unsigned char TRISA0:1;
    unsigned char TRISA1:1;
    unsigned char TRISA2:1;
    unsigned char TRISA3:1;
    unsigned char TRISA4:1;
    unsigned char TRISA5:1;
    unsigned char TRISA6:1;
    unsigned char TRISA7:1;
  };
} __TRISAbits_t;
extern volatile __TRISAbits_t __at(TRISA_ADDR) TRISAbits;

// ----- TRISB bits --------------------
typedef union {
  struct {
    unsigned char TRISB0:1;
    unsigned char TRISB1:1;
    unsigned char TRISB2:1;
    unsigned char TRISB3:1;
    unsigned char TRISB4:1;
    unsigned char TRISB5:1;
    unsigned char TRISB6:1;
    unsigned char TRISB7:1;
  };
} __TRISBbits_t;
extern volatile __TRISBbits_t __at(TRISB_ADDR) TRISBbits;

// ----- TRISC bits --------------------
typedef union {
  struct {
    unsigned char TRISC0:1;
    unsigned char TRISC1:1;
    unsigned char TRISC2:1;
    unsigned char TRISC3:1;
    unsigned char TRISC4:1;
    unsigned char TRISC5:1;
    unsigned char TRISC6:1;
    unsigned char TRISC7:1;
  };
} __TRISCbits_t;
extern volatile __TRISCbits_t __at(TRISC_ADDR) TRISCbits;

// ----- TRISD bits --------------------
typedef union {
  struct {
    unsigned char TRISD0:1;
    unsigned char TRISD1:1;
    unsigned char TRISD2:1;
    unsigned char TRISD3:1;
    unsigned char TRISD4:1;
    unsigned char TRISD5:1;
    unsigned char TRISD6:1;
    unsigned char TRISD7:1;
  };
} __TRISDbits_t;
extern volatile __TRISDbits_t __at(TRISD_ADDR) TRISDbits;

// ----- TRISE bits --------------------
typedef union {
  struct {
    unsigned char TRISE0:1;
    unsigned char TRISE1:1;
    unsigned char TRISE2:1;
    unsigned char TRISE3:1;
    unsigned char TRISE4:1;
    unsigned char TRISE5:1;
    unsigned char TRISE6:1;
    unsigned char TRISE7:1;
  };
} __TRISEbits_t;
extern volatile __TRISEbits_t __at(TRISE_ADDR) TRISEbits;

// ----- TRISF bits --------------------
typedef union {
  struct {
    unsigned char TRISF0:1;
    unsigned char TRISF1:1;
    unsigned char TRISF2:1;
    unsigned char TRISF3:1;
    unsigned char TRISF4:1;
    unsigned char TRISF5:1;
    unsigned char TRISF6:1;
    unsigned char TRISF7:1;
  };
} __TRISFbits_t;
extern volatile __TRISFbits_t __at(TRISF_ADDR) TRISFbits;

// ----- TRISG bits --------------------
typedef union {
  struct {
    unsigned char TRISG0:1;
    unsigned char TRISG1:1;
    unsigned char TRISG2:1;
    unsigned char TRISG3:1;
    unsigned char TRISG4:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __TRISGbits_t;
extern volatile __TRISGbits_t __at(TRISG_ADDR) TRISGbits;

// ----- TX1STA bits --------------------
typedef union {
  struct {
    unsigned char TX9D:1;
    unsigned char TRMT:1;
    unsigned char BRGH:1;
    unsigned char SENDB:1;
    unsigned char SYNC:1;
    unsigned char TXEN:1;
    unsigned char TX9:1;
    unsigned char CSRC:1;
  };
} __TX1STAbits_t;
extern volatile __TX1STAbits_t __at(TX1STA_ADDR) TX1STAbits;

// ----- TX2STA bits --------------------
typedef union {
  struct {
    unsigned char TX9D:1;
    unsigned char TRMT:1;
    unsigned char BRGH:1;
    unsigned char SENDB:1;
    unsigned char SYNC:1;
    unsigned char TXEN:1;
    unsigned char TX9:1;
    unsigned char CSRC:1;
  };
} __TX2STAbits_t;
extern volatile __TX2STAbits_t __at(TX2STA_ADDR) TX2STAbits;

// ----- TXSTA bits --------------------
typedef union {
  struct {
    unsigned char TX9D:1;
    unsigned char TRMT:1;
    unsigned char BRGH:1;
    unsigned char SENDB:1;
    unsigned char SYNC:1;
    unsigned char TXEN:1;
    unsigned char TX9:1;
    unsigned char CSRC:1;
  };
} __TXSTAbits_t;
extern volatile __TXSTAbits_t __at(TXSTA_ADDR) TXSTAbits;

// ----- TXSTA1 bits --------------------
typedef union {
  struct {
    unsigned char TX9D:1;
    unsigned char TRMT:1;
    unsigned char BRGH:1;
    unsigned char SENDB:1;
    unsigned char SYNC:1;
    unsigned char TXEN:1;
    unsigned char TX9:1;
    unsigned char CSRC:1;
  };
} __TXSTA1bits_t;
extern volatile __TXSTA1bits_t __at(TXSTA1_ADDR) TXSTA1bits;

// ----- TXSTA2 bits --------------------
typedef union {
  struct {
    unsigned char TX9D:1;
    unsigned char TRMT:1;
    unsigned char BRGH:1;
    unsigned char SENDB:1;
    unsigned char SYNC:1;
    unsigned char TXEN:1;
    unsigned char TX9:1;
    unsigned char CSRC:1;
  };
} __TXSTA2bits_t;
extern volatile __TXSTA2bits_t __at(TXSTA2_ADDR) TXSTA2bits;

// ----- VREGCON bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char VREGPM:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __VREGCONbits_t;
extern volatile __VREGCONbits_t __at(VREGCON_ADDR) VREGCONbits;

// ----- WDTCON bits --------------------
typedef union {
  struct {
    unsigned char SWDTEN:1;
    unsigned char WDTPS0:1;
    unsigned char WDTPS1:1;
    unsigned char WDTPS2:1;
    unsigned char WDTPS3:1;
    unsigned char WDTPS4:1;
    unsigned char :1;
    unsigned char :1;
  };
} __WDTCONbits_t;
extern volatile __WDTCONbits_t __at(WDTCON_ADDR) WDTCONbits;

// ----- WPUB bits --------------------
typedef union {
  struct {
    unsigned char WPUB0:1;
    unsigned char WPUB1:1;
    unsigned char WPUB2:1;
    unsigned char WPUB3:1;
    unsigned char WPUB4:1;
    unsigned char WPUB5:1;
    unsigned char WPUB6:1;
    unsigned char WPUB7:1;
  };
} __WPUBbits_t;
extern volatile __WPUBbits_t __at(WPUB_ADDR) WPUBbits;

// ----- WPUD bits --------------------
typedef union {
  struct {
    unsigned char WPUD0:1;
    unsigned char WPUD1:1;
    unsigned char WPUD2:1;
    unsigned char WPUD3:1;
    unsigned char WPUD4:1;
    unsigned char WPUD5:1;
    unsigned char WPUD6:1;
    unsigned char WPUD7:1;
  };
} __WPUDbits_t;
extern volatile __WPUDbits_t __at(WPUD_ADDR) WPUDbits;

// ----- WPUE bits --------------------
typedef union {
  struct {
    unsigned char WPUE0:1;
    unsigned char WPUE1:1;
    unsigned char WPUE2:1;
    unsigned char WPUE3:1;
    unsigned char WPUE4:1;
    unsigned char WPUE5:1;
    unsigned char WPUE6:1;
    unsigned char WPUE7:1;
  };
} __WPUEbits_t;
extern volatile __WPUEbits_t __at(WPUE_ADDR) WPUEbits;

// ----- WPUG bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char WPUG5:1;
    unsigned char :1;
    unsigned char :1;
  };
} __WPUGbits_t;
extern volatile __WPUGbits_t __at(WPUG_ADDR) WPUGbits;


#ifndef NO_BIT_DEFINES

#define ADON                 ADCON0bits.ADON                /* bit 0 */
#define ADGO                 ADCON0bits.ADGO                /* bit 1 */
#define GO                   ADCON0bits.GO                  /* bit 1 */
#define GO_NOT_DONE          ADCON0bits.GO_NOT_DONE         /* bit 1 */
#define CHS0                 ADCON0bits.CHS0                /* bit 2 */
#define CHS1                 ADCON0bits.CHS1                /* bit 3 */
#define CHS2                 ADCON0bits.CHS2                /* bit 4 */
#define CHS3                 ADCON0bits.CHS3                /* bit 5 */
#define CHS4                 ADCON0bits.CHS4                /* bit 6 */

#define ADPREF0              ADCON1bits.ADPREF0             /* bit 0 */
#define ADPREF1              ADCON1bits.ADPREF1             /* bit 1 */
#define ADCS0                ADCON1bits.ADCS0               /* bit 4 */
#define ADCS1                ADCON1bits.ADCS1               /* bit 5 */
#define ADCS2                ADCON1bits.ADCS2               /* bit 6 */
#define ADFM                 ADCON1bits.ADFM                /* bit 7 */

#define ANSA0                ANSELAbits.ANSA0               /* bit 0 */
#define ANSA1                ANSELAbits.ANSA1               /* bit 1 */
#define ANSA2                ANSELAbits.ANSA2               /* bit 2 */
#define ANSA3                ANSELAbits.ANSA3               /* bit 3 */
#define ANSA5                ANSELAbits.ANSA5               /* bit 5 */

#define ANSB0                ANSELBbits.ANSB0               /* bit 0 */
#define ANSB1                ANSELBbits.ANSB1               /* bit 1 */
#define ANSB2                ANSELBbits.ANSB2               /* bit 2 */
#define ANSB3                ANSELBbits.ANSB3               /* bit 3 */
#define ANSB4                ANSELBbits.ANSB4               /* bit 4 */
#define ANSB5                ANSELBbits.ANSB5               /* bit 5 */

#define ANSD0                ANSELDbits.ANSD0               /* bit 0 */
#define ANSD1                ANSELDbits.ANSD1               /* bit 1 */
#define ANSD2                ANSELDbits.ANSD2               /* bit 2 */
#define ANSD3                ANSELDbits.ANSD3               /* bit 3 */

#define ANSE0                ANSELEbits.ANSE0               /* bit 0 */
#define ANSE1                ANSELEbits.ANSE1               /* bit 1 */
#define ANSE2                ANSELEbits.ANSE2               /* bit 2 */

#define ANSF0                ANSELFbits.ANSF0               /* bit 0 */
#define ANSF1                ANSELFbits.ANSF1               /* bit 1 */
#define ANSF2                ANSELFbits.ANSF2               /* bit 2 */
#define ANSF3                ANSELFbits.ANSF3               /* bit 3 */
#define ANSF4                ANSELFbits.ANSF4               /* bit 4 */
#define ANSF5                ANSELFbits.ANSF5               /* bit 5 */
#define ANSF6                ANSELFbits.ANSF6               /* bit 6 */
#define ANSF7                ANSELFbits.ANSF7               /* bit 7 */

#define ANSG1                ANSELGbits.ANSG1               /* bit 1 */
#define ANSG2                ANSELGbits.ANSG2               /* bit 2 */
#define ANSG3                ANSELGbits.ANSG3               /* bit 3 */
#define ANSG4                ANSELGbits.ANSG4               /* bit 4 */

#define CCP2SEL              APFCONbits.CCP2SEL             /* bit 0 */
#define T3CKISEL             APFCONbits.T3CKISEL            /* bit 1 */

#define ABDEN                BAUD1CONbits.ABDEN             /* bit 0, shadows bit in BAUD2CONbits, BAUDCONbits, BAUDCON1bits, BAUDCON2bits */
#define WUE                  BAUD1CONbits.WUE               /* bit 1, shadows bit in BAUD2CONbits, BAUDCONbits, BAUDCON1bits, BAUDCON2bits */
#define BRG16                BAUD1CONbits.BRG16             /* bit 3, shadows bit in BAUD2CONbits, BAUDCONbits, BAUDCON1bits, BAUDCON2bits */
#define SCKP                 BAUD1CONbits.SCKP              /* bit 4, shadows bit in BAUD2CONbits, BAUDCONbits, BAUDCON1bits, BAUDCON2bits */
#define RCIDL                BAUD1CONbits.RCIDL             /* bit 6, shadows bit in BAUD2CONbits, BAUDCONbits, BAUDCON1bits, BAUDCON2bits */
#define ABDOVF               BAUD1CONbits.ABDOVF            /* bit 7, shadows bit in BAUD2CONbits, BAUDCONbits, BAUDCON1bits, BAUDCON2bits */

#define BORRDY               BORCONbits.BORRDY              /* bit 0 */
#define BORFS                BORCONbits.BORFS               /* bit 6 */
#define SBOREN               BORCONbits.SBOREN              /* bit 7 */

#define BSR0                 BSRbits.BSR0                   /* bit 0 */
#define BSR1                 BSRbits.BSR1                   /* bit 1 */
#define BSR2                 BSRbits.BSR2                   /* bit 2 */
#define BSR3                 BSRbits.BSR3                   /* bit 3 */
#define BSR4                 BSRbits.BSR4                   /* bit 4 */

#define CCP10M0              CCP10CONbits.CCP10M0           /* bit 0 */
#define CCP10M1              CCP10CONbits.CCP10M1           /* bit 1 */
#define CCP10M2              CCP10CONbits.CCP10M2           /* bit 2 */
#define CCP10M3              CCP10CONbits.CCP10M3           /* bit 3 */
#define DC10B0               CCP10CONbits.DC10B0            /* bit 4 */
#define DC10B1               CCP10CONbits.DC10B1            /* bit 5 */

#define CCP1M0               CCP1CONbits.CCP1M0             /* bit 0 */
#define CCP1M1               CCP1CONbits.CCP1M1             /* bit 1 */
#define CCP1M2               CCP1CONbits.CCP1M2             /* bit 2 */
#define CCP1M3               CCP1CONbits.CCP1M3             /* bit 3 */
#define DC1B0                CCP1CONbits.DC1B0              /* bit 4 */
#define DC1B1                CCP1CONbits.DC1B1              /* bit 5 */

#define CCP2M0               CCP2CONbits.CCP2M0             /* bit 0 */
#define CCP2M1               CCP2CONbits.CCP2M1             /* bit 1 */
#define CCP2M2               CCP2CONbits.CCP2M2             /* bit 2 */
#define CCP2M3               CCP2CONbits.CCP2M3             /* bit 3 */
#define DC2B0                CCP2CONbits.DC2B0              /* bit 4 */
#define DC2B1                CCP2CONbits.DC2B1              /* bit 5 */

#define CCP3M0               CCP3CONbits.CCP3M0             /* bit 0 */
#define CCP3M1               CCP3CONbits.CCP3M1             /* bit 1 */
#define CCP3M2               CCP3CONbits.CCP3M2             /* bit 2 */
#define CCP3M3               CCP3CONbits.CCP3M3             /* bit 3 */
#define DC3B0                CCP3CONbits.DC3B0              /* bit 4 */
#define DC3B1                CCP3CONbits.DC3B1              /* bit 5 */

#define CCP4M0               CCP4CONbits.CCP4M0             /* bit 0 */
#define CCP4M1               CCP4CONbits.CCP4M1             /* bit 1 */
#define CCP4M2               CCP4CONbits.CCP4M2             /* bit 2 */
#define CCP4M3               CCP4CONbits.CCP4M3             /* bit 3 */
#define DC4B0                CCP4CONbits.DC4B0              /* bit 4 */
#define DC4B1                CCP4CONbits.DC4B1              /* bit 5 */

#define CCP5M0               CCP5CONbits.CCP5M0             /* bit 0 */
#define CCP5M1               CCP5CONbits.CCP5M1             /* bit 1 */
#define CCP5M2               CCP5CONbits.CCP5M2             /* bit 2 */
#define CCP5M3               CCP5CONbits.CCP5M3             /* bit 3 */
#define DC5B0                CCP5CONbits.DC5B0              /* bit 4 */
#define DC5B1                CCP5CONbits.DC5B1              /* bit 5 */

#define CCP6M0               CCP6CONbits.CCP6M0             /* bit 0 */
#define CCP6M1               CCP6CONbits.CCP6M1             /* bit 1 */
#define CCP6M2               CCP6CONbits.CCP6M2             /* bit 2 */
#define CCP6M3               CCP6CONbits.CCP6M3             /* bit 3 */
#define DC6B0                CCP6CONbits.DC6B0              /* bit 4 */
#define DC6B1                CCP6CONbits.DC6B1              /* bit 5 */

#define CCP7M0               CCP7CONbits.CCP7M0             /* bit 0 */
#define CCP7M1               CCP7CONbits.CCP7M1             /* bit 1 */
#define CCP7M2               CCP7CONbits.CCP7M2             /* bit 2 */
#define CCP7M3               CCP7CONbits.CCP7M3             /* bit 3 */
#define DC7B0                CCP7CONbits.DC7B0              /* bit 4 */
#define DC7B1                CCP7CONbits.DC7B1              /* bit 5 */

#define CCP8M0               CCP8CONbits.CCP8M0             /* bit 0 */
#define CCP8M1               CCP8CONbits.CCP8M1             /* bit 1 */
#define CCP8M2               CCP8CONbits.CCP8M2             /* bit 2 */
#define CCP8M3               CCP8CONbits.CCP8M3             /* bit 3 */
#define DC8B0                CCP8CONbits.DC8B0              /* bit 4 */
#define DC8B1                CCP8CONbits.DC8B1              /* bit 5 */

#define CCP9M0               CCP9CONbits.CCP9M0             /* bit 0 */
#define CCP9M1               CCP9CONbits.CCP9M1             /* bit 1 */
#define CCP9M2               CCP9CONbits.CCP9M2             /* bit 2 */
#define CCP9M3               CCP9CONbits.CCP9M3             /* bit 3 */
#define DC9B0                CCP9CONbits.DC9B0              /* bit 4 */
#define DC9B1                CCP9CONbits.DC9B1              /* bit 5 */

#define C1TSEL0              CCPTMRS0bits.C1TSEL0           /* bit 0 */
#define C1TSEL1              CCPTMRS0bits.C1TSEL1           /* bit 1 */
#define C2TSEL0              CCPTMRS0bits.C2TSEL0           /* bit 2 */
#define C2TSEL1              CCPTMRS0bits.C2TSEL1           /* bit 3 */
#define C3TSEL0              CCPTMRS0bits.C3TSEL0           /* bit 4 */
#define C3TSEL1              CCPTMRS0bits.C3TSEL1           /* bit 5 */
#define C4TSEL0              CCPTMRS0bits.C4TSEL0           /* bit 6 */
#define C4TSEL1              CCPTMRS0bits.C4TSEL1           /* bit 7 */

#define C5TSEL0              CCPTMRS1bits.C5TSEL0           /* bit 0 */
#define C5TSEL1              CCPTMRS1bits.C5TSEL1           /* bit 1 */
#define C6TSEL0              CCPTMRS1bits.C6TSEL0           /* bit 2 */
#define C6TSEL1              CCPTMRS1bits.C6TSEL1           /* bit 3 */
#define C7TSEL0              CCPTMRS1bits.C7TSEL0           /* bit 4 */
#define C7TSEL1              CCPTMRS1bits.C7TSEL1           /* bit 5 */
#define C8TSEL0              CCPTMRS1bits.C8TSEL0           /* bit 6 */
#define C8TSEL1              CCPTMRS1bits.C8TSEL1           /* bit 7 */

#define C9TSEL0              CCPTMRS2bits.C9TSEL0           /* bit 0 */
#define C9TSEL1              CCPTMRS2bits.C9TSEL1           /* bit 1 */
#define C10TSEL0             CCPTMRS2bits.C10TSEL0          /* bit 2 */
#define C10TSEL1             CCPTMRS2bits.C10TSEL1          /* bit 3 */

#define ADFVR0               FVRCONbits.ADFVR0              /* bit 0 */
#define ADFVR1               FVRCONbits.ADFVR1              /* bit 1 */
#define TSRNG                FVRCONbits.TSRNG               /* bit 4 */
#define TSEN                 FVRCONbits.TSEN                /* bit 5 */
#define FVRRDY               FVRCONbits.FVRRDY              /* bit 6 */
#define FVREN                FVRCONbits.FVREN               /* bit 7 */

#define IOCIF                INTCONbits.IOCIF               /* bit 0 */
#define INTF                 INTCONbits.INTF                /* bit 1 */
#define T0IF                 INTCONbits.T0IF                /* bit 2 */
#define TMR0IF               INTCONbits.TMR0IF              /* bit 2 */
#define IOCIE                INTCONbits.IOCIE               /* bit 3 */
#define INTE                 INTCONbits.INTE                /* bit 4 */
#define T0IE                 INTCONbits.T0IE                /* bit 5 */
#define TMR0IE               INTCONbits.TMR0IE              /* bit 5 */
#define PEIE                 INTCONbits.PEIE                /* bit 6 */
#define GIE                  INTCONbits.GIE                 /* bit 7 */

#define IOCBF0               IOCBFbits.IOCBF0               /* bit 0 */
#define IOCBF1               IOCBFbits.IOCBF1               /* bit 1 */
#define IOCBF2               IOCBFbits.IOCBF2               /* bit 2 */
#define IOCBF3               IOCBFbits.IOCBF3               /* bit 3 */
#define IOCBF4               IOCBFbits.IOCBF4               /* bit 4 */
#define IOCBF5               IOCBFbits.IOCBF5               /* bit 5 */
#define IOCBF6               IOCBFbits.IOCBF6               /* bit 6 */
#define IOCBF7               IOCBFbits.IOCBF7               /* bit 7 */

#define IOCBN0               IOCBNbits.IOCBN0               /* bit 0 */
#define IOCBN1               IOCBNbits.IOCBN1               /* bit 1 */
#define IOCBN2               IOCBNbits.IOCBN2               /* bit 2 */
#define IOCBN3               IOCBNbits.IOCBN3               /* bit 3 */
#define IOCBN4               IOCBNbits.IOCBN4               /* bit 4 */
#define IOCBN5               IOCBNbits.IOCBN5               /* bit 5 */
#define IOCBN6               IOCBNbits.IOCBN6               /* bit 6 */
#define IOCBN7               IOCBNbits.IOCBN7               /* bit 7 */

#define IOCBP0               IOCBPbits.IOCBP0               /* bit 0 */
#define IOCBP1               IOCBPbits.IOCBP1               /* bit 1 */
#define IOCBP2               IOCBPbits.IOCBP2               /* bit 2 */
#define IOCBP3               IOCBPbits.IOCBP3               /* bit 3 */
#define IOCBP4               IOCBPbits.IOCBP4               /* bit 4 */
#define IOCBP5               IOCBPbits.IOCBP5               /* bit 5 */
#define IOCBP6               IOCBPbits.IOCBP6               /* bit 6 */
#define IOCBP7               IOCBPbits.IOCBP7               /* bit 7 */

#define LATA0                LATAbits.LATA0                 /* bit 0 */
#define LATA1                LATAbits.LATA1                 /* bit 1 */
#define LATA2                LATAbits.LATA2                 /* bit 2 */
#define LATA3                LATAbits.LATA3                 /* bit 3 */
#define LATA4                LATAbits.LATA4                 /* bit 4 */
#define LATA5                LATAbits.LATA5                 /* bit 5 */
#define LATA6                LATAbits.LATA6                 /* bit 6 */
#define LATA7                LATAbits.LATA7                 /* bit 7 */

#define LATB0                LATBbits.LATB0                 /* bit 0 */
#define LATB1                LATBbits.LATB1                 /* bit 1 */
#define LATB2                LATBbits.LATB2                 /* bit 2 */
#define LATB3                LATBbits.LATB3                 /* bit 3 */
#define LATB4                LATBbits.LATB4                 /* bit 4 */
#define LATB5                LATBbits.LATB5                 /* bit 5 */
#define LATB6                LATBbits.LATB6                 /* bit 6 */
#define LATB7                LATBbits.LATB7                 /* bit 7 */

#define LATC0                LATCbits.LATC0                 /* bit 0 */
#define LATC1                LATCbits.LATC1                 /* bit 1 */
#define LATC2                LATCbits.LATC2                 /* bit 2 */
#define LATC3                LATCbits.LATC3                 /* bit 3 */
#define LATC4                LATCbits.LATC4                 /* bit 4 */
#define LATC5                LATCbits.LATC5                 /* bit 5 */
#define LATC6                LATCbits.LATC6                 /* bit 6 */
#define LATC7                LATCbits.LATC7                 /* bit 7 */

#define LATD0                LATDbits.LATD0                 /* bit 0 */
#define LATD1                LATDbits.LATD1                 /* bit 1 */
#define LATD2                LATDbits.LATD2                 /* bit 2 */
#define LATD3                LATDbits.LATD3                 /* bit 3 */
#define LATD4                LATDbits.LATD4                 /* bit 4 */
#define LATD5                LATDbits.LATD5                 /* bit 5 */
#define LATD6                LATDbits.LATD6                 /* bit 6 */
#define LATD7                LATDbits.LATD7                 /* bit 7 */

#define LATE0                LATEbits.LATE0                 /* bit 0 */
#define LATE1                LATEbits.LATE1                 /* bit 1 */
#define LATE2                LATEbits.LATE2                 /* bit 2 */
#define LATE3                LATEbits.LATE3                 /* bit 3 */
#define LATE4                LATEbits.LATE4                 /* bit 4 */
#define LATE5                LATEbits.LATE5                 /* bit 5 */
#define LATE6                LATEbits.LATE6                 /* bit 6 */
#define LATE7                LATEbits.LATE7                 /* bit 7 */

#define LATF0                LATFbits.LATF0                 /* bit 0 */
#define LATF1                LATFbits.LATF1                 /* bit 1 */
#define LATF2                LATFbits.LATF2                 /* bit 2 */
#define LATF3                LATFbits.LATF3                 /* bit 3 */
#define LATF4                LATFbits.LATF4                 /* bit 4 */
#define LATF5                LATFbits.LATF5                 /* bit 5 */
#define LATF6                LATFbits.LATF6                 /* bit 6 */
#define LATF7                LATFbits.LATF7                 /* bit 7 */

#define LATG0                LATGbits.LATG0                 /* bit 0 */
#define LATG1                LATGbits.LATG1                 /* bit 1 */
#define LATG2                LATGbits.LATG2                 /* bit 2 */
#define LATG3                LATGbits.LATG3                 /* bit 3 */
#define LATG4                LATGbits.LATG4                 /* bit 4 */

#define PS0                  OPTION_REGbits.PS0             /* bit 0 */
#define PS1                  OPTION_REGbits.PS1             /* bit 1 */
#define PS2                  OPTION_REGbits.PS2             /* bit 2 */
#define PSA                  OPTION_REGbits.PSA             /* bit 3 */
#define T0SE                 OPTION_REGbits.T0SE            /* bit 4 */
#define TMR0SE               OPTION_REGbits.TMR0SE          /* bit 4 */
#define T0CS                 OPTION_REGbits.T0CS            /* bit 5 */
#define TMR0CS               OPTION_REGbits.TMR0CS          /* bit 5 */
#define INTEDG               OPTION_REGbits.INTEDG          /* bit 6 */
#define NOT_WPUEN            OPTION_REGbits.NOT_WPUEN       /* bit 7 */

#define SCS0                 OSCCONbits.SCS0                /* bit 0 */
#define SCS1                 OSCCONbits.SCS1                /* bit 1 */
#define IRCF0                OSCCONbits.IRCF0               /* bit 3 */
#define IRCF1                OSCCONbits.IRCF1               /* bit 4 */
#define IRCF2                OSCCONbits.IRCF2               /* bit 5 */
#define IRCF3                OSCCONbits.IRCF3               /* bit 6 */

#define HFIOFS               OSCSTATbits.HFIOFS             /* bit 0 */
#define LFIOFR               OSCSTATbits.LFIOFR             /* bit 1 */
#define HFIOFR               OSCSTATbits.HFIOFR             /* bit 4 */
#define OSTS                 OSCSTATbits.OSTS               /* bit 5 */
#define SOSCR                OSCSTATbits.SOSCR              /* bit 7 */
#define T1OSCR               OSCSTATbits.T1OSCR             /* bit 7 */

#define NOT_BOR              PCONbits.NOT_BOR               /* bit 0 */
#define NOT_POR              PCONbits.NOT_POR               /* bit 1 */
#define NOT_RI               PCONbits.NOT_RI                /* bit 2 */
#define NOT_RMCLR            PCONbits.NOT_RMCLR             /* bit 3 */
#define NOT_RWDT             PCONbits.NOT_RWDT              /* bit 4 */
#define STKUNF               PCONbits.STKUNF                /* bit 6 */
#define STKOVF               PCONbits.STKOVF                /* bit 7 */

#define TMR1IE               PIE1bits.TMR1IE                /* bit 0 */
#define TMR2IE               PIE1bits.TMR2IE                /* bit 1 */
#define CCP1IE               PIE1bits.CCP1IE                /* bit 2 */
#define SSP1IE               PIE1bits.SSP1IE                /* bit 3 */
#define SSPIE                PIE1bits.SSPIE                 /* bit 3 */
#define TX1IE                PIE1bits.TX1IE                 /* bit 4 */
#define TXIE                 PIE1bits.TXIE                  /* bit 4 */
#define RC1IE                PIE1bits.RC1IE                 /* bit 5 */
#define RCIE                 PIE1bits.RCIE                  /* bit 5 */
#define ADIE                 PIE1bits.ADIE                  /* bit 6 */
#define TMR1GIE              PIE1bits.TMR1GIE               /* bit 7 */

#define CCP2IE               PIE2bits.CCP2IE                /* bit 0 */
#define TMR8IE               PIE2bits.TMR8IE                /* bit 1 */
#define TMR10IE              PIE2bits.TMR10IE               /* bit 2 */
#define BCL1IE               PIE2bits.BCL1IE                /* bit 3 */
#define BCLIE                PIE2bits.BCLIE                 /* bit 3 */
#define TMR3GIE              PIE2bits.TMR3GIE               /* bit 5 */
#define TMR5GIE              PIE2bits.TMR5GIE               /* bit 6 */
#define OSFIE                PIE2bits.OSFIE                 /* bit 7 */

#define TMR3IE               PIE3bits.TMR3IE                /* bit 0 */
#define TMR4IE               PIE3bits.TMR4IE                /* bit 1 */
#define TMR5IE               PIE3bits.TMR5IE                /* bit 2 */
#define TMR6IE               PIE3bits.TMR6IE                /* bit 3 */
#define CCP3IE               PIE3bits.CCP3IE                /* bit 4 */
#define CCP4IE               PIE3bits.CCP4IE                /* bit 5 */
#define CCP5IE               PIE3bits.CCP5IE                /* bit 6 */
#define CCP6IE               PIE3bits.CCP6IE                /* bit 7 */

#define SSP2IE               PIE4bits.SSP2IE                /* bit 0 */
#define BCL2IE               PIE4bits.BCL2IE                /* bit 1 */
#define CCP7IE               PIE4bits.CCP7IE                /* bit 2 */
#define CCP8IE               PIE4bits.CCP8IE                /* bit 3 */
#define TX2IE                PIE4bits.TX2IE                 /* bit 4 */
#define RC2IE                PIE4bits.RC2IE                 /* bit 5 */
#define CCP9IE               PIE4bits.CCP9IE                /* bit 6 */
#define CCP10IE              PIE4bits.CCP10IE               /* bit 7 */

#define TMR1IF               PIR1bits.TMR1IF                /* bit 0 */
#define TMR2IF               PIR1bits.TMR2IF                /* bit 1 */
#define CCP1IF               PIR1bits.CCP1IF                /* bit 2 */
#define SSP1IF               PIR1bits.SSP1IF                /* bit 3 */
#define SSPIF                PIR1bits.SSPIF                 /* bit 3 */
#define TX1IF                PIR1bits.TX1IF                 /* bit 4 */
#define TXIF                 PIR1bits.TXIF                  /* bit 4 */
#define RC1IF                PIR1bits.RC1IF                 /* bit 5 */
#define RCIF                 PIR1bits.RCIF                  /* bit 5 */
#define ADIF                 PIR1bits.ADIF                  /* bit 6 */
#define TMR1GIF              PIR1bits.TMR1GIF               /* bit 7 */

#define CCP2IF               PIR2bits.CCP2IF                /* bit 0 */
#define TMR8IF               PIR2bits.TMR8IF                /* bit 1 */
#define TMR10IF              PIR2bits.TMR10IF               /* bit 2 */
#define BCL1IF               PIR2bits.BCL1IF                /* bit 3 */
#define BCLIF                PIR2bits.BCLIF                 /* bit 3 */
#define TMR3GIF              PIR2bits.TMR3GIF               /* bit 5 */
#define TMR5GIF              PIR2bits.TMR5GIF               /* bit 6 */
#define OSFIF                PIR2bits.OSFIF                 /* bit 7 */

#define TMR3IF               PIR3bits.TMR3IF                /* bit 0 */
#define TMR4IF               PIR3bits.TMR4IF                /* bit 1 */
#define TMR5IF               PIR3bits.TMR5IF                /* bit 2 */
#define TMR6IF               PIR3bits.TMR6IF                /* bit 3 */
#define CCP3IF               PIR3bits.CCP3IF                /* bit 4 */
#define CCP4IF               PIR3bits.CCP4IF                /* bit 5 */
#define CCP5IF               PIR3bits.CCP5IF                /* bit 6 */
#define CCP6IF               PIR3bits.CCP6IF                /* bit 7 */

#define SSP2IF               PIR4bits.SSP2IF                /* bit 0 */
#define BCL2IF               PIR4bits.BCL2IF                /* bit 1 */
#define CCP7IF               PIR4bits.CCP7IF                /* bit 2 */
#define CCP8IF               PIR4bits.CCP8IF                /* bit 3 */
#define TX2IF                PIR4bits.TX2IF                 /* bit 4 */
#define RC2IF                PIR4bits.RC2IF                 /* bit 5 */
#define CCP9IF               PIR4bits.CCP9IF                /* bit 6 */
#define CCP10IF              PIR4bits.CCP10IF               /* bit 7 */

#define RD                   PMCON1bits.RD                  /* bit 0 */
#define WR                   PMCON1bits.WR                  /* bit 1 */
#define WREN                 PMCON1bits.WREN                /* bit 2 */
#define WRERR                PMCON1bits.WRERR               /* bit 3 */
#define FREE                 PMCON1bits.FREE                /* bit 4 */
#define LWLO                 PMCON1bits.LWLO                /* bit 5 */
#define CFGS                 PMCON1bits.CFGS                /* bit 6 */

#define RA0                  PORTAbits.RA0                  /* bit 0 */
#define RA1                  PORTAbits.RA1                  /* bit 1 */
#define RA2                  PORTAbits.RA2                  /* bit 2 */
#define RA3                  PORTAbits.RA3                  /* bit 3 */
#define RA4                  PORTAbits.RA4                  /* bit 4 */
#define RA5                  PORTAbits.RA5                  /* bit 5 */
#define RA6                  PORTAbits.RA6                  /* bit 6 */
#define RA7                  PORTAbits.RA7                  /* bit 7 */

#define RB0                  PORTBbits.RB0                  /* bit 0 */
#define RB1                  PORTBbits.RB1                  /* bit 1 */
#define RB2                  PORTBbits.RB2                  /* bit 2 */
#define RB3                  PORTBbits.RB3                  /* bit 3 */
#define RB4                  PORTBbits.RB4                  /* bit 4 */
#define RB5                  PORTBbits.RB5                  /* bit 5 */
#define RB6                  PORTBbits.RB6                  /* bit 6 */
#define RB7                  PORTBbits.RB7                  /* bit 7 */

#define RC0                  PORTCbits.RC0                  /* bit 0 */
#define RC1                  PORTCbits.RC1                  /* bit 1 */
#define RC2                  PORTCbits.RC2                  /* bit 2 */
#define RC3                  PORTCbits.RC3                  /* bit 3 */
#define RC4                  PORTCbits.RC4                  /* bit 4 */
#define RC5                  PORTCbits.RC5                  /* bit 5 */
#define RC6                  PORTCbits.RC6                  /* bit 6 */
#define RC7                  PORTCbits.RC7                  /* bit 7 */

#define RD0                  PORTDbits.RD0                  /* bit 0 */
#define RD1                  PORTDbits.RD1                  /* bit 1 */
#define RD2                  PORTDbits.RD2                  /* bit 2 */
#define RD3                  PORTDbits.RD3                  /* bit 3 */
#define RD4                  PORTDbits.RD4                  /* bit 4 */
#define RD5                  PORTDbits.RD5                  /* bit 5 */
#define RD6                  PORTDbits.RD6                  /* bit 6 */
#define RD7                  PORTDbits.RD7                  /* bit 7 */

#define RE0                  PORTEbits.RE0                  /* bit 0 */
#define RE1                  PORTEbits.RE1                  /* bit 1 */
#define RE2                  PORTEbits.RE2                  /* bit 2 */
#define RE3                  PORTEbits.RE3                  /* bit 3 */
#define RE4                  PORTEbits.RE4                  /* bit 4 */
#define RE5                  PORTEbits.RE5                  /* bit 5 */
#define RE6                  PORTEbits.RE6                  /* bit 6 */
#define RE7                  PORTEbits.RE7                  /* bit 7 */

#define RF0                  PORTFbits.RF0                  /* bit 0 */
#define RF1                  PORTFbits.RF1                  /* bit 1 */
#define RF2                  PORTFbits.RF2                  /* bit 2 */
#define RF3                  PORTFbits.RF3                  /* bit 3 */
#define RF4                  PORTFbits.RF4                  /* bit 4 */
#define RF5                  PORTFbits.RF5                  /* bit 5 */
#define RF6                  PORTFbits.RF6                  /* bit 6 */
#define RF7                  PORTFbits.RF7                  /* bit 7 */

#define RG0                  PORTGbits.RG0                  /* bit 0 */
#define RG1                  PORTGbits.RG1                  /* bit 1 */
#define RG2                  PORTGbits.RG2                  /* bit 2 */
#define RG3                  PORTGbits.RG3                  /* bit 3 */
#define RG4                  PORTGbits.RG4                  /* bit 4 */
#define RG5                  PORTGbits.RG5                  /* bit 5 */

#define RX9D                 RC1STAbits.RX9D                /* bit 0, shadows bit in RC2STAbits, RCSTAbits, RCSTA1bits, RCSTA2bits */
#define OERR                 RC1STAbits.OERR                /* bit 1, shadows bit in RC2STAbits, RCSTAbits, RCSTA1bits, RCSTA2bits */
#define FERR                 RC1STAbits.FERR                /* bit 2, shadows bit in RC2STAbits, RCSTAbits, RCSTA1bits, RCSTA2bits */
#define ADDEN                RC1STAbits.ADDEN               /* bit 3, shadows bit in RC2STAbits, RCSTAbits, RCSTA1bits, RCSTA2bits */
#define CREN                 RC1STAbits.CREN                /* bit 4, shadows bit in RC2STAbits, RCSTAbits, RCSTA1bits, RCSTA2bits */
#define SREN                 RC1STAbits.SREN                /* bit 5, shadows bit in RC2STAbits, RCSTAbits, RCSTA1bits, RCSTA2bits */
#define RX9                  RC1STAbits.RX9                 /* bit 6, shadows bit in RC2STAbits, RCSTAbits, RCSTA1bits, RCSTA2bits */
#define SPEN                 RC1STAbits.SPEN                /* bit 7, shadows bit in RC2STAbits, RCSTAbits, RCSTA1bits, RCSTA2bits */

#define SSPM0                SSP1CON1bits.SSPM0             /* bit 0, shadows bit in SSP2CON1bits, SSPCONbits, SSPCON1bits */
#define SSPM1                SSP1CON1bits.SSPM1             /* bit 1, shadows bit in SSP2CON1bits, SSPCONbits, SSPCON1bits */
#define SSPM2                SSP1CON1bits.SSPM2             /* bit 2, shadows bit in SSP2CON1bits, SSPCONbits, SSPCON1bits */
#define SSPM3                SSP1CON1bits.SSPM3             /* bit 3, shadows bit in SSP2CON1bits, SSPCONbits, SSPCON1bits */
#define CKP                  SSP1CON1bits.CKP               /* bit 4, shadows bit in SSP2CON1bits, SSPCONbits, SSPCON1bits */
#define SSPEN                SSP1CON1bits.SSPEN             /* bit 5, shadows bit in SSP2CON1bits, SSPCONbits, SSPCON1bits */
#define SSPOV                SSP1CON1bits.SSPOV             /* bit 6, shadows bit in SSP2CON1bits, SSPCONbits, SSPCON1bits */
#define WCOL                 SSP1CON1bits.WCOL              /* bit 7, shadows bit in SSP2CON1bits, SSPCONbits, SSPCON1bits */

#define SEN                  SSP1CON2bits.SEN               /* bit 0, shadows bit in SSP2CON2bits, SSPCON2bits */
#define RSEN                 SSP1CON2bits.RSEN              /* bit 1, shadows bit in SSP2CON2bits, SSPCON2bits */
#define PEN                  SSP1CON2bits.PEN               /* bit 2, shadows bit in SSP2CON2bits, SSPCON2bits */
#define RCEN                 SSP1CON2bits.RCEN              /* bit 3, shadows bit in SSP2CON2bits, SSPCON2bits */
#define ACKEN                SSP1CON2bits.ACKEN             /* bit 4, shadows bit in SSP2CON2bits, SSPCON2bits */
#define ACKDT                SSP1CON2bits.ACKDT             /* bit 5, shadows bit in SSP2CON2bits, SSPCON2bits */
#define ACKSTAT              SSP1CON2bits.ACKSTAT           /* bit 6, shadows bit in SSP2CON2bits, SSPCON2bits */
#define GCEN                 SSP1CON2bits.GCEN              /* bit 7, shadows bit in SSP2CON2bits, SSPCON2bits */

#define DHEN                 SSP1CON3bits.DHEN              /* bit 0, shadows bit in SSP2CON3bits, SSPCON3bits */
#define AHEN                 SSP1CON3bits.AHEN              /* bit 1, shadows bit in SSP2CON3bits, SSPCON3bits */
#define SBCDE                SSP1CON3bits.SBCDE             /* bit 2, shadows bit in SSP2CON3bits, SSPCON3bits */
#define SDAHT                SSP1CON3bits.SDAHT             /* bit 3, shadows bit in SSP2CON3bits, SSPCON3bits */
#define BOEN                 SSP1CON3bits.BOEN              /* bit 4, shadows bit in SSP2CON3bits, SSPCON3bits */
#define SCIE                 SSP1CON3bits.SCIE              /* bit 5, shadows bit in SSP2CON3bits, SSPCON3bits */
#define PCIE                 SSP1CON3bits.PCIE              /* bit 6, shadows bit in SSP2CON3bits, SSPCON3bits */
#define ACKTIM               SSP1CON3bits.ACKTIM            /* bit 7, shadows bit in SSP2CON3bits, SSPCON3bits */

#define BF                   SSP1STATbits.BF                /* bit 0, shadows bit in SSP2STATbits, SSPSTATbits */
#define UA                   SSP1STATbits.UA                /* bit 1, shadows bit in SSP2STATbits, SSPSTATbits */
#define R_NOT_W              SSP1STATbits.R_NOT_W           /* bit 2, shadows bit in SSP2STATbits, SSPSTATbits */
#define S                    SSP1STATbits.S                 /* bit 3, shadows bit in SSP2STATbits, SSPSTATbits */
#define P                    SSP1STATbits.P                 /* bit 4, shadows bit in SSP2STATbits, SSPSTATbits */
#define D_NOT_A              SSP1STATbits.D_NOT_A           /* bit 5, shadows bit in SSP2STATbits, SSPSTATbits */
#define CKE                  SSP1STATbits.CKE               /* bit 6, shadows bit in SSP2STATbits, SSPSTATbits */
#define SMP                  SSP1STATbits.SMP               /* bit 7, shadows bit in SSP2STATbits, SSPSTATbits */

#define C_SHAD               STATUS_SHADbits.C_SHAD         /* bit 0 */
#define DC_SHAD              STATUS_SHADbits.DC_SHAD        /* bit 1 */
#define Z_SHAD               STATUS_SHADbits.Z_SHAD         /* bit 2 */

#define C                    STATUSbits.C                   /* bit 0 */
#define DC                   STATUSbits.DC                  /* bit 1 */
#define Z                    STATUSbits.Z                   /* bit 2 */
#define NOT_PD               STATUSbits.NOT_PD              /* bit 3 */
#define NOT_TO               STATUSbits.NOT_TO              /* bit 4 */

#define T10CKPS0             T10CONbits.T10CKPS0            /* bit 0 */
#define T10CKPS1             T10CONbits.T10CKPS1            /* bit 1 */
#define TMR10ON              T10CONbits.TMR10ON             /* bit 2 */
#define T10OUTPS0            T10CONbits.T10OUTPS0           /* bit 3 */
#define T10OUTPS1            T10CONbits.T10OUTPS1           /* bit 4 */
#define T10OUTPS2            T10CONbits.T10OUTPS2           /* bit 5 */
#define T10OUTPS3            T10CONbits.T10OUTPS3           /* bit 6 */

#define TMR1ON               T1CONbits.TMR1ON               /* bit 0 */
#define NOT_T1SYNC           T1CONbits.NOT_T1SYNC           /* bit 2 */
#define SOSCEN               T1CONbits.SOSCEN               /* bit 3, shadows bit in T3CONbits, T5CONbits */
#define T1OSCEN              T1CONbits.T1OSCEN              /* bit 3 */
#define T1CKPS0              T1CONbits.T1CKPS0              /* bit 4 */
#define T1CKPS1              T1CONbits.T1CKPS1              /* bit 5 */
#define TMR1CS0              T1CONbits.TMR1CS0              /* bit 6 */
#define TMR1CS1              T1CONbits.TMR1CS1              /* bit 7 */

#define T1GSS0               T1GCONbits.T1GSS0              /* bit 0 */
#define T1GSS1               T1GCONbits.T1GSS1              /* bit 1 */
#define T1GVAL               T1GCONbits.T1GVAL              /* bit 2 */
#define T1GGO_NOT_DONE       T1GCONbits.T1GGO_NOT_DONE      /* bit 3 */
#define T1GSPM               T1GCONbits.T1GSPM              /* bit 4 */
#define T1GTM                T1GCONbits.T1GTM               /* bit 5 */
#define T1GPOL               T1GCONbits.T1GPOL              /* bit 6 */
#define TMR1GE               T1GCONbits.TMR1GE              /* bit 7 */

#define T2CKPS0              T2CONbits.T2CKPS0              /* bit 0 */
#define T2CKPS1              T2CONbits.T2CKPS1              /* bit 1 */
#define TMR2ON               T2CONbits.TMR2ON               /* bit 2 */
#define T2OUTPS0             T2CONbits.T2OUTPS0             /* bit 3 */
#define T2OUTPS1             T2CONbits.T2OUTPS1             /* bit 4 */
#define T2OUTPS2             T2CONbits.T2OUTPS2             /* bit 5 */
#define T2OUTPS3             T2CONbits.T2OUTPS3             /* bit 6 */

#define TMR3ON               T3CONbits.TMR3ON               /* bit 0 */
#define NOT_T3SYNC           T3CONbits.NOT_T3SYNC           /* bit 2 */
#define T3OSCEN              T3CONbits.T3OSCEN              /* bit 3 */
#define T3CKPS0              T3CONbits.T3CKPS0              /* bit 4 */
#define T3CKPS1              T3CONbits.T3CKPS1              /* bit 5 */
#define TMR3CS0              T3CONbits.TMR3CS0              /* bit 6 */
#define TMR3CS1              T3CONbits.TMR3CS1              /* bit 7 */

#define T3GSS0               T3GCONbits.T3GSS0              /* bit 0 */
#define T3GSS1               T3GCONbits.T3GSS1              /* bit 1 */
#define T3GVAL               T3GCONbits.T3GVAL              /* bit 2 */
#define T3GGO_NOT_DONE       T3GCONbits.T3GGO_NOT_DONE      /* bit 3 */
#define T3GSPM               T3GCONbits.T3GSPM              /* bit 4 */
#define T3GTM                T3GCONbits.T3GTM               /* bit 5 */
#define T3GPOL               T3GCONbits.T3GPOL              /* bit 6 */
#define TMR3GE               T3GCONbits.TMR3GE              /* bit 7 */

#define T4CKPS0              T4CONbits.T4CKPS0              /* bit 0 */
#define T4CKPS1              T4CONbits.T4CKPS1              /* bit 1 */
#define TMR4ON               T4CONbits.TMR4ON               /* bit 2 */
#define T4OUTPS0             T4CONbits.T4OUTPS0             /* bit 3 */
#define T4OUTPS1             T4CONbits.T4OUTPS1             /* bit 4 */
#define T4OUTPS2             T4CONbits.T4OUTPS2             /* bit 5 */
#define T4OUTPS3             T4CONbits.T4OUTPS3             /* bit 6 */

#define TMR5ON               T5CONbits.TMR5ON               /* bit 0 */
#define NOT_T5SYNC           T5CONbits.NOT_T5SYNC           /* bit 2 */
#define T5OSCEN              T5CONbits.T5OSCEN              /* bit 3 */
#define T5CKPS0              T5CONbits.T5CKPS0              /* bit 4 */
#define T5CKPS1              T5CONbits.T5CKPS1              /* bit 5 */
#define TMR5CS0              T5CONbits.TMR5CS0              /* bit 6 */
#define TMR5CS1              T5CONbits.TMR5CS1              /* bit 7 */

#define T5GSS0               T5GCONbits.T5GSS0              /* bit 0 */
#define T5GSS1               T5GCONbits.T5GSS1              /* bit 1 */
#define T5GVAL               T5GCONbits.T5GVAL              /* bit 2 */
#define T5GGO_NOT_DONE       T5GCONbits.T5GGO_NOT_DONE      /* bit 3 */
#define T5GSPM               T5GCONbits.T5GSPM              /* bit 4 */
#define T5GTM                T5GCONbits.T5GTM               /* bit 5 */
#define T5GPOL               T5GCONbits.T5GPOL              /* bit 6 */
#define TMR5GE               T5GCONbits.TMR5GE              /* bit 7 */

#define T6CKPS0              T6CONbits.T6CKPS0              /* bit 0 */
#define T6CKPS1              T6CONbits.T6CKPS1              /* bit 1 */
#define TMR6ON               T6CONbits.TMR6ON               /* bit 2 */
#define T6OUTPS0             T6CONbits.T6OUTPS0             /* bit 3 */
#define T6OUTPS1             T6CONbits.T6OUTPS1             /* bit 4 */
#define T6OUTPS2             T6CONbits.T6OUTPS2             /* bit 5 */
#define T6OUTPS3             T6CONbits.T6OUTPS3             /* bit 6 */

#define T8CKPS0              T8CONbits.T8CKPS0              /* bit 0 */
#define T8CKPS1              T8CONbits.T8CKPS1              /* bit 1 */
#define TMR8ON               T8CONbits.TMR8ON               /* bit 2 */
#define T8OUTPS0             T8CONbits.T8OUTPS0             /* bit 3 */
#define T8OUTPS1             T8CONbits.T8OUTPS1             /* bit 4 */
#define T8OUTPS2             T8CONbits.T8OUTPS2             /* bit 5 */
#define T8OUTPS3             T8CONbits.T8OUTPS3             /* bit 6 */

#define TRISA0               TRISAbits.TRISA0               /* bit 0 */
#define TRISA1               TRISAbits.TRISA1               /* bit 1 */
#define TRISA2               TRISAbits.TRISA2               /* bit 2 */
#define TRISA3               TRISAbits.TRISA3               /* bit 3 */
#define TRISA4               TRISAbits.TRISA4               /* bit 4 */
#define TRISA5               TRISAbits.TRISA5               /* bit 5 */
#define TRISA6               TRISAbits.TRISA6               /* bit 6 */
#define TRISA7               TRISAbits.TRISA7               /* bit 7 */

#define TRISB0               TRISBbits.TRISB0               /* bit 0 */
#define TRISB1               TRISBbits.TRISB1               /* bit 1 */
#define TRISB2               TRISBbits.TRISB2               /* bit 2 */
#define TRISB3               TRISBbits.TRISB3               /* bit 3 */
#define TRISB4               TRISBbits.TRISB4               /* bit 4 */
#define TRISB5               TRISBbits.TRISB5               /* bit 5 */
#define TRISB6               TRISBbits.TRISB6               /* bit 6 */
#define TRISB7               TRISBbits.TRISB7               /* bit 7 */

#define TRISC0               TRISCbits.TRISC0               /* bit 0 */
#define TRISC1               TRISCbits.TRISC1               /* bit 1 */
#define TRISC2               TRISCbits.TRISC2               /* bit 2 */
#define TRISC3               TRISCbits.TRISC3               /* bit 3 */
#define TRISC4               TRISCbits.TRISC4               /* bit 4 */
#define TRISC5               TRISCbits.TRISC5               /* bit 5 */
#define TRISC6               TRISCbits.TRISC6               /* bit 6 */
#define TRISC7               TRISCbits.TRISC7               /* bit 7 */

#define TRISD0               TRISDbits.TRISD0               /* bit 0 */
#define TRISD1               TRISDbits.TRISD1               /* bit 1 */
#define TRISD2               TRISDbits.TRISD2               /* bit 2 */
#define TRISD3               TRISDbits.TRISD3               /* bit 3 */
#define TRISD4               TRISDbits.TRISD4               /* bit 4 */
#define TRISD5               TRISDbits.TRISD5               /* bit 5 */
#define TRISD6               TRISDbits.TRISD6               /* bit 6 */
#define TRISD7               TRISDbits.TRISD7               /* bit 7 */

#define TRISE0               TRISEbits.TRISE0               /* bit 0 */
#define TRISE1               TRISEbits.TRISE1               /* bit 1 */
#define TRISE2               TRISEbits.TRISE2               /* bit 2 */
#define TRISE3               TRISEbits.TRISE3               /* bit 3 */
#define TRISE4               TRISEbits.TRISE4               /* bit 4 */
#define TRISE5               TRISEbits.TRISE5               /* bit 5 */
#define TRISE6               TRISEbits.TRISE6               /* bit 6 */
#define TRISE7               TRISEbits.TRISE7               /* bit 7 */

#define TRISF0               TRISFbits.TRISF0               /* bit 0 */
#define TRISF1               TRISFbits.TRISF1               /* bit 1 */
#define TRISF2               TRISFbits.TRISF2               /* bit 2 */
#define TRISF3               TRISFbits.TRISF3               /* bit 3 */
#define TRISF4               TRISFbits.TRISF4               /* bit 4 */
#define TRISF5               TRISFbits.TRISF5               /* bit 5 */
#define TRISF6               TRISFbits.TRISF6               /* bit 6 */
#define TRISF7               TRISFbits.TRISF7               /* bit 7 */

#define TRISG0               TRISGbits.TRISG0               /* bit 0 */
#define TRISG1               TRISGbits.TRISG1               /* bit 1 */
#define TRISG2               TRISGbits.TRISG2               /* bit 2 */
#define TRISG3               TRISGbits.TRISG3               /* bit 3 */
#define TRISG4               TRISGbits.TRISG4               /* bit 4 */

#define TX9D                 TX1STAbits.TX9D                /* bit 0, shadows bit in TX2STAbits, TXSTAbits, TXSTA1bits, TXSTA2bits */
#define TRMT                 TX1STAbits.TRMT                /* bit 1, shadows bit in TX2STAbits, TXSTAbits, TXSTA1bits, TXSTA2bits */
#define BRGH                 TX1STAbits.BRGH                /* bit 2, shadows bit in TX2STAbits, TXSTAbits, TXSTA1bits, TXSTA2bits */
#define SENDB                TX1STAbits.SENDB               /* bit 3, shadows bit in TX2STAbits, TXSTAbits, TXSTA1bits, TXSTA2bits */
#define SYNC                 TX1STAbits.SYNC                /* bit 4, shadows bit in TX2STAbits, TXSTAbits, TXSTA1bits, TXSTA2bits */
#define TXEN                 TX1STAbits.TXEN                /* bit 5, shadows bit in TX2STAbits, TXSTAbits, TXSTA1bits, TXSTA2bits */
#define TX9                  TX1STAbits.TX9                 /* bit 6, shadows bit in TX2STAbits, TXSTAbits, TXSTA1bits, TXSTA2bits */
#define CSRC                 TX1STAbits.CSRC                /* bit 7, shadows bit in TX2STAbits, TXSTAbits, TXSTA1bits, TXSTA2bits */

#define VREGPM               VREGCONbits.VREGPM             /* bit 1 */

#define SWDTEN               WDTCONbits.SWDTEN              /* bit 0 */
#define WDTPS0               WDTCONbits.WDTPS0              /* bit 1 */
#define WDTPS1               WDTCONbits.WDTPS1              /* bit 2 */
#define WDTPS2               WDTCONbits.WDTPS2              /* bit 3 */
#define WDTPS3               WDTCONbits.WDTPS3              /* bit 4 */
#define WDTPS4               WDTCONbits.WDTPS4              /* bit 5 */

#define WPUB0                WPUBbits.WPUB0                 /* bit 0 */
#define WPUB1                WPUBbits.WPUB1                 /* bit 1 */
#define WPUB2                WPUBbits.WPUB2                 /* bit 2 */
#define WPUB3                WPUBbits.WPUB3                 /* bit 3 */
#define WPUB4                WPUBbits.WPUB4                 /* bit 4 */
#define WPUB5                WPUBbits.WPUB5                 /* bit 5 */
#define WPUB6                WPUBbits.WPUB6                 /* bit 6 */
#define WPUB7                WPUBbits.WPUB7                 /* bit 7 */

#define WPUD0                WPUDbits.WPUD0                 /* bit 0 */
#define WPUD1                WPUDbits.WPUD1                 /* bit 1 */
#define WPUD2                WPUDbits.WPUD2                 /* bit 2 */
#define WPUD3                WPUDbits.WPUD3                 /* bit 3 */
#define WPUD4                WPUDbits.WPUD4                 /* bit 4 */
#define WPUD5                WPUDbits.WPUD5                 /* bit 5 */
#define WPUD6                WPUDbits.WPUD6                 /* bit 6 */
#define WPUD7                WPUDbits.WPUD7                 /* bit 7 */

#define WPUE0                WPUEbits.WPUE0                 /* bit 0 */
#define WPUE1                WPUEbits.WPUE1                 /* bit 1 */
#define WPUE2                WPUEbits.WPUE2                 /* bit 2 */
#define WPUE3                WPUEbits.WPUE3                 /* bit 3 */
#define WPUE4                WPUEbits.WPUE4                 /* bit 4 */
#define WPUE5                WPUEbits.WPUE5                 /* bit 5 */
#define WPUE6                WPUEbits.WPUE6                 /* bit 6 */
#define WPUE7                WPUEbits.WPUE7                 /* bit 7 */

#define WPUG5                WPUGbits.WPUG5                 /* bit 5 */
#endif /* NO_BIT_DEFINES */

#endif
