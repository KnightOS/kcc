//
// Register Declarations for Microchip 12LF1552 Processor
//
//
// This header file was automatically generated by:
//
// inc2h.pl
//
// Copyright (c) 2002, Kevin L. Pauba, All Rights Reserved
//
// SDCC is licensed under the GNU Public license (GPL) v2. Note that
// this license covers the code to the compiler and other executables,
// but explicitly does not cover any code or objects generated by sdcc.
//
// For pic device libraries and header files which are derived from
// Microchip header (.inc) and linker script (.lkr) files Microchip
// requires that "The header files should state that they are only to be
// used with authentic Microchip devices" which makes them incompatible
// with the GPL. Pic device libraries and header files are located at
// non-free/lib and non-free/include directories respectively.
// Sdcc should be run with the --use-non-free command line option in
// order to include non-free header files and libraries.
//
// See http://sdcc.sourceforge.net/ for the latest information on sdcc.
//
// 
#ifndef P12LF1552_H
#define P12LF1552_H

//
// Register addresses.
//
#define INDF0_ADDR      0x0000
#define INDF1_ADDR      0x0001
#define PCL_ADDR        0x0002
#define STATUS_ADDR     0x0003
#define FSR0_ADDR       0x0004
#define FSR0L_ADDR      0x0004
#define FSR0H_ADDR      0x0005
#define FSR1_ADDR       0x0006
#define FSR1L_ADDR      0x0006
#define FSR1H_ADDR      0x0007
#define BSR_ADDR        0x0008
#define WREG_ADDR       0x0009
#define PCLATH_ADDR     0x000A
#define INTCON_ADDR     0x000B
#define PORTA_ADDR      0x000C
#define PIR1_ADDR       0x0011
#define PIR2_ADDR       0x0012
#define TMR0_ADDR       0x0015
#define TRISA_ADDR      0x008C
#define PIE1_ADDR       0x0091
#define PIE2_ADDR       0x0092
#define OPTION_REG_ADDR 0x0095
#define PCON_ADDR       0x0096
#define WDTCON_ADDR     0x0097
#define OSCCON_ADDR     0x0099
#define OSCSTAT_ADDR    0x009A
#define ADRES_ADDR      0x009B
#define ADRESL_ADDR     0x009B
#define ADRESH_ADDR     0x009C
#define ADCON0_ADDR     0x009D
#define ADCON1_ADDR     0x009E
#define ADCON2_ADDR     0x009F
#define LATA_ADDR       0x010C
#define BORCON_ADDR     0x0116
#define FVRCON_ADDR     0x0117
#define APFCON_ADDR     0x011D
#define APFCON0_ADDR    0x011D
#define ANSELA_ADDR     0x018C
#define PMADR_ADDR      0x0191
#define PMADRL_ADDR     0x0191
#define PMADRH_ADDR     0x0192
#define PMDAT_ADDR      0x0193
#define PMDATL_ADDR     0x0193
#define PMDATH_ADDR     0x0194
#define PMCON1_ADDR     0x0195
#define PMCON2_ADDR     0x0196
#define WPUA_ADDR       0x020C
#define SSP1BUF_ADDR    0x0211
#define SSPBUF_ADDR     0x0211
#define SSP1ADD_ADDR    0x0212
#define SSPADD_ADDR     0x0212
#define SSP1MSK_ADDR    0x0213
#define SSPMSK_ADDR     0x0213
#define SSP1STAT_ADDR   0x0214
#define SSPSTAT_ADDR    0x0214
#define SSP1CON1_ADDR   0x0215
#define SSPCON_ADDR     0x0215
#define SSPCON1_ADDR    0x0215
#define SSP1CON2_ADDR   0x0216
#define SSPCON2_ADDR    0x0216
#define SSP1CON3_ADDR   0x0217
#define SSPCON3_ADDR    0x0217
#define IOCAP_ADDR      0x0391
#define IOCAN_ADDR      0x0392
#define IOCAF_ADDR      0x0393
#define AADCON0_ADDR    0x0711
#define AADCON1_ADDR    0x0712
#define AADCON2_ADDR    0x0713
#define AADCON3_ADDR    0x0714
#define AADSTAT_ADDR    0x0715
#define AADPRE_ADDR     0x0716
#define AADACQ_ADDR     0x0717
#define AADGRD_ADDR     0x0718
#define AADCAP_ADDR     0x0719
#define AADRES0_ADDR    0x071A
#define AADRES0L_ADDR   0x071A
#define AADRES0H_ADDR   0x071B
#define AADRES1_ADDR    0x071C
#define AADRES1L_ADDR   0x071C
#define AADRES1H_ADDR   0x071D
#define STATUS_SHAD_ADDR        0x0FE4
#define WREG_SHAD_ADDR  0x0FE5
#define BSR_SHAD_ADDR   0x0FE6
#define PCLATH_SHAD_ADDR        0x0FE7
#define FSR0L_SHAD_ADDR 0x0FE8
#define FSR0H_SHAD_ADDR 0x0FE9
#define FSR1L_SHAD_ADDR 0x0FEA
#define FSR1H_SHAD_ADDR 0x0FEB
#define STKPTR_ADDR     0x0FED
#define TOSL_ADDR       0x0FEE
#define TOSH_ADDR       0x0FEF

//
// Memory organization.
//



//         LIST

//==========================================================================
//  MPASM PIC12LF1552 processor include
//
//  (c) Copyright 1999-2012 Microchip Technology, All rights reserved
//==========================================================================

//         NOLIST

//==========================================================================
//  This header file defines configurations, registers, and other useful
//  bits of information for the PIC12LF1552 microcontroller.  These names
//  are taken to match the data sheets as closely as possible.
//
//  Note that the processor must be selected before this file is included.
//  The processor may be selected the following ways:
//
//       1. Command line switch:
//               C:\MPASM MYFILE.ASM /PIC12LF1552
//       2. LIST directive in the source file
//               LIST   P=PIC12LF1552
//       3. Processor Type entry in the MPASM full-screen interface
//       4. Setting the processor in the MPLAB Project Dialog
//==========================================================================

//==========================================================================
//
//       Verify Processor
//
//==========================================================================
//        IFNDEF __12LF1552
//            MESSG "Processor-header file mismatch.  Verify selected processor."
//         ENDIF



//==========================================================================
//
//       Register Definitions
//
//==========================================================================

#define W                    0x0000
#define F                    0x0001

//----- Register Files -----------------------------------------------------

//-----Bank0------------------
extern __sfr  __at (INDF0_ADDR)                   INDF0;
extern __sfr  __at (INDF1_ADDR)                   INDF1;
extern __sfr  __at (PCL_ADDR)                     PCL;
extern __sfr  __at (STATUS_ADDR)                  STATUS;
extern __sfr  __at (FSR0_ADDR)                    FSR0;
extern __sfr  __at (FSR0L_ADDR)                   FSR0L;
extern __sfr  __at (FSR0H_ADDR)                   FSR0H;
extern __sfr  __at (FSR1_ADDR)                    FSR1;
extern __sfr  __at (FSR1L_ADDR)                   FSR1L;
extern __sfr  __at (FSR1H_ADDR)                   FSR1H;
extern __sfr  __at (BSR_ADDR)                     BSR;
extern __sfr  __at (WREG_ADDR)                    WREG;
extern __sfr  __at (PCLATH_ADDR)                  PCLATH;
extern __sfr  __at (INTCON_ADDR)                  INTCON;
extern __sfr  __at (PORTA_ADDR)                   PORTA;
extern __sfr  __at (PIR1_ADDR)                    PIR1;
extern __sfr  __at (PIR2_ADDR)                    PIR2;
extern __sfr  __at (TMR0_ADDR)                    TMR0;

//-----Bank1------------------
extern __sfr  __at (TRISA_ADDR)                   TRISA;
extern __sfr  __at (PIE1_ADDR)                    PIE1;
extern __sfr  __at (PIE2_ADDR)                    PIE2;
extern __sfr  __at (OPTION_REG_ADDR)              OPTION_REG;
extern __sfr  __at (PCON_ADDR)                    PCON;
extern __sfr  __at (WDTCON_ADDR)                  WDTCON;
extern __sfr  __at (OSCCON_ADDR)                  OSCCON;
extern __sfr  __at (OSCSTAT_ADDR)                 OSCSTAT;
extern __sfr  __at (ADRES_ADDR)                   ADRES;
extern __sfr  __at (ADRESL_ADDR)                  ADRESL;
extern __sfr  __at (ADRESH_ADDR)                  ADRESH;
extern __sfr  __at (ADCON0_ADDR)                  ADCON0;
extern __sfr  __at (ADCON1_ADDR)                  ADCON1;
extern __sfr  __at (ADCON2_ADDR)                  ADCON2;

//-----Bank2------------------
extern __sfr  __at (LATA_ADDR)                    LATA;
extern __sfr  __at (BORCON_ADDR)                  BORCON;
extern __sfr  __at (FVRCON_ADDR)                  FVRCON;
extern __sfr  __at (APFCON_ADDR)                  APFCON;
extern __sfr  __at (APFCON0_ADDR)                 APFCON0;

//-----Bank3------------------
extern __sfr  __at (ANSELA_ADDR)                  ANSELA;
extern __sfr  __at (PMADR_ADDR)                   PMADR;
extern __sfr  __at (PMADRL_ADDR)                  PMADRL;
extern __sfr  __at (PMADRH_ADDR)                  PMADRH;
extern __sfr  __at (PMDAT_ADDR)                   PMDAT;
extern __sfr  __at (PMDATL_ADDR)                  PMDATL;
extern __sfr  __at (PMDATH_ADDR)                  PMDATH;
extern __sfr  __at (PMCON1_ADDR)                  PMCON1;
extern __sfr  __at (PMCON2_ADDR)                  PMCON2;

//-----Bank4------------------
extern __sfr  __at (WPUA_ADDR)                    WPUA;
extern __sfr  __at (SSP1BUF_ADDR)                 SSP1BUF;
extern __sfr  __at (SSPBUF_ADDR)                  SSPBUF;
extern __sfr  __at (SSP1ADD_ADDR)                 SSP1ADD;
extern __sfr  __at (SSPADD_ADDR)                  SSPADD;
extern __sfr  __at (SSP1MSK_ADDR)                 SSP1MSK;
extern __sfr  __at (SSPMSK_ADDR)                  SSPMSK;
extern __sfr  __at (SSP1STAT_ADDR)                SSP1STAT;
extern __sfr  __at (SSPSTAT_ADDR)                 SSPSTAT;
extern __sfr  __at (SSP1CON1_ADDR)                SSP1CON1;
extern __sfr  __at (SSPCON_ADDR)                  SSPCON;
extern __sfr  __at (SSPCON1_ADDR)                 SSPCON1;
extern __sfr  __at (SSP1CON2_ADDR)                SSP1CON2;
extern __sfr  __at (SSPCON2_ADDR)                 SSPCON2;
extern __sfr  __at (SSP1CON3_ADDR)                SSP1CON3;
extern __sfr  __at (SSPCON3_ADDR)                 SSPCON3;

//-----Bank7------------------
extern __sfr  __at (IOCAP_ADDR)                   IOCAP;
extern __sfr  __at (IOCAN_ADDR)                   IOCAN;
extern __sfr  __at (IOCAF_ADDR)                   IOCAF;

//-----Bank14------------------
extern __sfr  __at (AADCON0_ADDR)                 AADCON0;
extern __sfr  __at (AADCON1_ADDR)                 AADCON1;
extern __sfr  __at (AADCON2_ADDR)                 AADCON2;
extern __sfr  __at (AADCON3_ADDR)                 AADCON3;
extern __sfr  __at (AADSTAT_ADDR)                 AADSTAT;
extern __sfr  __at (AADPRE_ADDR)                  AADPRE;
extern __sfr  __at (AADACQ_ADDR)                  AADACQ;
extern __sfr  __at (AADGRD_ADDR)                  AADGRD;
extern __sfr  __at (AADCAP_ADDR)                  AADCAP;
extern __sfr  __at (AADRES0_ADDR)                 AADRES0;
extern __sfr  __at (AADRES0L_ADDR)                AADRES0L;
extern __sfr  __at (AADRES0H_ADDR)                AADRES0H;
extern __sfr  __at (AADRES1_ADDR)                 AADRES1;
extern __sfr  __at (AADRES1L_ADDR)                AADRES1L;
extern __sfr  __at (AADRES1H_ADDR)                AADRES1H;

//-----Bank31------------------
extern __sfr  __at (STATUS_SHAD_ADDR)             STATUS_SHAD;
extern __sfr  __at (WREG_SHAD_ADDR)               WREG_SHAD;
extern __sfr  __at (BSR_SHAD_ADDR)                BSR_SHAD;
extern __sfr  __at (PCLATH_SHAD_ADDR)             PCLATH_SHAD;
extern __sfr  __at (FSR0L_SHAD_ADDR)              FSR0L_SHAD;
extern __sfr  __at (FSR0H_SHAD_ADDR)              FSR0H_SHAD;
extern __sfr  __at (FSR1L_SHAD_ADDR)              FSR1L_SHAD;
extern __sfr  __at (FSR1H_SHAD_ADDR)              FSR1H_SHAD;
extern __sfr  __at (STKPTR_ADDR)                  STKPTR;
extern __sfr  __at (TOSL_ADDR)                    TOSL;
extern __sfr  __at (TOSH_ADDR)                    TOSH;

//----- STATUS Bits -----------------------------------------------------


//----- BSR Bits -----------------------------------------------------


//----- INTCON Bits -----------------------------------------------------



//----- PORTA Bits -----------------------------------------------------


//----- PIR1 Bits -----------------------------------------------------


//----- PIR2 Bits -----------------------------------------------------


//----- TRISA Bits -----------------------------------------------------


//----- PIE1 Bits -----------------------------------------------------


//----- PIE2 Bits -----------------------------------------------------


//----- OPTION_REG Bits -----------------------------------------------------



//----- PCON Bits -----------------------------------------------------


//----- WDTCON Bits -----------------------------------------------------



//----- OSCCON Bits -----------------------------------------------------



//----- OSCSTAT Bits -----------------------------------------------------


//----- ADCON0 Bits -----------------------------------------------------




//----- ADCON1 Bits -----------------------------------------------------



//----- ADCON2 Bits -----------------------------------------------------



//----- LATA Bits -----------------------------------------------------


//----- BORCON Bits -----------------------------------------------------


//----- FVRCON Bits -----------------------------------------------------



//----- APFCON Bits -----------------------------------------------------



//----- APFCON0 Bits -----------------------------------------------------



//----- ANSELA Bits -----------------------------------------------------



//----- PMCON1 Bits -----------------------------------------------------


//----- WPUA Bits -----------------------------------------------------



//----- SSP1STAT Bits -----------------------------------------------------


//----- SSPSTAT Bits -----------------------------------------------------


//----- SSP1CON1 Bits -----------------------------------------------------



//----- SSPCON Bits -----------------------------------------------------



//----- SSPCON1 Bits -----------------------------------------------------



//----- SSP1CON2 Bits -----------------------------------------------------


//----- SSPCON2 Bits -----------------------------------------------------


//----- SSP1CON3 Bits -----------------------------------------------------


//----- SSPCON3 Bits -----------------------------------------------------


//----- IOCAP Bits -----------------------------------------------------



//----- IOCAN Bits -----------------------------------------------------



//----- IOCAF Bits -----------------------------------------------------



//----- AADCON0 Bits -----------------------------------------------------



//----- AADCON1 Bits -----------------------------------------------------



//----- AADCON2 Bits -----------------------------------------------------


//----- AADCON3 Bits -----------------------------------------------------


//----- AADSTAT Bits -----------------------------------------------------



//----- AADPRE Bits -----------------------------------------------------


//----- AADACQ Bits -----------------------------------------------------


//----- AADGRD Bits -----------------------------------------------------


//----- AADCAP Bits -----------------------------------------------------


//----- STATUS_SHAD Bits -----------------------------------------------------



//==========================================================================
//
//       RAM Definitions
//
//==========================================================================
//        __MAXRAM  H'0FFF'
//        __BADRAM  H'000D'-H'0010'
//        __BADRAM  H'0013'-H'0014'
//        __BADRAM  H'0016'-H'001F'
//        __BADRAM  H'008D'-H'0090'
//        __BADRAM  H'0093'-H'0094'
//        __BADRAM  H'0098'
//        __BADRAM  H'010D'-H'0115'
//        __BADRAM  H'0118'-H'011C'
//        __BADRAM  H'011E'-H'011F'
//        __BADRAM  H'018D'-H'0190'
//        __BADRAM  H'0197'-H'019F'
//        __BADRAM  H'01A0'-H'01EF'
//        __BADRAM  H'020D'-H'0210'
//        __BADRAM  H'0218'-H'021F'
//        __BADRAM  H'0220'-H'026F'
//        __BADRAM  H'028C'-H'029F'
//        __BADRAM  H'02A0'-H'02EF'
//        __BADRAM  H'030C'-H'031F'
//        __BADRAM  H'0320'-H'036F'
//        __BADRAM  H'038C'-H'0390'
//        __BADRAM  H'0394'-H'039F'
//        __BADRAM  H'03A0'-H'03EF'
//        __BADRAM  H'040C'-H'041F'
//        __BADRAM  H'0420'-H'046F'
//        __BADRAM  H'048C'-H'049F'
//        __BADRAM  H'04A0'-H'04EF'
//        __BADRAM  H'050C'-H'051F'
//        __BADRAM  H'0520'-H'056F'
//        __BADRAM  H'058C'-H'059F'
//        __BADRAM  H'05A0'-H'05EF'
//        __BADRAM  H'060C'-H'061F'
//        __BADRAM  H'0620'-H'066F'
//        __BADRAM  H'068C'-H'069F'
//        __BADRAM  H'06A0'-H'06EF'
//        __BADRAM  H'070C'-H'0710'
//        __BADRAM  H'071E'-H'071F'
//        __BADRAM  H'0720'-H'076F'
//        __BADRAM  H'078C'-H'079F'
//        __BADRAM  H'07A0'-H'07EF'
//        __BADRAM  H'080C'-H'081F'
//        __BADRAM  H'0820'-H'086F'
//        __BADRAM  H'088C'-H'089F'
//        __BADRAM  H'08A0'-H'08EF'
//        __BADRAM  H'090C'-H'091F'
//        __BADRAM  H'0920'-H'096F'
//        __BADRAM  H'098C'-H'099F'
//        __BADRAM  H'09A0'-H'09EF'
//        __BADRAM  H'0A0C'-H'0A1F'
//        __BADRAM  H'0A20'-H'0A6F'
//        __BADRAM  H'0A8C'-H'0A9F'
//        __BADRAM  H'0AA0'-H'0AEF'
//        __BADRAM  H'0B0C'-H'0B1F'
//        __BADRAM  H'0B20'-H'0B6F'
//        __BADRAM  H'0B8C'-H'0B9F'
//        __BADRAM  H'0BA0'-H'0BEF'
//        __BADRAM  H'0C0C'-H'0C1F'
//        __BADRAM  H'0C20'-H'0C6F'
//        __BADRAM  H'0C8C'-H'0C9F'
//        __BADRAM  H'0CA0'-H'0CEF'
//        __BADRAM  H'0D0C'-H'0D1F'
//        __BADRAM  H'0D20'-H'0D6F'
//        __BADRAM  H'0D8C'-H'0D9F'
//        __BADRAM  H'0DA0'-H'0DEF'
//        __BADRAM  H'0E0C'-H'0E1F'
//        __BADRAM  H'0E20'-H'0E6F'
//        __BADRAM  H'0E8C'-H'0E9F'
//        __BADRAM  H'0EA0'-H'0EEF'
//        __BADRAM  H'0F0C'-H'0F1F'
//        __BADRAM  H'0F20'-H'0F6F'
//        __BADRAM  H'0F8C'-H'0FE3'
//        __BADRAM  H'0FEC'

//==========================================================================
//
//       Configuration Bits
//
//   NAME            Address
//   CONFIG1           8007h
//   CONFIG2           8008h
//
//==========================================================================

// The following is an assignment of address values for all of the
// configuration registers for the purpose of table reads
#define _CONFIG1             0x8007
#define _CONFIG2             0x8008

//----- CONFIG1 Options --------------------------------------------------
#define _FOSC_INTOSC         0xFFFC    // INTOSC oscillator: I/O function on CLKIN pin
#define _FOSC_ECL            0xFFFD    // ECL, External Clock, Low Power Mode (0-0.5 MHz): device clock supplied to CLKIN pin
#define _FOSC_ECM            0xFFFE    // ECM, External Clock, Medium Power Mode (0.5-4 MHz): device clock supplied to CLKIN pin
#define _FOSC_ECH            0xFFFF    // ECH, External Clock, High Power Mode (4-20 MHz): device clock supplied to CLKIN pin

#define _WDTE_OFF            0xFFE7    // WDT disabled
#define _WDTE_SWDTEN         0xFFEF    // WDT controlled by the SWDTEN bit in the WDTCON register
#define _WDTE_NSLEEP         0xFFF7    // WDT enabled while running and disabled in Sleep
#define _WDTE_ON             0xFFFF    // WDT enabled

#define _PWRTE_ON            0xFFDF    // PWRT enabled
#define _PWRTE_OFF           0xFFFF    // PWRT disabled

#define _MCLRE_OFF           0xFFBF    // MCLR/VPP pin function is digital input
#define _MCLRE_ON            0xFFFF    // MCLR/VPP pin function is MCLR

#define _CP_ON               0xFF7F    // Program memory code protection is enabled
#define _CP_OFF              0xFFFF    // Program memory code protection is disabled

#define _BOREN_OFF           0xF9FF    // Brown-out Reset disabled
#define _BOREN_SBODEN        0xFBFF    // Brown-out Reset controlled by the SBOREN bit in the BORCON register
#define _BOREN_NSLEEP        0xFDFF    // Brown-out Reset enabled while running and disabled in Sleep
#define _BOREN_ON            0xFFFF    // Brown-out Reset enabled

#define _CLKOUTEN_ON         0xF7FF    // CLKOUT function is enabled on the CLKOUT pin
#define _CLKOUTEN_OFF        0xFFFF    // CLKOUT function is disabled. I/O or oscillator function on the CLKOUT pin

//----- CONFIG2 Options --------------------------------------------------
#define _WRT_ALL             0xFFFC    // 000h to FFFh write protected, no addresses may be modified by PMCON control
#define _WRT_HALF            0xFFFD    // 000h to 7FFh write protected, 800h to FFFh may be modified by PMCON control
#define _WRT_BOOT            0xFFFE    // 000h to 1FFh write protected, 200h to FFFh may be modified by PMCON control
#define _WRT_OFF             0xFFFF    // Write protection off

#define _STVREN_OFF          0xFDFF    // Stack Overflow or Underflow will not cause a Reset
#define _STVREN_ON           0xFFFF    // Stack Overflow or Underflow will cause a Reset

#define _BORV_HI             0xFBFF    // Brown-out Reset Voltage (Vbor), high trip point selected.
#define _BORV_LO             0xFFFF    // Brown-out Reset Voltage (Vbor), low trip point selected.
#define _BORV_19             0xFFFF    // Brown-out Reset Voltage (Vbor), low trip point selected.

#define _LPBOR_ON            0xF7FF    // Low Power BOR is enabled
#define _LPBOR_OFF           0xFFFF    // Low Power BOR is disabled

#define _LVP_OFF             0xDFFF    // High-voltage on MCLR/VPP must be used for programming
#define _LVP_ON              0xFFFF    // Low-voltage programming enabled

//----- DEVID Equates --------------------------------------------------
#define _DEVID1              0x8006

//----- IDLOC Equates --------------------------------------------------
#define _IDLOC0              0x8000
#define _IDLOC1              0x8001
#define _IDLOC2              0x8002
#define _IDLOC3              0x8003

//         LIST

// ----- AADACQ bits --------------------
typedef union {
  struct {
    unsigned char ADACQ0:1;
    unsigned char ADACQ1:1;
    unsigned char ADACQ2:1;
    unsigned char ADACQ3:1;
    unsigned char ADACQ4:1;
    unsigned char ADACQ5:1;
    unsigned char ADACQ6:1;
    unsigned char :1;
  };
} __AADACQbits_t;
extern volatile __AADACQbits_t __at(AADACQ_ADDR) AADACQbits;

// ----- AADCAP bits --------------------
typedef union {
  struct {
    unsigned char ADDCAP0:1;
    unsigned char ADDCAP1:1;
    unsigned char ADDCAP2:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __AADCAPbits_t;
extern volatile __AADCAPbits_t __at(AADCAP_ADDR) AADCAPbits;

// ----- AADCON0 bits --------------------
typedef union {
  struct {
    unsigned char ADON:1;
    unsigned char GO_NOT_DONE:1;
    unsigned char CHS0:1;
    unsigned char CHS1:1;
    unsigned char CHS2:1;
    unsigned char CHS3:1;
    unsigned char CHS4:1;
    unsigned char :1;
  };
} __AADCON0bits_t;
extern volatile __AADCON0bits_t __at(AADCON0_ADDR) AADCON0bits;

// ----- AADCON1 bits --------------------
typedef union {
  struct {
    unsigned char ADPREF0:1;
    unsigned char ADPREF1:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char ADCS0:1;
    unsigned char ADCS1:1;
    unsigned char ADCS2:1;
    unsigned char ADFM:1;
  };
} __AADCON1bits_t;
extern volatile __AADCON1bits_t __at(AADCON1_ADDR) AADCON1bits;

// ----- AADCON2 bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char TRIGSEL0:1;
    unsigned char TRIGSEL1:1;
    unsigned char TRIGSEL2:1;
    unsigned char :1;
  };
} __AADCON2bits_t;
extern volatile __AADCON2bits_t __at(AADCON2_ADDR) AADCON2bits;

// ----- AADCON3 bits --------------------
typedef union {
  struct {
    unsigned char ADDSEN:1;
    unsigned char ADIPEN:1;
    unsigned char :1;
    unsigned char ADOOEN:1;
    unsigned char ADOEN:1;
    unsigned char :1;
    unsigned char ADIPPOL:1;
    unsigned char ADEPPOL:1;
  };
} __AADCON3bits_t;
extern volatile __AADCON3bits_t __at(AADCON3_ADDR) AADCON3bits;

// ----- AADGRD bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char GRDPOL:1;
    unsigned char GRDAOE:1;
    unsigned char GRDBOE:1;
  };
} __AADGRDbits_t;
extern volatile __AADGRDbits_t __at(AADGRD_ADDR) AADGRDbits;

// ----- AADPRE bits --------------------
typedef union {
  struct {
    unsigned char ADPRE0:1;
    unsigned char ADPRE1:1;
    unsigned char ADPRE2:1;
    unsigned char ADPRE3:1;
    unsigned char ADPRE4:1;
    unsigned char ADPRE5:1;
    unsigned char ADPRE6:1;
    unsigned char :1;
  };
} __AADPREbits_t;
extern volatile __AADPREbits_t __at(AADPRE_ADDR) AADPREbits;

// ----- AADSTAT bits --------------------
typedef union {
  struct {
    unsigned char ADSTG0:1;
    unsigned char ADSTG1:1;
    unsigned char ADCONV:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __AADSTATbits_t;
extern volatile __AADSTATbits_t __at(AADSTAT_ADDR) AADSTATbits;

// ----- ADCON0 bits --------------------
typedef union {
  struct {
    unsigned char ADON:1;
    unsigned char GO_NOT_DONE:1;
    unsigned char CHS0:1;
    unsigned char CHS1:1;
    unsigned char CHS2:1;
    unsigned char CHS3:1;
    unsigned char CHS4:1;
    unsigned char :1;
  };
  struct {
    unsigned char :1;
    unsigned char ADGO:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
  struct {
    unsigned char :1;
    unsigned char GO:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __ADCON0bits_t;
extern volatile __ADCON0bits_t __at(ADCON0_ADDR) ADCON0bits;

// ----- ADCON1 bits --------------------
typedef union {
  struct {
    unsigned char ADPREF0:1;
    unsigned char ADPREF1:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char ADCS0:1;
    unsigned char ADCS1:1;
    unsigned char ADCS2:1;
    unsigned char ADFM:1;
  };
} __ADCON1bits_t;
extern volatile __ADCON1bits_t __at(ADCON1_ADDR) ADCON1bits;

// ----- ADCON2 bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char TRIGSEL0:1;
    unsigned char TRIGSEL1:1;
    unsigned char TRIGSEL2:1;
    unsigned char :1;
  };
} __ADCON2bits_t;
extern volatile __ADCON2bits_t __at(ADCON2_ADDR) ADCON2bits;

// ----- ANSELA bits --------------------
typedef union {
  struct {
    unsigned char ANSA0:1;
    unsigned char ANSA1:1;
    unsigned char ANSA2:1;
    unsigned char :1;
    unsigned char ANSA4:1;
    unsigned char ANSA5:1;
    unsigned char :1;
    unsigned char :1;
  };
} __ANSELAbits_t;
extern volatile __ANSELAbits_t __at(ANSELA_ADDR) ANSELAbits;

// ----- APFCON bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char SDSEL:1;
    unsigned char SSSEL:1;
    unsigned char SDOSEL:1;
    unsigned char :1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char SS1SEL:1;
    unsigned char SDO1SEL:1;
    unsigned char :1;
  };
} __APFCONbits_t;
extern volatile __APFCONbits_t __at(APFCON_ADDR) APFCONbits;

// ----- APFCON0 bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char SDSEL:1;
    unsigned char SSSEL:1;
    unsigned char SDOSEL:1;
    unsigned char :1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char SS1SEL:1;
    unsigned char SDO1SEL:1;
    unsigned char :1;
  };
} __APFCON0bits_t;
extern volatile __APFCON0bits_t __at(APFCON0_ADDR) APFCON0bits;

// ----- BORCON bits --------------------
typedef union {
  struct {
    unsigned char BORRDY:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char BORFS:1;
    unsigned char SBOREN:1;
  };
} __BORCONbits_t;
extern volatile __BORCONbits_t __at(BORCON_ADDR) BORCONbits;

// ----- BSR bits --------------------
typedef union {
  struct {
    unsigned char BSR0:1;
    unsigned char BSR1:1;
    unsigned char BSR2:1;
    unsigned char BSR3:1;
    unsigned char BSR4:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __BSRbits_t;
extern volatile __BSRbits_t __at(BSR_ADDR) BSRbits;

// ----- FVRCON bits --------------------
typedef union {
  struct {
    unsigned char ADFVR0:1;
    unsigned char ADFVR1:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char TSRNG:1;
    unsigned char TSEN:1;
    unsigned char FVRRDY:1;
    unsigned char FVREN:1;
  };
} __FVRCONbits_t;
extern volatile __FVRCONbits_t __at(FVRCON_ADDR) FVRCONbits;

// ----- INTCON bits --------------------
typedef union {
  struct {
    unsigned char IOCIF:1;
    unsigned char INTF:1;
    unsigned char TMR0IF:1;
    unsigned char IOCIE:1;
    unsigned char INTE:1;
    unsigned char TMR0IE:1;
    unsigned char PEIE:1;
    unsigned char GIE:1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char T0IF:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char T0IE:1;
    unsigned char :1;
    unsigned char :1;
  };
} __INTCONbits_t;
extern volatile __INTCONbits_t __at(INTCON_ADDR) INTCONbits;

// ----- IOCAF bits --------------------
typedef union {
  struct {
    unsigned char IOCAF0:1;
    unsigned char IOCAF1:1;
    unsigned char IOCAF2:1;
    unsigned char IOCAF3:1;
    unsigned char IOCAF4:1;
    unsigned char IOCAF5:1;
    unsigned char :1;
    unsigned char :1;
  };
} __IOCAFbits_t;
extern volatile __IOCAFbits_t __at(IOCAF_ADDR) IOCAFbits;

// ----- IOCAN bits --------------------
typedef union {
  struct {
    unsigned char IOCAN0:1;
    unsigned char IOCAN1:1;
    unsigned char IOCAN2:1;
    unsigned char IOCAN3:1;
    unsigned char IOCAN4:1;
    unsigned char IOCAN5:1;
    unsigned char :1;
    unsigned char :1;
  };
} __IOCANbits_t;
extern volatile __IOCANbits_t __at(IOCAN_ADDR) IOCANbits;

// ----- IOCAP bits --------------------
typedef union {
  struct {
    unsigned char IOCAP0:1;
    unsigned char IOCAP1:1;
    unsigned char IOCAP2:1;
    unsigned char IOCAP3:1;
    unsigned char IOCAP4:1;
    unsigned char IOCAP5:1;
    unsigned char :1;
    unsigned char :1;
  };
} __IOCAPbits_t;
extern volatile __IOCAPbits_t __at(IOCAP_ADDR) IOCAPbits;

// ----- LATA bits --------------------
typedef union {
  struct {
    unsigned char LATA0:1;
    unsigned char LATA1:1;
    unsigned char LATA2:1;
    unsigned char :1;
    unsigned char LATA4:1;
    unsigned char LATA5:1;
    unsigned char :1;
    unsigned char :1;
  };
} __LATAbits_t;
extern volatile __LATAbits_t __at(LATA_ADDR) LATAbits;

// ----- OPTION_REG bits --------------------
typedef union {
  struct {
    unsigned char PS0:1;
    unsigned char PS1:1;
    unsigned char PS2:1;
    unsigned char PSA:1;
    unsigned char TMR0SE:1;
    unsigned char TMR0CS:1;
    unsigned char INTEDG:1;
    unsigned char NOT_WPUEN:1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char T0SE:1;
    unsigned char T0CS:1;
    unsigned char :1;
    unsigned char :1;
  };
} __OPTION_REGbits_t;
extern volatile __OPTION_REGbits_t __at(OPTION_REG_ADDR) OPTION_REGbits;

// ----- OSCCON bits --------------------
typedef union {
  struct {
    unsigned char SCS0:1;
    unsigned char SCS1:1;
    unsigned char :1;
    unsigned char IRCF0:1;
    unsigned char IRCF1:1;
    unsigned char IRCF2:1;
    unsigned char IRCF3:1;
    unsigned char SPLLEN:1;
  };
} __OSCCONbits_t;
extern volatile __OSCCONbits_t __at(OSCCON_ADDR) OSCCONbits;

// ----- OSCSTAT bits --------------------
typedef union {
  struct {
    unsigned char HFIOFS:1;
    unsigned char LFIOFR:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char HFIOFR:1;
    unsigned char OSTS:1;
    unsigned char PLLR:1;
    unsigned char :1;
  };
} __OSCSTATbits_t;
extern volatile __OSCSTATbits_t __at(OSCSTAT_ADDR) OSCSTATbits;

// ----- PCON bits --------------------
typedef union {
  struct {
    unsigned char NOT_BOR:1;
    unsigned char NOT_POR:1;
    unsigned char NOT_RI:1;
    unsigned char NOT_RMCLR:1;
    unsigned char NOT_RWDT:1;
    unsigned char :1;
    unsigned char STKUNF:1;
    unsigned char STKOVF:1;
  };
} __PCONbits_t;
extern volatile __PCONbits_t __at(PCON_ADDR) PCONbits;

// ----- PIE1 bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char SSP1IE:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char ADIE:1;
    unsigned char :1;
  };
} __PIE1bits_t;
extern volatile __PIE1bits_t __at(PIE1_ADDR) PIE1bits;

// ----- PIE2 bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char BCL1IE:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __PIE2bits_t;
extern volatile __PIE2bits_t __at(PIE2_ADDR) PIE2bits;

// ----- PIR1 bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char SSP1IF:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char ADIF:1;
    unsigned char :1;
  };
} __PIR1bits_t;
extern volatile __PIR1bits_t __at(PIR1_ADDR) PIR1bits;

// ----- PIR2 bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char BCL1IF:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __PIR2bits_t;
extern volatile __PIR2bits_t __at(PIR2_ADDR) PIR2bits;

// ----- PMCON1 bits --------------------
typedef union {
  struct {
    unsigned char RD:1;
    unsigned char WR:1;
    unsigned char WREN:1;
    unsigned char WRERR:1;
    unsigned char FREE:1;
    unsigned char LWLO:1;
    unsigned char CFGS:1;
    unsigned char :1;
  };
} __PMCON1bits_t;
extern volatile __PMCON1bits_t __at(PMCON1_ADDR) PMCON1bits;

// ----- PORTA bits --------------------
typedef union {
  struct {
    unsigned char RA0:1;
    unsigned char RA1:1;
    unsigned char RA2:1;
    unsigned char RA3:1;
    unsigned char RA4:1;
    unsigned char RA5:1;
    unsigned char :1;
    unsigned char :1;
  };
} __PORTAbits_t;
extern volatile __PORTAbits_t __at(PORTA_ADDR) PORTAbits;

// ----- SSP1CON1 bits --------------------
typedef union {
  struct {
    unsigned char SSPM0:1;
    unsigned char SSPM1:1;
    unsigned char SSPM2:1;
    unsigned char SSPM3:1;
    unsigned char CKP:1;
    unsigned char SSPEN:1;
    unsigned char SSPOV:1;
    unsigned char WCOL:1;
  };
} __SSP1CON1bits_t;
extern volatile __SSP1CON1bits_t __at(SSP1CON1_ADDR) SSP1CON1bits;

// ----- SSP1CON2 bits --------------------
typedef union {
  struct {
    unsigned char SEN:1;
    unsigned char RSEN:1;
    unsigned char PEN:1;
    unsigned char RCEN:1;
    unsigned char ACKEN:1;
    unsigned char ACKDT:1;
    unsigned char ACKSTAT:1;
    unsigned char GCEN:1;
  };
} __SSP1CON2bits_t;
extern volatile __SSP1CON2bits_t __at(SSP1CON2_ADDR) SSP1CON2bits;

// ----- SSP1CON3 bits --------------------
typedef union {
  struct {
    unsigned char DHEN:1;
    unsigned char AHEN:1;
    unsigned char SBCDE:1;
    unsigned char SDAHT:1;
    unsigned char BOEN:1;
    unsigned char SCIE:1;
    unsigned char PCIE:1;
    unsigned char ACKTIM:1;
  };
} __SSP1CON3bits_t;
extern volatile __SSP1CON3bits_t __at(SSP1CON3_ADDR) SSP1CON3bits;

// ----- SSP1STAT bits --------------------
typedef union {
  struct {
    unsigned char BF:1;
    unsigned char UA:1;
    unsigned char R_NOT_W:1;
    unsigned char S:1;
    unsigned char P:1;
    unsigned char D_NOT_A:1;
    unsigned char CKE:1;
    unsigned char SMP:1;
  };
} __SSP1STATbits_t;
extern volatile __SSP1STATbits_t __at(SSP1STAT_ADDR) SSP1STATbits;

// ----- SSPCON bits --------------------
typedef union {
  struct {
    unsigned char SSPM0:1;
    unsigned char SSPM1:1;
    unsigned char SSPM2:1;
    unsigned char SSPM3:1;
    unsigned char CKP:1;
    unsigned char SSPEN:1;
    unsigned char SSPOV:1;
    unsigned char WCOL:1;
  };
} __SSPCONbits_t;
extern volatile __SSPCONbits_t __at(SSPCON_ADDR) SSPCONbits;

// ----- SSPCON1 bits --------------------
typedef union {
  struct {
    unsigned char SSPM0:1;
    unsigned char SSPM1:1;
    unsigned char SSPM2:1;
    unsigned char SSPM3:1;
    unsigned char CKP:1;
    unsigned char SSPEN:1;
    unsigned char SSPOV:1;
    unsigned char WCOL:1;
  };
} __SSPCON1bits_t;
extern volatile __SSPCON1bits_t __at(SSPCON1_ADDR) SSPCON1bits;

// ----- SSPCON2 bits --------------------
typedef union {
  struct {
    unsigned char SEN:1;
    unsigned char RSEN:1;
    unsigned char PEN:1;
    unsigned char RCEN:1;
    unsigned char ACKEN:1;
    unsigned char ACKDT:1;
    unsigned char ACKSTAT:1;
    unsigned char GCEN:1;
  };
} __SSPCON2bits_t;
extern volatile __SSPCON2bits_t __at(SSPCON2_ADDR) SSPCON2bits;

// ----- SSPCON3 bits --------------------
typedef union {
  struct {
    unsigned char DHEN:1;
    unsigned char AHEN:1;
    unsigned char SBCDE:1;
    unsigned char SDAHT:1;
    unsigned char BOEN:1;
    unsigned char SCIE:1;
    unsigned char PCIE:1;
    unsigned char ACKTIM:1;
  };
} __SSPCON3bits_t;
extern volatile __SSPCON3bits_t __at(SSPCON3_ADDR) SSPCON3bits;

// ----- SSPSTAT bits --------------------
typedef union {
  struct {
    unsigned char BF:1;
    unsigned char UA:1;
    unsigned char R_NOT_W:1;
    unsigned char S:1;
    unsigned char P:1;
    unsigned char D_NOT_A:1;
    unsigned char CKE:1;
    unsigned char SMP:1;
  };
} __SSPSTATbits_t;
extern volatile __SSPSTATbits_t __at(SSPSTAT_ADDR) SSPSTATbits;

// ----- STATUS bits --------------------
typedef union {
  struct {
    unsigned char C:1;
    unsigned char DC:1;
    unsigned char Z:1;
    unsigned char NOT_PD:1;
    unsigned char NOT_TO:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __STATUSbits_t;
extern volatile __STATUSbits_t __at(STATUS_ADDR) STATUSbits;

// ----- STATUS_SHAD bits --------------------
typedef union {
  struct {
    unsigned char C_SHAD:1;
    unsigned char DC_SHAD:1;
    unsigned char Z_SHAD:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __STATUS_SHADbits_t;
extern volatile __STATUS_SHADbits_t __at(STATUS_SHAD_ADDR) STATUS_SHADbits;

// ----- TRISA bits --------------------
typedef union {
  struct {
    unsigned char TRISA0:1;
    unsigned char TRISA1:1;
    unsigned char TRISA2:1;
    unsigned char TRISA3:1;
    unsigned char TRISA4:1;
    unsigned char TRISA5:1;
    unsigned char :1;
    unsigned char :1;
  };
} __TRISAbits_t;
extern volatile __TRISAbits_t __at(TRISA_ADDR) TRISAbits;

// ----- WDTCON bits --------------------
typedef union {
  struct {
    unsigned char SWDTEN:1;
    unsigned char WDTPS0:1;
    unsigned char WDTPS1:1;
    unsigned char WDTPS2:1;
    unsigned char WDTPS3:1;
    unsigned char WDTPS4:1;
    unsigned char :1;
    unsigned char :1;
  };
} __WDTCONbits_t;
extern volatile __WDTCONbits_t __at(WDTCON_ADDR) WDTCONbits;

// ----- WPUA bits --------------------
typedef union {
  struct {
    unsigned char WPUA0:1;
    unsigned char WPUA1:1;
    unsigned char WPUA2:1;
    unsigned char WPUA3:1;
    unsigned char WPUA4:1;
    unsigned char WPUA5:1;
    unsigned char :1;
    unsigned char :1;
  };
} __WPUAbits_t;
extern volatile __WPUAbits_t __at(WPUA_ADDR) WPUAbits;


#ifndef NO_BIT_DEFINES

#define ADACQ0               AADACQbits.ADACQ0              /* bit 0 */
#define ADACQ1               AADACQbits.ADACQ1              /* bit 1 */
#define ADACQ2               AADACQbits.ADACQ2              /* bit 2 */
#define ADACQ3               AADACQbits.ADACQ3              /* bit 3 */
#define ADACQ4               AADACQbits.ADACQ4              /* bit 4 */
#define ADACQ5               AADACQbits.ADACQ5              /* bit 5 */
#define ADACQ6               AADACQbits.ADACQ6              /* bit 6 */

#define ADDCAP0              AADCAPbits.ADDCAP0             /* bit 0 */
#define ADDCAP1              AADCAPbits.ADDCAP1             /* bit 1 */
#define ADDCAP2              AADCAPbits.ADDCAP2             /* bit 2 */

#define ADON                 AADCON0bits.ADON               /* bit 0, shadows bit in ADCON0bits */
#define GO_NOT_DONE          AADCON0bits.GO_NOT_DONE        /* bit 1, shadows bit in ADCON0bits */
#define CHS0                 AADCON0bits.CHS0               /* bit 2, shadows bit in ADCON0bits */
#define CHS1                 AADCON0bits.CHS1               /* bit 3, shadows bit in ADCON0bits */
#define CHS2                 AADCON0bits.CHS2               /* bit 4, shadows bit in ADCON0bits */
#define CHS3                 AADCON0bits.CHS3               /* bit 5, shadows bit in ADCON0bits */
#define CHS4                 AADCON0bits.CHS4               /* bit 6, shadows bit in ADCON0bits */

#define ADPREF0              AADCON1bits.ADPREF0            /* bit 0, shadows bit in ADCON1bits */
#define ADPREF1              AADCON1bits.ADPREF1            /* bit 1, shadows bit in ADCON1bits */
#define ADCS0                AADCON1bits.ADCS0              /* bit 4, shadows bit in ADCON1bits */
#define ADCS1                AADCON1bits.ADCS1              /* bit 5, shadows bit in ADCON1bits */
#define ADCS2                AADCON1bits.ADCS2              /* bit 6, shadows bit in ADCON1bits */
#define ADFM                 AADCON1bits.ADFM               /* bit 7, shadows bit in ADCON1bits */

#define TRIGSEL0             AADCON2bits.TRIGSEL0           /* bit 4, shadows bit in ADCON2bits */
#define TRIGSEL1             AADCON2bits.TRIGSEL1           /* bit 5, shadows bit in ADCON2bits */
#define TRIGSEL2             AADCON2bits.TRIGSEL2           /* bit 6, shadows bit in ADCON2bits */

#define ADDSEN               AADCON3bits.ADDSEN             /* bit 0 */
#define ADIPEN               AADCON3bits.ADIPEN             /* bit 1 */
#define ADOOEN               AADCON3bits.ADOOEN             /* bit 3 */
#define ADOEN                AADCON3bits.ADOEN              /* bit 4 */
#define ADIPPOL              AADCON3bits.ADIPPOL            /* bit 6 */
#define ADEPPOL              AADCON3bits.ADEPPOL            /* bit 7 */

#define GRDPOL               AADGRDbits.GRDPOL              /* bit 5 */
#define GRDAOE               AADGRDbits.GRDAOE              /* bit 6 */
#define GRDBOE               AADGRDbits.GRDBOE              /* bit 7 */

#define ADPRE0               AADPREbits.ADPRE0              /* bit 0 */
#define ADPRE1               AADPREbits.ADPRE1              /* bit 1 */
#define ADPRE2               AADPREbits.ADPRE2              /* bit 2 */
#define ADPRE3               AADPREbits.ADPRE3              /* bit 3 */
#define ADPRE4               AADPREbits.ADPRE4              /* bit 4 */
#define ADPRE5               AADPREbits.ADPRE5              /* bit 5 */
#define ADPRE6               AADPREbits.ADPRE6              /* bit 6 */

#define ADSTG0               AADSTATbits.ADSTG0             /* bit 0 */
#define ADSTG1               AADSTATbits.ADSTG1             /* bit 1 */
#define ADCONV               AADSTATbits.ADCONV             /* bit 2 */

#define ADGO                 ADCON0bits.ADGO                /* bit 1 */
#define GO                   ADCON0bits.GO                  /* bit 1 */

#define ANSA0                ANSELAbits.ANSA0               /* bit 0 */
#define ANSA1                ANSELAbits.ANSA1               /* bit 1 */
#define ANSA2                ANSELAbits.ANSA2               /* bit 2 */
#define ANSA4                ANSELAbits.ANSA4               /* bit 4 */
#define ANSA5                ANSELAbits.ANSA5               /* bit 5 */

#define SDSEL                APFCONbits.SDSEL               /* bit 4, shadows bit in APFCON0bits */
#define SS1SEL               APFCONbits.SS1SEL              /* bit 5, shadows bit in APFCON0bits */
#define SSSEL                APFCONbits.SSSEL               /* bit 5, shadows bit in APFCON0bits */
#define SDO1SEL              APFCONbits.SDO1SEL             /* bit 6, shadows bit in APFCON0bits */
#define SDOSEL               APFCONbits.SDOSEL              /* bit 6, shadows bit in APFCON0bits */

#define BORRDY               BORCONbits.BORRDY              /* bit 0 */
#define BORFS                BORCONbits.BORFS               /* bit 6 */
#define SBOREN               BORCONbits.SBOREN              /* bit 7 */

#define BSR0                 BSRbits.BSR0                   /* bit 0 */
#define BSR1                 BSRbits.BSR1                   /* bit 1 */
#define BSR2                 BSRbits.BSR2                   /* bit 2 */
#define BSR3                 BSRbits.BSR3                   /* bit 3 */
#define BSR4                 BSRbits.BSR4                   /* bit 4 */

#define ADFVR0               FVRCONbits.ADFVR0              /* bit 0 */
#define ADFVR1               FVRCONbits.ADFVR1              /* bit 1 */
#define TSRNG                FVRCONbits.TSRNG               /* bit 4 */
#define TSEN                 FVRCONbits.TSEN                /* bit 5 */
#define FVRRDY               FVRCONbits.FVRRDY              /* bit 6 */
#define FVREN                FVRCONbits.FVREN               /* bit 7 */

#define IOCIF                INTCONbits.IOCIF               /* bit 0 */
#define INTF                 INTCONbits.INTF                /* bit 1 */
#define T0IF                 INTCONbits.T0IF                /* bit 2 */
#define TMR0IF               INTCONbits.TMR0IF              /* bit 2 */
#define IOCIE                INTCONbits.IOCIE               /* bit 3 */
#define INTE                 INTCONbits.INTE                /* bit 4 */
#define T0IE                 INTCONbits.T0IE                /* bit 5 */
#define TMR0IE               INTCONbits.TMR0IE              /* bit 5 */
#define PEIE                 INTCONbits.PEIE                /* bit 6 */
#define GIE                  INTCONbits.GIE                 /* bit 7 */

#define IOCAF0               IOCAFbits.IOCAF0               /* bit 0 */
#define IOCAF1               IOCAFbits.IOCAF1               /* bit 1 */
#define IOCAF2               IOCAFbits.IOCAF2               /* bit 2 */
#define IOCAF3               IOCAFbits.IOCAF3               /* bit 3 */
#define IOCAF4               IOCAFbits.IOCAF4               /* bit 4 */
#define IOCAF5               IOCAFbits.IOCAF5               /* bit 5 */

#define IOCAN0               IOCANbits.IOCAN0               /* bit 0 */
#define IOCAN1               IOCANbits.IOCAN1               /* bit 1 */
#define IOCAN2               IOCANbits.IOCAN2               /* bit 2 */
#define IOCAN3               IOCANbits.IOCAN3               /* bit 3 */
#define IOCAN4               IOCANbits.IOCAN4               /* bit 4 */
#define IOCAN5               IOCANbits.IOCAN5               /* bit 5 */

#define IOCAP0               IOCAPbits.IOCAP0               /* bit 0 */
#define IOCAP1               IOCAPbits.IOCAP1               /* bit 1 */
#define IOCAP2               IOCAPbits.IOCAP2               /* bit 2 */
#define IOCAP3               IOCAPbits.IOCAP3               /* bit 3 */
#define IOCAP4               IOCAPbits.IOCAP4               /* bit 4 */
#define IOCAP5               IOCAPbits.IOCAP5               /* bit 5 */

#define LATA0                LATAbits.LATA0                 /* bit 0 */
#define LATA1                LATAbits.LATA1                 /* bit 1 */
#define LATA2                LATAbits.LATA2                 /* bit 2 */
#define LATA4                LATAbits.LATA4                 /* bit 4 */
#define LATA5                LATAbits.LATA5                 /* bit 5 */

#define PS0                  OPTION_REGbits.PS0             /* bit 0 */
#define PS1                  OPTION_REGbits.PS1             /* bit 1 */
#define PS2                  OPTION_REGbits.PS2             /* bit 2 */
#define PSA                  OPTION_REGbits.PSA             /* bit 3 */
#define T0SE                 OPTION_REGbits.T0SE            /* bit 4 */
#define TMR0SE               OPTION_REGbits.TMR0SE          /* bit 4 */
#define T0CS                 OPTION_REGbits.T0CS            /* bit 5 */
#define TMR0CS               OPTION_REGbits.TMR0CS          /* bit 5 */
#define INTEDG               OPTION_REGbits.INTEDG          /* bit 6 */
#define NOT_WPUEN            OPTION_REGbits.NOT_WPUEN       /* bit 7 */

#define SCS0                 OSCCONbits.SCS0                /* bit 0 */
#define SCS1                 OSCCONbits.SCS1                /* bit 1 */
#define IRCF0                OSCCONbits.IRCF0               /* bit 3 */
#define IRCF1                OSCCONbits.IRCF1               /* bit 4 */
#define IRCF2                OSCCONbits.IRCF2               /* bit 5 */
#define IRCF3                OSCCONbits.IRCF3               /* bit 6 */
#define SPLLEN               OSCCONbits.SPLLEN              /* bit 7 */

#define HFIOFS               OSCSTATbits.HFIOFS             /* bit 0 */
#define LFIOFR               OSCSTATbits.LFIOFR             /* bit 1 */
#define HFIOFR               OSCSTATbits.HFIOFR             /* bit 4 */
#define OSTS                 OSCSTATbits.OSTS               /* bit 5 */
#define PLLR                 OSCSTATbits.PLLR               /* bit 6 */

#define NOT_BOR              PCONbits.NOT_BOR               /* bit 0 */
#define NOT_POR              PCONbits.NOT_POR               /* bit 1 */
#define NOT_RI               PCONbits.NOT_RI                /* bit 2 */
#define NOT_RMCLR            PCONbits.NOT_RMCLR             /* bit 3 */
#define NOT_RWDT             PCONbits.NOT_RWDT              /* bit 4 */
#define STKUNF               PCONbits.STKUNF                /* bit 6 */
#define STKOVF               PCONbits.STKOVF                /* bit 7 */

#define SSP1IE               PIE1bits.SSP1IE                /* bit 3 */
#define ADIE                 PIE1bits.ADIE                  /* bit 6 */

#define BCL1IE               PIE2bits.BCL1IE                /* bit 3 */

#define SSP1IF               PIR1bits.SSP1IF                /* bit 3 */
#define ADIF                 PIR1bits.ADIF                  /* bit 6 */

#define BCL1IF               PIR2bits.BCL1IF                /* bit 3 */

#define RD                   PMCON1bits.RD                  /* bit 0 */
#define WR                   PMCON1bits.WR                  /* bit 1 */
#define WREN                 PMCON1bits.WREN                /* bit 2 */
#define WRERR                PMCON1bits.WRERR               /* bit 3 */
#define FREE                 PMCON1bits.FREE                /* bit 4 */
#define LWLO                 PMCON1bits.LWLO                /* bit 5 */
#define CFGS                 PMCON1bits.CFGS                /* bit 6 */

#define RA0                  PORTAbits.RA0                  /* bit 0 */
#define RA1                  PORTAbits.RA1                  /* bit 1 */
#define RA2                  PORTAbits.RA2                  /* bit 2 */
#define RA3                  PORTAbits.RA3                  /* bit 3 */
#define RA4                  PORTAbits.RA4                  /* bit 4 */
#define RA5                  PORTAbits.RA5                  /* bit 5 */

#define SSPM0                SSP1CON1bits.SSPM0             /* bit 0, shadows bit in SSPCONbits, SSPCON1bits */
#define SSPM1                SSP1CON1bits.SSPM1             /* bit 1, shadows bit in SSPCONbits, SSPCON1bits */
#define SSPM2                SSP1CON1bits.SSPM2             /* bit 2, shadows bit in SSPCONbits, SSPCON1bits */
#define SSPM3                SSP1CON1bits.SSPM3             /* bit 3, shadows bit in SSPCONbits, SSPCON1bits */
#define CKP                  SSP1CON1bits.CKP               /* bit 4, shadows bit in SSPCONbits, SSPCON1bits */
#define SSPEN                SSP1CON1bits.SSPEN             /* bit 5, shadows bit in SSPCONbits, SSPCON1bits */
#define SSPOV                SSP1CON1bits.SSPOV             /* bit 6, shadows bit in SSPCONbits, SSPCON1bits */
#define WCOL                 SSP1CON1bits.WCOL              /* bit 7, shadows bit in SSPCONbits, SSPCON1bits */

#define SEN                  SSP1CON2bits.SEN               /* bit 0, shadows bit in SSPCON2bits */
#define RSEN                 SSP1CON2bits.RSEN              /* bit 1, shadows bit in SSPCON2bits */
#define PEN                  SSP1CON2bits.PEN               /* bit 2, shadows bit in SSPCON2bits */
#define RCEN                 SSP1CON2bits.RCEN              /* bit 3, shadows bit in SSPCON2bits */
#define ACKEN                SSP1CON2bits.ACKEN             /* bit 4, shadows bit in SSPCON2bits */
#define ACKDT                SSP1CON2bits.ACKDT             /* bit 5, shadows bit in SSPCON2bits */
#define ACKSTAT              SSP1CON2bits.ACKSTAT           /* bit 6, shadows bit in SSPCON2bits */
#define GCEN                 SSP1CON2bits.GCEN              /* bit 7, shadows bit in SSPCON2bits */

#define DHEN                 SSP1CON3bits.DHEN              /* bit 0, shadows bit in SSPCON3bits */
#define AHEN                 SSP1CON3bits.AHEN              /* bit 1, shadows bit in SSPCON3bits */
#define SBCDE                SSP1CON3bits.SBCDE             /* bit 2, shadows bit in SSPCON3bits */
#define SDAHT                SSP1CON3bits.SDAHT             /* bit 3, shadows bit in SSPCON3bits */
#define BOEN                 SSP1CON3bits.BOEN              /* bit 4, shadows bit in SSPCON3bits */
#define SCIE                 SSP1CON3bits.SCIE              /* bit 5, shadows bit in SSPCON3bits */
#define PCIE                 SSP1CON3bits.PCIE              /* bit 6, shadows bit in SSPCON3bits */
#define ACKTIM               SSP1CON3bits.ACKTIM            /* bit 7, shadows bit in SSPCON3bits */

#define BF                   SSP1STATbits.BF                /* bit 0, shadows bit in SSPSTATbits */
#define UA                   SSP1STATbits.UA                /* bit 1, shadows bit in SSPSTATbits */
#define R_NOT_W              SSP1STATbits.R_NOT_W           /* bit 2, shadows bit in SSPSTATbits */
#define S                    SSP1STATbits.S                 /* bit 3, shadows bit in SSPSTATbits */
#define P                    SSP1STATbits.P                 /* bit 4, shadows bit in SSPSTATbits */
#define D_NOT_A              SSP1STATbits.D_NOT_A           /* bit 5, shadows bit in SSPSTATbits */
#define CKE                  SSP1STATbits.CKE               /* bit 6, shadows bit in SSPSTATbits */
#define SMP                  SSP1STATbits.SMP               /* bit 7, shadows bit in SSPSTATbits */

#define C_SHAD               STATUS_SHADbits.C_SHAD         /* bit 0 */
#define DC_SHAD              STATUS_SHADbits.DC_SHAD        /* bit 1 */
#define Z_SHAD               STATUS_SHADbits.Z_SHAD         /* bit 2 */

#define C                    STATUSbits.C                   /* bit 0 */
#define DC                   STATUSbits.DC                  /* bit 1 */
#define Z                    STATUSbits.Z                   /* bit 2 */
#define NOT_PD               STATUSbits.NOT_PD              /* bit 3 */
#define NOT_TO               STATUSbits.NOT_TO              /* bit 4 */

#define TRISA0               TRISAbits.TRISA0               /* bit 0 */
#define TRISA1               TRISAbits.TRISA1               /* bit 1 */
#define TRISA2               TRISAbits.TRISA2               /* bit 2 */
#define TRISA3               TRISAbits.TRISA3               /* bit 3 */
#define TRISA4               TRISAbits.TRISA4               /* bit 4 */
#define TRISA5               TRISAbits.TRISA5               /* bit 5 */

#define SWDTEN               WDTCONbits.SWDTEN              /* bit 0 */
#define WDTPS0               WDTCONbits.WDTPS0              /* bit 1 */
#define WDTPS1               WDTCONbits.WDTPS1              /* bit 2 */
#define WDTPS2               WDTCONbits.WDTPS2              /* bit 3 */
#define WDTPS3               WDTCONbits.WDTPS3              /* bit 4 */
#define WDTPS4               WDTCONbits.WDTPS4              /* bit 5 */

#define WPUA0                WPUAbits.WPUA0                 /* bit 0 */
#define WPUA1                WPUAbits.WPUA1                 /* bit 1 */
#define WPUA2                WPUAbits.WPUA2                 /* bit 2 */
#define WPUA3                WPUAbits.WPUA3                 /* bit 3 */
#define WPUA4                WPUAbits.WPUA4                 /* bit 4 */
#define WPUA5                WPUAbits.WPUA5                 /* bit 5 */
#endif /* NO_BIT_DEFINES */

#ifndef NO_LEGACY_NAMES
#define AADACQ_bits          AADACQbits
#define AADCAP_bits          AADCAPbits
#define AADCON0_bits         AADCON0bits
#define AADCON1_bits         AADCON1bits
#define AADCON2_bits         AADCON2bits
#define AADCON3_bits         AADCON3bits
#define AADGRD_bits          AADGRDbits
#define AADPRE_bits          AADPREbits
#define AADSTAT_bits         AADSTATbits
#define ADCON0_bits          ADCON0bits
#define ADCON1_bits          ADCON1bits
#define ADCON2_bits          ADCON2bits
#define ANSELA_bits          ANSELAbits
#define APFCON_bits          APFCONbits
#define APFCON0_bits         APFCON0bits
#define BORCON_bits          BORCONbits
#define BSR_bits             BSRbits
#define FVRCON_bits          FVRCONbits
#define INTCON_bits          INTCONbits
#define IOCAF_bits           IOCAFbits
#define IOCAN_bits           IOCANbits
#define IOCAP_bits           IOCAPbits
#define LATA_bits            LATAbits
#define OPTION_REG_bits      OPTION_REGbits
#define OSCCON_bits          OSCCONbits
#define OSCSTAT_bits         OSCSTATbits
#define PCON_bits            PCONbits
#define PIE1_bits            PIE1bits
#define PIE2_bits            PIE2bits
#define PIR1_bits            PIR1bits
#define PIR2_bits            PIR2bits
#define PMCON1_bits          PMCON1bits
#define PORTA_bits           PORTAbits
#define SSP1CON1_bits        SSP1CON1bits
#define SSP1CON2_bits        SSP1CON2bits
#define SSP1CON3_bits        SSP1CON3bits
#define SSP1STAT_bits        SSP1STATbits
#define SSPCON_bits          SSPCONbits
#define SSPCON1_bits         SSPCON1bits
#define SSPCON2_bits         SSPCON2bits
#define SSPCON3_bits         SSPCON3bits
#define SSPSTAT_bits         SSPSTATbits
#define STATUS_bits          STATUSbits
#define STATUS_SHAD_bits     STATUS_SHADbits
#define TRISA_bits           TRISAbits
#define WDTCON_bits          WDTCONbits
#define WPUA_bits            WPUAbits
#endif /* NO_LEGACY_NAMES */

#endif
