//
// Register Declarations for Microchip 10F320 Processor
//
//
// This header file was automatically generated by:
//
// inc2h.pl
//
// Copyright (c) 2002, Kevin L. Pauba, All Rights Reserved
//
// SDCC is licensed under the GNU Public license (GPL) v2. Note that
// this license covers the code to the compiler and other executables,
// but explicitly does not cover any code or objects generated by sdcc.
//
// For pic device libraries and header files which are derived from
// Microchip header (.inc) and linker script (.lkr) files Microchip
// requires that "The header files should state that they are only to be
// used with authentic Microchip devices" which makes them incompatible
// with the GPL. Pic device libraries and header files are located at
// non-free/lib and non-free/include directories respectively.
// Sdcc should be run with the --use-non-free command line option in
// order to include non-free header files and libraries.
//
// See http://sdcc.sourceforge.net/ for the latest information on sdcc.
//
// 
#ifndef P10F320_H
#define P10F320_H

//
// Register addresses.
//
#define INDF_ADDR       0x0000
#define TMR0_ADDR       0x0001
#define PCL_ADDR        0x0002
#define STATUS_ADDR     0x0003
#define FSR_ADDR        0x0004
#define PORTA_ADDR      0x0005
#define TRISA_ADDR      0x0006
#define LATA_ADDR       0x0007
#define ANSELA_ADDR     0x0008
#define WPUA_ADDR       0x0009
#define PCLATH_ADDR     0x000A
#define INTCON_ADDR     0x000B
#define PIR1_ADDR       0x000C
#define PIE1_ADDR       0x000D
#define OPTION_REG_ADDR 0x000E
#define PCON_ADDR       0x000F
#define OSCCON_ADDR     0x0010
#define TMR2_ADDR       0x0011
#define PR2_ADDR        0x0012
#define T2CON_ADDR      0x0013
#define PWM1DCL_ADDR    0x0014
#define PWM1DCH_ADDR    0x0015
#define PWM1CON_ADDR    0x0016
#define PWM1CON0_ADDR   0x0016
#define PWM2DCL_ADDR    0x0017
#define PWM2DCH_ADDR    0x0018
#define PWM2CON_ADDR    0x0019
#define PWM2CON0_ADDR   0x0019
#define IOCAP_ADDR      0x001A
#define IOCAN_ADDR      0x001B
#define IOCAF_ADDR      0x001C
#define FVRCON_ADDR     0x001D
#define ADRES_ADDR      0x001E
#define ADCON_ADDR      0x001F
#define PMADR_ADDR      0x0020
#define PMADRL_ADDR     0x0020
#define PMADRH_ADDR     0x0021
#define PMDAT_ADDR      0x0022
#define PMDATL_ADDR     0x0022
#define PMDATH_ADDR     0x0023
#define PMCON1_ADDR     0x0024
#define PMCON2_ADDR     0x0025
#define CLKRCON_ADDR    0x0026
#define NCO1ACC_ADDR    0x0027
#define NCO1ACCL_ADDR   0x0027
#define NCO1ACCH_ADDR   0x0028
#define NCO1ACCU_ADDR   0x0029
#define NCO1INC_ADDR    0x002A
#define NCO1INCL_ADDR   0x002A
#define NCO1INCH_ADDR   0x002B
#define NCO1INCU_ADDR   0x002C
#define NCO1CON_ADDR    0x002D
#define NCO1CLK_ADDR    0x002E
#define WDTCON_ADDR     0x0030
#define CLC1CON_ADDR    0x0031
#define CLC1SEL0_ADDR   0x0032
#define CLC1SEL1_ADDR   0x0033
#define CLC1POL_ADDR    0x0034
#define CLC1GLS0_ADDR   0x0035
#define CLC1GLS1_ADDR   0x0036
#define CLC1GLS2_ADDR   0x0037
#define CLC1GLS3_ADDR   0x0038
#define CWG1CON0_ADDR   0x0039
#define CWG1CON1_ADDR   0x003A
#define CWG1CON2_ADDR   0x003B
#define CWG1DBR_ADDR    0x003C
#define CWG1DBF_ADDR    0x003D
#define VREGCON_ADDR    0x003E
#define BORCON_ADDR     0x003F

//
// Memory organization.
//



//         LIST

//==========================================================================
//  MPASM PIC10F320 processor include
//
//  (c) Copyright 1999-2012 Microchip Technology, All rights reserved
//==========================================================================

//         NOLIST

//==========================================================================
//  This header file defines configurations, registers, and other useful
//  bits of information for the PIC10F320 microcontroller.  These names
//  are taken to match the data sheets as closely as possible.
//
//  Note that the processor must be selected before this file is included.
//  The processor may be selected the following ways:
//
//       1. Command line switch:
//               C:\MPASM MYFILE.ASM /PIC10F320
//       2. LIST directive in the source file
//               LIST   P=PIC10F320
//       3. Processor Type entry in the MPASM full-screen interface
//       4. Setting the processor in the MPLAB Project Dialog
//==========================================================================

//==========================================================================
//
//       Verify Processor
//
//==========================================================================
//        IFNDEF __10F320
//            MESSG "Processor-header file mismatch.  Verify selected processor."
//         ENDIF



//==========================================================================
//
//       Register Definitions
//
//==========================================================================

#define W                    0x0000
#define F                    0x0001

//----- Register Files -----------------------------------------------------

//-----Bank0------------------
extern __sfr  __at (INDF_ADDR)                    INDF;
extern __sfr  __at (TMR0_ADDR)                    TMR0;
extern __sfr  __at (PCL_ADDR)                     PCL;
extern __sfr  __at (STATUS_ADDR)                  STATUS;
extern __sfr  __at (FSR_ADDR)                     FSR;
extern __sfr  __at (PORTA_ADDR)                   PORTA;
extern __sfr  __at (TRISA_ADDR)                   TRISA;
extern __sfr  __at (LATA_ADDR)                    LATA;
extern __sfr  __at (ANSELA_ADDR)                  ANSELA;
extern __sfr  __at (WPUA_ADDR)                    WPUA;
extern __sfr  __at (PCLATH_ADDR)                  PCLATH;
extern __sfr  __at (INTCON_ADDR)                  INTCON;
extern __sfr  __at (PIR1_ADDR)                    PIR1;
extern __sfr  __at (PIE1_ADDR)                    PIE1;
extern __sfr  __at (OPTION_REG_ADDR)              OPTION_REG;
extern __sfr  __at (PCON_ADDR)                    PCON;
extern __sfr  __at (OSCCON_ADDR)                  OSCCON;
extern __sfr  __at (TMR2_ADDR)                    TMR2;
extern __sfr  __at (PR2_ADDR)                     PR2;
extern __sfr  __at (T2CON_ADDR)                   T2CON;
extern __sfr  __at (PWM1DCL_ADDR)                 PWM1DCL;
extern __sfr  __at (PWM1DCH_ADDR)                 PWM1DCH;
extern __sfr  __at (PWM1CON_ADDR)                 PWM1CON;
extern __sfr  __at (PWM1CON0_ADDR)                PWM1CON0;
extern __sfr  __at (PWM2DCL_ADDR)                 PWM2DCL;
extern __sfr  __at (PWM2DCH_ADDR)                 PWM2DCH;
extern __sfr  __at (PWM2CON_ADDR)                 PWM2CON;
extern __sfr  __at (PWM2CON0_ADDR)                PWM2CON0;
extern __sfr  __at (IOCAP_ADDR)                   IOCAP;
extern __sfr  __at (IOCAN_ADDR)                   IOCAN;
extern __sfr  __at (IOCAF_ADDR)                   IOCAF;
extern __sfr  __at (FVRCON_ADDR)                  FVRCON;
extern __sfr  __at (ADRES_ADDR)                   ADRES;
extern __sfr  __at (ADCON_ADDR)                   ADCON;
extern __sfr  __at (PMADR_ADDR)                   PMADR;
extern __sfr  __at (PMADRL_ADDR)                  PMADRL;
extern __sfr  __at (PMADRH_ADDR)                  PMADRH;
extern __sfr  __at (PMDAT_ADDR)                   PMDAT;
extern __sfr  __at (PMDATL_ADDR)                  PMDATL;
extern __sfr  __at (PMDATH_ADDR)                  PMDATH;
extern __sfr  __at (PMCON1_ADDR)                  PMCON1;
extern __sfr  __at (PMCON2_ADDR)                  PMCON2;
extern __sfr  __at (CLKRCON_ADDR)                 CLKRCON;
extern __sfr  __at (NCO1ACC_ADDR)                 NCO1ACC;
extern __sfr  __at (NCO1ACCL_ADDR)                NCO1ACCL;
extern __sfr  __at (NCO1ACCH_ADDR)                NCO1ACCH;
extern __sfr  __at (NCO1ACCU_ADDR)                NCO1ACCU;
extern __sfr  __at (NCO1INC_ADDR)                 NCO1INC;
extern __sfr  __at (NCO1INCL_ADDR)                NCO1INCL;
extern __sfr  __at (NCO1INCH_ADDR)                NCO1INCH;
extern __sfr  __at (NCO1INCU_ADDR)                NCO1INCU;
extern __sfr  __at (NCO1CON_ADDR)                 NCO1CON;
extern __sfr  __at (NCO1CLK_ADDR)                 NCO1CLK;
extern __sfr  __at (WDTCON_ADDR)                  WDTCON;
extern __sfr  __at (CLC1CON_ADDR)                 CLC1CON;
extern __sfr  __at (CLC1SEL0_ADDR)                CLC1SEL0;
extern __sfr  __at (CLC1SEL1_ADDR)                CLC1SEL1;
extern __sfr  __at (CLC1POL_ADDR)                 CLC1POL;
extern __sfr  __at (CLC1GLS0_ADDR)                CLC1GLS0;
extern __sfr  __at (CLC1GLS1_ADDR)                CLC1GLS1;
extern __sfr  __at (CLC1GLS2_ADDR)                CLC1GLS2;
extern __sfr  __at (CLC1GLS3_ADDR)                CLC1GLS3;
extern __sfr  __at (CWG1CON0_ADDR)                CWG1CON0;
extern __sfr  __at (CWG1CON1_ADDR)                CWG1CON1;
extern __sfr  __at (CWG1CON2_ADDR)                CWG1CON2;
extern __sfr  __at (CWG1DBR_ADDR)                 CWG1DBR;
extern __sfr  __at (CWG1DBF_ADDR)                 CWG1DBF;
extern __sfr  __at (VREGCON_ADDR)                 VREGCON;
extern __sfr  __at (BORCON_ADDR)                  BORCON;

//----- STATUS Bits -----------------------------------------------------


//----- PORTA Bits -----------------------------------------------------


//----- TRISA Bits -----------------------------------------------------


//----- LATA Bits -----------------------------------------------------


//----- ANSELA Bits -----------------------------------------------------


//----- WPUA Bits -----------------------------------------------------


//----- PCLATH Bits -----------------------------------------------------


//----- INTCON Bits -----------------------------------------------------


//----- PIR1 Bits -----------------------------------------------------


//----- PIE1 Bits -----------------------------------------------------


//----- OPTION_REG Bits -----------------------------------------------------



//----- PCON Bits -----------------------------------------------------


//----- OSCCON Bits -----------------------------------------------------



//----- T2CON Bits -----------------------------------------------------



//----- PWM1DCL Bits -----------------------------------------------------


//----- PWM1DCH Bits -----------------------------------------------------


//----- PWM1CON Bits -----------------------------------------------------


//----- PWM1CON0 Bits -----------------------------------------------------


//----- PWM2DCL Bits -----------------------------------------------------


//----- PWM2DCH Bits -----------------------------------------------------


//----- PWM2CON Bits -----------------------------------------------------


//----- PWM2CON0 Bits -----------------------------------------------------


//----- IOCAP Bits -----------------------------------------------------


//----- IOCAN Bits -----------------------------------------------------


//----- IOCAF Bits -----------------------------------------------------


//----- FVRCON Bits -----------------------------------------------------


//----- ADCON Bits -----------------------------------------------------



//----- PMADRH Bits -----------------------------------------------------


//----- PMCON1 Bits -----------------------------------------------------


//----- CLKRCON Bits -----------------------------------------------------


//----- NCO1ACCL Bits -----------------------------------------------------


//----- NCO1ACCH Bits -----------------------------------------------------


//----- NCO1ACCU Bits -----------------------------------------------------


//----- NCO1INCL Bits -----------------------------------------------------


//----- NCO1INCH Bits -----------------------------------------------------


//----- NCO1CON Bits -----------------------------------------------------


//----- NCO1CLK Bits -----------------------------------------------------


//----- WDTCON Bits -----------------------------------------------------



//----- CLC1CON Bits -----------------------------------------------------




//----- CLC1SEL0 Bits -----------------------------------------------------




//----- CLC1SEL1 Bits -----------------------------------------------------




//----- CLC1POL Bits -----------------------------------------------------



//----- CLC1GLS0 Bits -----------------------------------------------------



//----- CLC1GLS1 Bits -----------------------------------------------------



//----- CLC1GLS2 Bits -----------------------------------------------------



//----- CLC1GLS3 Bits -----------------------------------------------------



//----- CWG1CON0 Bits -----------------------------------------------------



//----- CWG1CON1 Bits -----------------------------------------------------



//----- CWG1CON2 Bits -----------------------------------------------------


//----- CWG1DBR Bits -----------------------------------------------------


//----- CWG1DBF Bits -----------------------------------------------------


//----- VREGCON Bits -----------------------------------------------------


//----- BORCON Bits -----------------------------------------------------




//==========================================================================
//
//       RAM Definitions
//
//==========================================================================
//        __MAXRAM  H'007F'
//        __BADRAM  H'002F'

//==========================================================================
//
//       Configuration Bits
//
//   NAME            Address
//   CONFIG            2007h
//
//==========================================================================

// The following is an assignment of address values for all of the
// configuration registers for the purpose of table reads
#define _CONFIG              0x2007

//----- CONFIG Options --------------------------------------------------
#define _FOSC_INTOSC         0x3FFE    // INTOSC oscillator: CLKIN function disabled
#define _FOSC_EC             0x3FFF    // EC: CLKIN function enabled

#define _BOREN_OFF           0x3FF9    // Brown-out Reset disabled
#define _BOREN_SBODEN        0x3FFB    // Brown-out Reset controlled by the SBOREN bit in the BORCON register
#define _BOREN_NSLEEP        0x3FFD    // Brown-out Reset enabled while running and disabled in Sleep
#define _BOREN_ON            0x3FFF    // Brown-out Reset enabled

#define _WDTE_OFF            0x3FE7    // WDT disabled
#define _WDTE_SWDTEN         0x3FEF    // WDT controlled by the SWDTEN bit in the WDTCON register
#define _WDTE_NSLEEP         0x3FF7    // WDT enabled while running and disabled in Sleep
#define _WDTE_ON             0x3FFF    // WDT enabled

#define _PWRTE_ON            0x3FDF    // PWRT enabled
#define _PWRTE_OFF           0x3FFF    // PWRT disabled

#define _MCLRE_OFF           0x3FBF    // MCLR pin function is digital input, MCLR internally tied to VDD
#define _MCLRE_ON            0x3FFF    // MCLR pin function is MCLR

#define _CP_ON               0x3F7F    // Program memory code protection is enabled
#define _CP_OFF              0x3FFF    // Program memory code protection is disabled

#define _LVP_OFF             0x3EFF    // High-voltage on MCLR/VPP must be used for programming
#define _LVP_ON              0x3FFF    // Low-voltage programming enabled

#define _LPBOR_OFF           0x3DFF    // BOR disabled
#define _LPBOR_ON            0x3FFF    // BOR enabled

#define _BORV_HI             0x3BFF    // Brown-out Reset Voltage (Vbor), high trip point selected.
#define _BORV_27             0x3BFF    // Brown-out Reset Voltage (Vbor), high trip point selected.
#define _BORV_LO             0x3FFF    // Brown-out Reset Voltage (Vbor), low trip point selected.
#define _BORV_24             0x3FFF    // Brown-out Reset Voltage (Vbor), low trip point selected.

#define _WRT_ALL             0x27FF    // 000h to 0FFh write protected, no addresses may be modified by PMCON control
#define _WRT_HALF            0x2FFF    // 000h to 07Fh write protected, 080h to 0FFh may be modified by PMCON control
#define _WRT_BOOT            0x37FF    // 000h to 03Fh write protected, 040h to 0FFh may be modified by PMCON control
#define _WRT_OFF             0x3FFF    // Write protection off

//----- DEVID Equates --------------------------------------------------
#define _DEVID1              0x2006

//----- IDLOC Equates --------------------------------------------------
#define _IDLOC0              0x2000
#define _IDLOC1              0x2001
#define _IDLOC2              0x2002
#define _IDLOC3              0x2003

//         LIST

// ----- ADCON bits --------------------
typedef union {
  struct {
    unsigned char ADON:1;
    unsigned char GO_NOT_DONE:1;
    unsigned char CHS0:1;
    unsigned char CHS1:1;
    unsigned char CHS2:1;
    unsigned char ADCS0:1;
    unsigned char ADCS1:1;
    unsigned char ADCS2:1;
  };
} __ADCONbits_t;
extern volatile __ADCONbits_t __at(ADCON_ADDR) ADCONbits;

// ----- ANSELA bits --------------------
typedef union {
  struct {
    unsigned char ANSA0:1;
    unsigned char ANSA1:1;
    unsigned char ANSA2:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __ANSELAbits_t;
extern volatile __ANSELAbits_t __at(ANSELA_ADDR) ANSELAbits;

// ----- BORCON bits --------------------
typedef union {
  struct {
    unsigned char BORRDY:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char BORFS:1;
    unsigned char SBOREN:1;
  };
} __BORCONbits_t;
extern volatile __BORCONbits_t __at(BORCON_ADDR) BORCONbits;

// ----- CLC1CON bits --------------------
typedef union {
  struct {
    unsigned char LC1MODE0:1;
    unsigned char LC1MODE1:1;
    unsigned char LC1MODE2:1;
    unsigned char LC1INTN:1;
    unsigned char LC1INTP:1;
    unsigned char LC1OUT:1;
    unsigned char LC1OE:1;
    unsigned char LC1EN:1;
  };
  struct {
    unsigned char LCMODE0:1;
    unsigned char LCMODE1:1;
    unsigned char LCMODE2:1;
    unsigned char LCINTN:1;
    unsigned char LCINTP:1;
    unsigned char LCOUT:1;
    unsigned char LCOE:1;
    unsigned char LCEN:1;
  };
} __CLC1CONbits_t;
extern volatile __CLC1CONbits_t __at(CLC1CON_ADDR) CLC1CONbits;

// ----- CLC1GLS0 bits --------------------
typedef union {
  struct {
    unsigned char LC1G1D1N:1;
    unsigned char LC1G1D1T:1;
    unsigned char LC1G1D2N:1;
    unsigned char LC1G1D2T:1;
    unsigned char LC1G1D3N:1;
    unsigned char LC1G1D3T:1;
    unsigned char LC1G1D4N:1;
    unsigned char LC1G1D4T:1;
  };
  struct {
    unsigned char D1N:1;
    unsigned char D1T:1;
    unsigned char D2N:1;
    unsigned char D2T:1;
    unsigned char D3N:1;
    unsigned char D3T:1;
    unsigned char D4N:1;
    unsigned char D4T:1;
  };
} __CLC1GLS0bits_t;
extern volatile __CLC1GLS0bits_t __at(CLC1GLS0_ADDR) CLC1GLS0bits;

// ----- CLC1GLS1 bits --------------------
typedef union {
  struct {
    unsigned char LC1G2D1N:1;
    unsigned char LC1G2D1T:1;
    unsigned char LC1G2D2N:1;
    unsigned char LC1G2D2T:1;
    unsigned char LC1G2D3N:1;
    unsigned char LC1G2D3T:1;
    unsigned char LC1G2D4N:1;
    unsigned char LC1G2D4T:1;
  };
  struct {
    unsigned char D1N:1;
    unsigned char D1T:1;
    unsigned char D2N:1;
    unsigned char D2T:1;
    unsigned char D3N:1;
    unsigned char D3T:1;
    unsigned char D4N:1;
    unsigned char D4T:1;
  };
} __CLC1GLS1bits_t;
extern volatile __CLC1GLS1bits_t __at(CLC1GLS1_ADDR) CLC1GLS1bits;

// ----- CLC1GLS2 bits --------------------
typedef union {
  struct {
    unsigned char LC1G3D1N:1;
    unsigned char LC1G3D1T:1;
    unsigned char LC1G3D2N:1;
    unsigned char LC1G3D2T:1;
    unsigned char LC1G3D3N:1;
    unsigned char LC1G3D3T:1;
    unsigned char LC1G3D4N:1;
    unsigned char LC1G3D4T:1;
  };
  struct {
    unsigned char D1N:1;
    unsigned char D1T:1;
    unsigned char D2N:1;
    unsigned char D2T:1;
    unsigned char D3N:1;
    unsigned char D3T:1;
    unsigned char D4N:1;
    unsigned char D4T:1;
  };
} __CLC1GLS2bits_t;
extern volatile __CLC1GLS2bits_t __at(CLC1GLS2_ADDR) CLC1GLS2bits;

// ----- CLC1GLS3 bits --------------------
typedef union {
  struct {
    unsigned char LC1G4D1N:1;
    unsigned char LC1G4D1T:1;
    unsigned char LC1G4D2N:1;
    unsigned char LC1G4D2T:1;
    unsigned char LC1G4D3N:1;
    unsigned char LC1G4D3T:1;
    unsigned char LC1G4D4N:1;
    unsigned char LC1G4D4T:1;
  };
  struct {
    unsigned char G4D1N:1;
    unsigned char G4D1T:1;
    unsigned char G4D2N:1;
    unsigned char G4D2T:1;
    unsigned char G4D3N:1;
    unsigned char G4D3T:1;
    unsigned char G4D4N:1;
    unsigned char G4D4T:1;
  };
} __CLC1GLS3bits_t;
extern volatile __CLC1GLS3bits_t __at(CLC1GLS3_ADDR) CLC1GLS3bits;

// ----- CLC1POL bits --------------------
typedef union {
  struct {
    unsigned char LC1G1POL:1;
    unsigned char LC1G2POL:1;
    unsigned char LC1G3POL:1;
    unsigned char LC1G4POL:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char LC1POL:1;
  };
  struct {
    unsigned char G1POL:1;
    unsigned char G2POL:1;
    unsigned char G3POL:1;
    unsigned char G4POL:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char POL:1;
  };
} __CLC1POLbits_t;
extern volatile __CLC1POLbits_t __at(CLC1POL_ADDR) CLC1POLbits;

// ----- CLC1SEL0 bits --------------------
typedef union {
  struct {
    unsigned char LC1D1S0:1;
    unsigned char LC1D1S1:1;
    unsigned char LC1D1S2:1;
    unsigned char :1;
    unsigned char LC1D2S0:1;
    unsigned char LC1D2S1:1;
    unsigned char LC1D2S2:1;
    unsigned char :1;
  };
  struct {
    unsigned char D1S0:1;
    unsigned char D1S1:1;
    unsigned char D1S2:1;
    unsigned char :1;
    unsigned char D2S0:1;
    unsigned char D2S1:1;
    unsigned char D2S2:1;
    unsigned char :1;
  };
} __CLC1SEL0bits_t;
extern volatile __CLC1SEL0bits_t __at(CLC1SEL0_ADDR) CLC1SEL0bits;

// ----- CLC1SEL1 bits --------------------
typedef union {
  struct {
    unsigned char LC1D3S0:1;
    unsigned char LC1D3S1:1;
    unsigned char LC1D3S2:1;
    unsigned char :1;
    unsigned char LC1D4S0:1;
    unsigned char LC1D4S1:1;
    unsigned char LC1D4S2:1;
    unsigned char :1;
  };
  struct {
    unsigned char D3S0:1;
    unsigned char D3S1:1;
    unsigned char D3S2:1;
    unsigned char :1;
    unsigned char D4S0:1;
    unsigned char D4S1:1;
    unsigned char D4S2:1;
    unsigned char :1;
  };
} __CLC1SEL1bits_t;
extern volatile __CLC1SEL1bits_t __at(CLC1SEL1_ADDR) CLC1SEL1bits;

// ----- CLKRCON bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char CLKROE:1;
    unsigned char :1;
  };
} __CLKRCONbits_t;
extern volatile __CLKRCONbits_t __at(CLKRCON_ADDR) CLKRCONbits;

// ----- CWG1CON0 bits --------------------
typedef union {
  struct {
    unsigned char G1CS0:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char G1POLA:1;
    unsigned char G1POLB:1;
    unsigned char G1OEA:1;
    unsigned char G1OEB:1;
    unsigned char G1EN:1;
  };
} __CWG1CON0bits_t;
extern volatile __CWG1CON0bits_t __at(CWG1CON0_ADDR) CWG1CON0bits;

// ----- CWG1CON1 bits --------------------
typedef union {
  struct {
    unsigned char G1IS0:1;
    unsigned char G1IS1:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char G1ASDLA0:1;
    unsigned char G1ASDLA1:1;
    unsigned char G1ASDLB0:1;
    unsigned char G1ASDLB1:1;
  };
} __CWG1CON1bits_t;
extern volatile __CWG1CON1bits_t __at(CWG1CON1_ADDR) CWG1CON1bits;

// ----- CWG1CON2 bits --------------------
typedef union {
  struct {
    unsigned char G1ASDSFLT:1;
    unsigned char G1ASDSCLC1:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char G1ARSEN:1;
    unsigned char G1ASE:1;
  };
} __CWG1CON2bits_t;
extern volatile __CWG1CON2bits_t __at(CWG1CON2_ADDR) CWG1CON2bits;

// ----- CWG1DBF bits --------------------
typedef union {
  struct {
    unsigned char CWG1DBF0:1;
    unsigned char CWG1DBF1:1;
    unsigned char CWG1DBF2:1;
    unsigned char CWG1DBF3:1;
    unsigned char CWG1DBF4:1;
    unsigned char CWG1DBF5:1;
    unsigned char :1;
    unsigned char :1;
  };
} __CWG1DBFbits_t;
extern volatile __CWG1DBFbits_t __at(CWG1DBF_ADDR) CWG1DBFbits;

// ----- CWG1DBR bits --------------------
typedef union {
  struct {
    unsigned char CWG1DBR0:1;
    unsigned char CWG1DBR1:1;
    unsigned char CWG1DBR2:1;
    unsigned char CWG1DBR3:1;
    unsigned char CWG1DBR4:1;
    unsigned char CWG1DBR5:1;
    unsigned char :1;
    unsigned char :1;
  };
} __CWG1DBRbits_t;
extern volatile __CWG1DBRbits_t __at(CWG1DBR_ADDR) CWG1DBRbits;

// ----- FVRCON bits --------------------
typedef union {
  struct {
    unsigned char ADFVR0:1;
    unsigned char ADFVR1:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char TSRNG:1;
    unsigned char TSEN:1;
    unsigned char FVRRDY:1;
    unsigned char FVREN:1;
  };
} __FVRCONbits_t;
extern volatile __FVRCONbits_t __at(FVRCON_ADDR) FVRCONbits;

// ----- INTCON bits --------------------
typedef union {
  struct {
    unsigned char IOCIF:1;
    unsigned char INTF:1;
    unsigned char TMR0IF:1;
    unsigned char IOCIE:1;
    unsigned char INTE:1;
    unsigned char TMR0IE:1;
    unsigned char PEIE:1;
    unsigned char GIE:1;
  };
} __INTCONbits_t;
extern volatile __INTCONbits_t __at(INTCON_ADDR) INTCONbits;

// ----- IOCAF bits --------------------
typedef union {
  struct {
    unsigned char IOCAF0:1;
    unsigned char IOCAF1:1;
    unsigned char IOCAF2:1;
    unsigned char IOCAF3:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __IOCAFbits_t;
extern volatile __IOCAFbits_t __at(IOCAF_ADDR) IOCAFbits;

// ----- IOCAN bits --------------------
typedef union {
  struct {
    unsigned char IOCAN0:1;
    unsigned char IOCAN1:1;
    unsigned char IOCAN2:1;
    unsigned char IOCAN3:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __IOCANbits_t;
extern volatile __IOCANbits_t __at(IOCAN_ADDR) IOCANbits;

// ----- IOCAP bits --------------------
typedef union {
  struct {
    unsigned char IOCAP0:1;
    unsigned char IOCAP1:1;
    unsigned char IOCAP2:1;
    unsigned char IOCAP3:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __IOCAPbits_t;
extern volatile __IOCAPbits_t __at(IOCAP_ADDR) IOCAPbits;

// ----- LATA bits --------------------
typedef union {
  struct {
    unsigned char LATA0:1;
    unsigned char LATA1:1;
    unsigned char LATA2:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __LATAbits_t;
extern volatile __LATAbits_t __at(LATA_ADDR) LATAbits;

// ----- NCO1ACCH bits --------------------
typedef union {
  struct {
    unsigned char NCO1ACC8:1;
    unsigned char NCO1ACC9:1;
    unsigned char NCO1ACC10:1;
    unsigned char NCO1ACC11:1;
    unsigned char NCO1ACC12:1;
    unsigned char NCO1ACC13:1;
    unsigned char NCO1ACC14:1;
    unsigned char NCO1ACC15:1;
  };
} __NCO1ACCHbits_t;
extern volatile __NCO1ACCHbits_t __at(NCO1ACCH_ADDR) NCO1ACCHbits;

// ----- NCO1ACCL bits --------------------
typedef union {
  struct {
    unsigned char NCO1ACC0:1;
    unsigned char NCO1ACC1:1;
    unsigned char NCO1ACC2:1;
    unsigned char NCO1ACC3:1;
    unsigned char NCO1ACC4:1;
    unsigned char NCO1ACC5:1;
    unsigned char NCO1ACC6:1;
    unsigned char NCO1ACC7:1;
  };
} __NCO1ACCLbits_t;
extern volatile __NCO1ACCLbits_t __at(NCO1ACCL_ADDR) NCO1ACCLbits;

// ----- NCO1ACCU bits --------------------
typedef union {
  struct {
    unsigned char NCO1ACC16:1;
    unsigned char NCO1ACC17:1;
    unsigned char NCO1ACC18:1;
    unsigned char NCO1ACC19:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __NCO1ACCUbits_t;
extern volatile __NCO1ACCUbits_t __at(NCO1ACCU_ADDR) NCO1ACCUbits;

// ----- NCO1CLK bits --------------------
typedef union {
  struct {
    unsigned char N1CKS0:1;
    unsigned char N1CKS1:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char N1PWS0:1;
    unsigned char N1PWS1:1;
    unsigned char N1PWS2:1;
  };
} __NCO1CLKbits_t;
extern volatile __NCO1CLKbits_t __at(NCO1CLK_ADDR) NCO1CLKbits;

// ----- NCO1CON bits --------------------
typedef union {
  struct {
    unsigned char N1PFM:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char N1POL:1;
    unsigned char N1OUT:1;
    unsigned char N1OE:1;
    unsigned char N1EN:1;
  };
} __NCO1CONbits_t;
extern volatile __NCO1CONbits_t __at(NCO1CON_ADDR) NCO1CONbits;

// ----- NCO1INCH bits --------------------
typedef union {
  struct {
    unsigned char NCO1INC8:1;
    unsigned char NCO1INC9:1;
    unsigned char NCO1INC10:1;
    unsigned char NCO1INC11:1;
    unsigned char NCO1INC12:1;
    unsigned char NCO1INC13:1;
    unsigned char NCO1INC14:1;
    unsigned char NCO1INC15:1;
  };
} __NCO1INCHbits_t;
extern volatile __NCO1INCHbits_t __at(NCO1INCH_ADDR) NCO1INCHbits;

// ----- NCO1INCL bits --------------------
typedef union {
  struct {
    unsigned char NCO1INC0:1;
    unsigned char NCO1INC1:1;
    unsigned char NCO1INC2:1;
    unsigned char NCO1INC3:1;
    unsigned char NCO1INC4:1;
    unsigned char NCO1INC5:1;
    unsigned char NCO1INC6:1;
    unsigned char NCO1INC7:1;
  };
} __NCO1INCLbits_t;
extern volatile __NCO1INCLbits_t __at(NCO1INCL_ADDR) NCO1INCLbits;

// ----- OPTION_REG bits --------------------
typedef union {
  struct {
    unsigned char PS0:1;
    unsigned char PS1:1;
    unsigned char PS2:1;
    unsigned char PSA:1;
    unsigned char T0SE:1;
    unsigned char T0CS:1;
    unsigned char INTEDG:1;
    unsigned char NOT_WPUEN:1;
  };
} __OPTION_REGbits_t;
extern volatile __OPTION_REGbits_t __at(OPTION_REG_ADDR) OPTION_REGbits;

// ----- OSCCON bits --------------------
typedef union {
  struct {
    unsigned char HFIOFS:1;
    unsigned char LFIOFR:1;
    unsigned char :1;
    unsigned char HFIOFR:1;
    unsigned char IRCF0:1;
    unsigned char IRCF1:1;
    unsigned char IRCF2:1;
    unsigned char :1;
  };
} __OSCCONbits_t;
extern volatile __OSCCONbits_t __at(OSCCON_ADDR) OSCCONbits;

// ----- PCLATH bits --------------------
typedef union {
  struct {
    unsigned char PCLH0:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __PCLATHbits_t;
extern volatile __PCLATHbits_t __at(PCLATH_ADDR) PCLATHbits;

// ----- PCON bits --------------------
typedef union {
  struct {
    unsigned char NOT_BOR:1;
    unsigned char NOT_POR:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __PCONbits_t;
extern volatile __PCONbits_t __at(PCON_ADDR) PCONbits;

// ----- PIE1 bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char TMR2IE:1;
    unsigned char :1;
    unsigned char CLC1IE:1;
    unsigned char NCO1IE:1;
    unsigned char :1;
    unsigned char ADIE:1;
    unsigned char :1;
  };
} __PIE1bits_t;
extern volatile __PIE1bits_t __at(PIE1_ADDR) PIE1bits;

// ----- PIR1 bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char TMR2IF:1;
    unsigned char :1;
    unsigned char CLC1IF:1;
    unsigned char NCO1IF:1;
    unsigned char :1;
    unsigned char ADIF:1;
    unsigned char :1;
  };
} __PIR1bits_t;
extern volatile __PIR1bits_t __at(PIR1_ADDR) PIR1bits;

// ----- PMADRH bits --------------------
typedef union {
  struct {
    unsigned char PMADR8:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __PMADRHbits_t;
extern volatile __PMADRHbits_t __at(PMADRH_ADDR) PMADRHbits;

// ----- PMCON1 bits --------------------
typedef union {
  struct {
    unsigned char RD:1;
    unsigned char WR:1;
    unsigned char WREN:1;
    unsigned char WRERR:1;
    unsigned char FREE:1;
    unsigned char LWLO:1;
    unsigned char CFGS:1;
    unsigned char :1;
  };
} __PMCON1bits_t;
extern volatile __PMCON1bits_t __at(PMCON1_ADDR) PMCON1bits;

// ----- PORTA bits --------------------
typedef union {
  struct {
    unsigned char RA0:1;
    unsigned char RA1:1;
    unsigned char RA2:1;
    unsigned char RA3:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __PORTAbits_t;
extern volatile __PORTAbits_t __at(PORTA_ADDR) PORTAbits;

// ----- PWM1CON bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char PWM1POL:1;
    unsigned char PWM1OUT:1;
    unsigned char PWM1OE:1;
    unsigned char PWM1EN:1;
  };
} __PWM1CONbits_t;
extern volatile __PWM1CONbits_t __at(PWM1CON_ADDR) PWM1CONbits;

// ----- PWM1CON0 bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char PWM1POL:1;
    unsigned char PWM1OUT:1;
    unsigned char PWM1OE:1;
    unsigned char PWM1EN:1;
  };
} __PWM1CON0bits_t;
extern volatile __PWM1CON0bits_t __at(PWM1CON0_ADDR) PWM1CON0bits;

// ----- PWM1DCH bits --------------------
typedef union {
  struct {
    unsigned char PWM1DCH0:1;
    unsigned char PWM1DCH1:1;
    unsigned char PWM1DCH2:1;
    unsigned char PWM1DCH3:1;
    unsigned char PWM1DCH4:1;
    unsigned char PWM1DCH5:1;
    unsigned char PWM1DCH6:1;
    unsigned char PWM1DCH7:1;
  };
} __PWM1DCHbits_t;
extern volatile __PWM1DCHbits_t __at(PWM1DCH_ADDR) PWM1DCHbits;

// ----- PWM1DCL bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char PWM1DCL0:1;
    unsigned char PWM1DCL1:1;
  };
} __PWM1DCLbits_t;
extern volatile __PWM1DCLbits_t __at(PWM1DCL_ADDR) PWM1DCLbits;

// ----- PWM2CON bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char PWM2POL:1;
    unsigned char PWM2OUT:1;
    unsigned char PWM2OE:1;
    unsigned char PWM2EN:1;
  };
} __PWM2CONbits_t;
extern volatile __PWM2CONbits_t __at(PWM2CON_ADDR) PWM2CONbits;

// ----- PWM2CON0 bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char PWM2POL:1;
    unsigned char PWM2OUT:1;
    unsigned char PWM2OE:1;
    unsigned char PWM2EN:1;
  };
} __PWM2CON0bits_t;
extern volatile __PWM2CON0bits_t __at(PWM2CON0_ADDR) PWM2CON0bits;

// ----- PWM2DCH bits --------------------
typedef union {
  struct {
    unsigned char PWM2DCH0:1;
    unsigned char PWM2DCH1:1;
    unsigned char PWM2DCH2:1;
    unsigned char PWM2DCH3:1;
    unsigned char PWM2DCH4:1;
    unsigned char PWM2DCH5:1;
    unsigned char PWM2DCH6:1;
    unsigned char PWM2DCH7:1;
  };
} __PWM2DCHbits_t;
extern volatile __PWM2DCHbits_t __at(PWM2DCH_ADDR) PWM2DCHbits;

// ----- PWM2DCL bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char PWM2DCL0:1;
    unsigned char PWM2DCL1:1;
  };
} __PWM2DCLbits_t;
extern volatile __PWM2DCLbits_t __at(PWM2DCL_ADDR) PWM2DCLbits;

// ----- STATUS bits --------------------
typedef union {
  struct {
    unsigned char C:1;
    unsigned char DC:1;
    unsigned char Z:1;
    unsigned char NOT_PD:1;
    unsigned char NOT_TO:1;
    unsigned char RP0:1;
    unsigned char RP1:1;
    unsigned char IRP:1;
  };
} __STATUSbits_t;
extern volatile __STATUSbits_t __at(STATUS_ADDR) STATUSbits;

// ----- T2CON bits --------------------
typedef union {
  struct {
    unsigned char T2CKPS0:1;
    unsigned char T2CKPS1:1;
    unsigned char TMR2ON:1;
    unsigned char TOUTPS0:1;
    unsigned char TOUTPS1:1;
    unsigned char TOUTPS2:1;
    unsigned char TOUTPS3:1;
    unsigned char :1;
  };
} __T2CONbits_t;
extern volatile __T2CONbits_t __at(T2CON_ADDR) T2CONbits;

// ----- TRISA bits --------------------
typedef union {
  struct {
    unsigned char TRISA0:1;
    unsigned char TRISA1:1;
    unsigned char TRISA2:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __TRISAbits_t;
extern volatile __TRISAbits_t __at(TRISA_ADDR) TRISAbits;

// ----- VREGCON bits --------------------
typedef union {
  struct {
    unsigned char VREGPM0:1;
    unsigned char VREGPM1:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __VREGCONbits_t;
extern volatile __VREGCONbits_t __at(VREGCON_ADDR) VREGCONbits;

// ----- WDTCON bits --------------------
typedef union {
  struct {
    unsigned char SWDTEN:1;
    unsigned char WDTPS0:1;
    unsigned char WDTPS1:1;
    unsigned char WDTPS2:1;
    unsigned char WDTPS3:1;
    unsigned char WDTPS4:1;
    unsigned char :1;
    unsigned char :1;
  };
} __WDTCONbits_t;
extern volatile __WDTCONbits_t __at(WDTCON_ADDR) WDTCONbits;

// ----- WPUA bits --------------------
typedef union {
  struct {
    unsigned char WPUA0:1;
    unsigned char WPUA1:1;
    unsigned char WPUA2:1;
    unsigned char WPUA3:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __WPUAbits_t;
extern volatile __WPUAbits_t __at(WPUA_ADDR) WPUAbits;


#ifndef NO_BIT_DEFINES

#define ADON                 ADCONbits.ADON                 /* bit 0 */
#define GO_NOT_DONE          ADCONbits.GO_NOT_DONE          /* bit 1 */
#define CHS0                 ADCONbits.CHS0                 /* bit 2 */
#define CHS1                 ADCONbits.CHS1                 /* bit 3 */
#define CHS2                 ADCONbits.CHS2                 /* bit 4 */
#define ADCS0                ADCONbits.ADCS0                /* bit 5 */
#define ADCS1                ADCONbits.ADCS1                /* bit 6 */
#define ADCS2                ADCONbits.ADCS2                /* bit 7 */

#define ANSA0                ANSELAbits.ANSA0               /* bit 0 */
#define ANSA1                ANSELAbits.ANSA1               /* bit 1 */
#define ANSA2                ANSELAbits.ANSA2               /* bit 2 */

#define BORRDY               BORCONbits.BORRDY              /* bit 0 */
#define BORFS                BORCONbits.BORFS               /* bit 6 */
#define SBOREN               BORCONbits.SBOREN              /* bit 7 */

#define LC1MODE0             CLC1CONbits.LC1MODE0           /* bit 0 */
#define LCMODE0              CLC1CONbits.LCMODE0            /* bit 0 */
#define LC1MODE1             CLC1CONbits.LC1MODE1           /* bit 1 */
#define LCMODE1              CLC1CONbits.LCMODE1            /* bit 1 */
#define LC1MODE2             CLC1CONbits.LC1MODE2           /* bit 2 */
#define LCMODE2              CLC1CONbits.LCMODE2            /* bit 2 */
#define LC1INTN              CLC1CONbits.LC1INTN            /* bit 3 */
#define LCINTN               CLC1CONbits.LCINTN             /* bit 3 */
#define LC1INTP              CLC1CONbits.LC1INTP            /* bit 4 */
#define LCINTP               CLC1CONbits.LCINTP             /* bit 4 */
#define LC1OUT               CLC1CONbits.LC1OUT             /* bit 5 */
#define LCOUT                CLC1CONbits.LCOUT              /* bit 5 */
#define LC1OE                CLC1CONbits.LC1OE              /* bit 6 */
#define LCOE                 CLC1CONbits.LCOE               /* bit 6 */
#define LC1EN                CLC1CONbits.LC1EN              /* bit 7 */
#define LCEN                 CLC1CONbits.LCEN               /* bit 7 */

#define D1N                  CLC1GLS0bits.D1N               /* bit 0, shadows bit in CLC1GLS1bits, CLC1GLS2bits */
#define LC1G1D1N             CLC1GLS0bits.LC1G1D1N          /* bit 0 */
#define D1T                  CLC1GLS0bits.D1T               /* bit 1, shadows bit in CLC1GLS1bits, CLC1GLS2bits */
#define LC1G1D1T             CLC1GLS0bits.LC1G1D1T          /* bit 1 */
#define D2N                  CLC1GLS0bits.D2N               /* bit 2, shadows bit in CLC1GLS1bits, CLC1GLS2bits */
#define LC1G1D2N             CLC1GLS0bits.LC1G1D2N          /* bit 2 */
#define D2T                  CLC1GLS0bits.D2T               /* bit 3, shadows bit in CLC1GLS1bits, CLC1GLS2bits */
#define LC1G1D2T             CLC1GLS0bits.LC1G1D2T          /* bit 3 */
#define D3N                  CLC1GLS0bits.D3N               /* bit 4, shadows bit in CLC1GLS1bits, CLC1GLS2bits */
#define LC1G1D3N             CLC1GLS0bits.LC1G1D3N          /* bit 4 */
#define D3T                  CLC1GLS0bits.D3T               /* bit 5, shadows bit in CLC1GLS1bits, CLC1GLS2bits */
#define LC1G1D3T             CLC1GLS0bits.LC1G1D3T          /* bit 5 */
#define D4N                  CLC1GLS0bits.D4N               /* bit 6, shadows bit in CLC1GLS1bits, CLC1GLS2bits */
#define LC1G1D4N             CLC1GLS0bits.LC1G1D4N          /* bit 6 */
#define D4T                  CLC1GLS0bits.D4T               /* bit 7, shadows bit in CLC1GLS1bits, CLC1GLS2bits */
#define LC1G1D4T             CLC1GLS0bits.LC1G1D4T          /* bit 7 */

#define LC1G2D1N             CLC1GLS1bits.LC1G2D1N          /* bit 0 */
#define LC1G2D1T             CLC1GLS1bits.LC1G2D1T          /* bit 1 */
#define LC1G2D2N             CLC1GLS1bits.LC1G2D2N          /* bit 2 */
#define LC1G2D2T             CLC1GLS1bits.LC1G2D2T          /* bit 3 */
#define LC1G2D3N             CLC1GLS1bits.LC1G2D3N          /* bit 4 */
#define LC1G2D3T             CLC1GLS1bits.LC1G2D3T          /* bit 5 */
#define LC1G2D4N             CLC1GLS1bits.LC1G2D4N          /* bit 6 */
#define LC1G2D4T             CLC1GLS1bits.LC1G2D4T          /* bit 7 */

#define LC1G3D1N             CLC1GLS2bits.LC1G3D1N          /* bit 0 */
#define LC1G3D1T             CLC1GLS2bits.LC1G3D1T          /* bit 1 */
#define LC1G3D2N             CLC1GLS2bits.LC1G3D2N          /* bit 2 */
#define LC1G3D2T             CLC1GLS2bits.LC1G3D2T          /* bit 3 */
#define LC1G3D3N             CLC1GLS2bits.LC1G3D3N          /* bit 4 */
#define LC1G3D3T             CLC1GLS2bits.LC1G3D3T          /* bit 5 */
#define LC1G3D4N             CLC1GLS2bits.LC1G3D4N          /* bit 6 */
#define LC1G3D4T             CLC1GLS2bits.LC1G3D4T          /* bit 7 */

#define G4D1N                CLC1GLS3bits.G4D1N             /* bit 0 */
#define LC1G4D1N             CLC1GLS3bits.LC1G4D1N          /* bit 0 */
#define G4D1T                CLC1GLS3bits.G4D1T             /* bit 1 */
#define LC1G4D1T             CLC1GLS3bits.LC1G4D1T          /* bit 1 */
#define G4D2N                CLC1GLS3bits.G4D2N             /* bit 2 */
#define LC1G4D2N             CLC1GLS3bits.LC1G4D2N          /* bit 2 */
#define G4D2T                CLC1GLS3bits.G4D2T             /* bit 3 */
#define LC1G4D2T             CLC1GLS3bits.LC1G4D2T          /* bit 3 */
#define G4D3N                CLC1GLS3bits.G4D3N             /* bit 4 */
#define LC1G4D3N             CLC1GLS3bits.LC1G4D3N          /* bit 4 */
#define G4D3T                CLC1GLS3bits.G4D3T             /* bit 5 */
#define LC1G4D3T             CLC1GLS3bits.LC1G4D3T          /* bit 5 */
#define G4D4N                CLC1GLS3bits.G4D4N             /* bit 6 */
#define LC1G4D4N             CLC1GLS3bits.LC1G4D4N          /* bit 6 */
#define G4D4T                CLC1GLS3bits.G4D4T             /* bit 7 */
#define LC1G4D4T             CLC1GLS3bits.LC1G4D4T          /* bit 7 */

#define G1POL                CLC1POLbits.G1POL              /* bit 0 */
#define LC1G1POL             CLC1POLbits.LC1G1POL           /* bit 0 */
#define G2POL                CLC1POLbits.G2POL              /* bit 1 */
#define LC1G2POL             CLC1POLbits.LC1G2POL           /* bit 1 */
#define G3POL                CLC1POLbits.G3POL              /* bit 2 */
#define LC1G3POL             CLC1POLbits.LC1G3POL           /* bit 2 */
#define G4POL                CLC1POLbits.G4POL              /* bit 3 */
#define LC1G4POL             CLC1POLbits.LC1G4POL           /* bit 3 */
#define LC1POL               CLC1POLbits.LC1POL             /* bit 7 */
#define POL                  CLC1POLbits.POL                /* bit 7 */

#define D1S0                 CLC1SEL0bits.D1S0              /* bit 0 */
#define LC1D1S0              CLC1SEL0bits.LC1D1S0           /* bit 0 */
#define D1S1                 CLC1SEL0bits.D1S1              /* bit 1 */
#define LC1D1S1              CLC1SEL0bits.LC1D1S1           /* bit 1 */
#define D1S2                 CLC1SEL0bits.D1S2              /* bit 2 */
#define LC1D1S2              CLC1SEL0bits.LC1D1S2           /* bit 2 */
#define D2S0                 CLC1SEL0bits.D2S0              /* bit 4 */
#define LC1D2S0              CLC1SEL0bits.LC1D2S0           /* bit 4 */
#define D2S1                 CLC1SEL0bits.D2S1              /* bit 5 */
#define LC1D2S1              CLC1SEL0bits.LC1D2S1           /* bit 5 */
#define D2S2                 CLC1SEL0bits.D2S2              /* bit 6 */
#define LC1D2S2              CLC1SEL0bits.LC1D2S2           /* bit 6 */

#define D3S0                 CLC1SEL1bits.D3S0              /* bit 0 */
#define LC1D3S0              CLC1SEL1bits.LC1D3S0           /* bit 0 */
#define D3S1                 CLC1SEL1bits.D3S1              /* bit 1 */
#define LC1D3S1              CLC1SEL1bits.LC1D3S1           /* bit 1 */
#define D3S2                 CLC1SEL1bits.D3S2              /* bit 2 */
#define LC1D3S2              CLC1SEL1bits.LC1D3S2           /* bit 2 */
#define D4S0                 CLC1SEL1bits.D4S0              /* bit 4 */
#define LC1D4S0              CLC1SEL1bits.LC1D4S0           /* bit 4 */
#define D4S1                 CLC1SEL1bits.D4S1              /* bit 5 */
#define LC1D4S1              CLC1SEL1bits.LC1D4S1           /* bit 5 */
#define D4S2                 CLC1SEL1bits.D4S2              /* bit 6 */
#define LC1D4S2              CLC1SEL1bits.LC1D4S2           /* bit 6 */

#define CLKROE               CLKRCONbits.CLKROE             /* bit 6 */

#define G1CS0                CWG1CON0bits.G1CS0             /* bit 0 */
#define G1POLA               CWG1CON0bits.G1POLA            /* bit 3 */
#define G1POLB               CWG1CON0bits.G1POLB            /* bit 4 */
#define G1OEA                CWG1CON0bits.G1OEA             /* bit 5 */
#define G1OEB                CWG1CON0bits.G1OEB             /* bit 6 */
#define G1EN                 CWG1CON0bits.G1EN              /* bit 7 */

#define G1IS0                CWG1CON1bits.G1IS0             /* bit 0 */
#define G1IS1                CWG1CON1bits.G1IS1             /* bit 1 */
#define G1ASDLA0             CWG1CON1bits.G1ASDLA0          /* bit 4 */
#define G1ASDLA1             CWG1CON1bits.G1ASDLA1          /* bit 5 */
#define G1ASDLB0             CWG1CON1bits.G1ASDLB0          /* bit 6 */
#define G1ASDLB1             CWG1CON1bits.G1ASDLB1          /* bit 7 */

#define G1ASDSFLT            CWG1CON2bits.G1ASDSFLT         /* bit 0 */
#define G1ASDSCLC1           CWG1CON2bits.G1ASDSCLC1        /* bit 1 */
#define G1ARSEN              CWG1CON2bits.G1ARSEN           /* bit 6 */
#define G1ASE                CWG1CON2bits.G1ASE             /* bit 7 */

#define CWG1DBF0             CWG1DBFbits.CWG1DBF0           /* bit 0 */
#define CWG1DBF1             CWG1DBFbits.CWG1DBF1           /* bit 1 */
#define CWG1DBF2             CWG1DBFbits.CWG1DBF2           /* bit 2 */
#define CWG1DBF3             CWG1DBFbits.CWG1DBF3           /* bit 3 */
#define CWG1DBF4             CWG1DBFbits.CWG1DBF4           /* bit 4 */
#define CWG1DBF5             CWG1DBFbits.CWG1DBF5           /* bit 5 */

#define CWG1DBR0             CWG1DBRbits.CWG1DBR0           /* bit 0 */
#define CWG1DBR1             CWG1DBRbits.CWG1DBR1           /* bit 1 */
#define CWG1DBR2             CWG1DBRbits.CWG1DBR2           /* bit 2 */
#define CWG1DBR3             CWG1DBRbits.CWG1DBR3           /* bit 3 */
#define CWG1DBR4             CWG1DBRbits.CWG1DBR4           /* bit 4 */
#define CWG1DBR5             CWG1DBRbits.CWG1DBR5           /* bit 5 */

#define ADFVR0               FVRCONbits.ADFVR0              /* bit 0 */
#define ADFVR1               FVRCONbits.ADFVR1              /* bit 1 */
#define TSRNG                FVRCONbits.TSRNG               /* bit 4 */
#define TSEN                 FVRCONbits.TSEN                /* bit 5 */
#define FVRRDY               FVRCONbits.FVRRDY              /* bit 6 */
#define FVREN                FVRCONbits.FVREN               /* bit 7 */

#define IOCIF                INTCONbits.IOCIF               /* bit 0 */
#define INTF                 INTCONbits.INTF                /* bit 1 */
#define TMR0IF               INTCONbits.TMR0IF              /* bit 2 */
#define IOCIE                INTCONbits.IOCIE               /* bit 3 */
#define INTE                 INTCONbits.INTE                /* bit 4 */
#define TMR0IE               INTCONbits.TMR0IE              /* bit 5 */
#define PEIE                 INTCONbits.PEIE                /* bit 6 */
#define GIE                  INTCONbits.GIE                 /* bit 7 */

#define IOCAF0               IOCAFbits.IOCAF0               /* bit 0 */
#define IOCAF1               IOCAFbits.IOCAF1               /* bit 1 */
#define IOCAF2               IOCAFbits.IOCAF2               /* bit 2 */
#define IOCAF3               IOCAFbits.IOCAF3               /* bit 3 */

#define IOCAN0               IOCANbits.IOCAN0               /* bit 0 */
#define IOCAN1               IOCANbits.IOCAN1               /* bit 1 */
#define IOCAN2               IOCANbits.IOCAN2               /* bit 2 */
#define IOCAN3               IOCANbits.IOCAN3               /* bit 3 */

#define IOCAP0               IOCAPbits.IOCAP0               /* bit 0 */
#define IOCAP1               IOCAPbits.IOCAP1               /* bit 1 */
#define IOCAP2               IOCAPbits.IOCAP2               /* bit 2 */
#define IOCAP3               IOCAPbits.IOCAP3               /* bit 3 */

#define LATA0                LATAbits.LATA0                 /* bit 0 */
#define LATA1                LATAbits.LATA1                 /* bit 1 */
#define LATA2                LATAbits.LATA2                 /* bit 2 */

#define NCO1ACC8             NCO1ACCHbits.NCO1ACC8          /* bit 0 */
#define NCO1ACC9             NCO1ACCHbits.NCO1ACC9          /* bit 1 */
#define NCO1ACC10            NCO1ACCHbits.NCO1ACC10         /* bit 2 */
#define NCO1ACC11            NCO1ACCHbits.NCO1ACC11         /* bit 3 */
#define NCO1ACC12            NCO1ACCHbits.NCO1ACC12         /* bit 4 */
#define NCO1ACC13            NCO1ACCHbits.NCO1ACC13         /* bit 5 */
#define NCO1ACC14            NCO1ACCHbits.NCO1ACC14         /* bit 6 */
#define NCO1ACC15            NCO1ACCHbits.NCO1ACC15         /* bit 7 */

#define NCO1ACC0             NCO1ACCLbits.NCO1ACC0          /* bit 0 */
#define NCO1ACC1             NCO1ACCLbits.NCO1ACC1          /* bit 1 */
#define NCO1ACC2             NCO1ACCLbits.NCO1ACC2          /* bit 2 */
#define NCO1ACC3             NCO1ACCLbits.NCO1ACC3          /* bit 3 */
#define NCO1ACC4             NCO1ACCLbits.NCO1ACC4          /* bit 4 */
#define NCO1ACC5             NCO1ACCLbits.NCO1ACC5          /* bit 5 */
#define NCO1ACC6             NCO1ACCLbits.NCO1ACC6          /* bit 6 */
#define NCO1ACC7             NCO1ACCLbits.NCO1ACC7          /* bit 7 */

#define NCO1ACC16            NCO1ACCUbits.NCO1ACC16         /* bit 0 */
#define NCO1ACC17            NCO1ACCUbits.NCO1ACC17         /* bit 1 */
#define NCO1ACC18            NCO1ACCUbits.NCO1ACC18         /* bit 2 */
#define NCO1ACC19            NCO1ACCUbits.NCO1ACC19         /* bit 3 */

#define N1CKS0               NCO1CLKbits.N1CKS0             /* bit 0 */
#define N1CKS1               NCO1CLKbits.N1CKS1             /* bit 1 */
#define N1PWS0               NCO1CLKbits.N1PWS0             /* bit 5 */
#define N1PWS1               NCO1CLKbits.N1PWS1             /* bit 6 */
#define N1PWS2               NCO1CLKbits.N1PWS2             /* bit 7 */

#define N1PFM                NCO1CONbits.N1PFM              /* bit 0 */
#define N1POL                NCO1CONbits.N1POL              /* bit 4 */
#define N1OUT                NCO1CONbits.N1OUT              /* bit 5 */
#define N1OE                 NCO1CONbits.N1OE               /* bit 6 */
#define N1EN                 NCO1CONbits.N1EN               /* bit 7 */

#define NCO1INC8             NCO1INCHbits.NCO1INC8          /* bit 0 */
#define NCO1INC9             NCO1INCHbits.NCO1INC9          /* bit 1 */
#define NCO1INC10            NCO1INCHbits.NCO1INC10         /* bit 2 */
#define NCO1INC11            NCO1INCHbits.NCO1INC11         /* bit 3 */
#define NCO1INC12            NCO1INCHbits.NCO1INC12         /* bit 4 */
#define NCO1INC13            NCO1INCHbits.NCO1INC13         /* bit 5 */
#define NCO1INC14            NCO1INCHbits.NCO1INC14         /* bit 6 */
#define NCO1INC15            NCO1INCHbits.NCO1INC15         /* bit 7 */

#define NCO1INC0             NCO1INCLbits.NCO1INC0          /* bit 0 */
#define NCO1INC1             NCO1INCLbits.NCO1INC1          /* bit 1 */
#define NCO1INC2             NCO1INCLbits.NCO1INC2          /* bit 2 */
#define NCO1INC3             NCO1INCLbits.NCO1INC3          /* bit 3 */
#define NCO1INC4             NCO1INCLbits.NCO1INC4          /* bit 4 */
#define NCO1INC5             NCO1INCLbits.NCO1INC5          /* bit 5 */
#define NCO1INC6             NCO1INCLbits.NCO1INC6          /* bit 6 */
#define NCO1INC7             NCO1INCLbits.NCO1INC7          /* bit 7 */

#define PS0                  OPTION_REGbits.PS0             /* bit 0 */
#define PS1                  OPTION_REGbits.PS1             /* bit 1 */
#define PS2                  OPTION_REGbits.PS2             /* bit 2 */
#define PSA                  OPTION_REGbits.PSA             /* bit 3 */
#define T0SE                 OPTION_REGbits.T0SE            /* bit 4 */
#define T0CS                 OPTION_REGbits.T0CS            /* bit 5 */
#define INTEDG               OPTION_REGbits.INTEDG          /* bit 6 */
#define NOT_WPUEN            OPTION_REGbits.NOT_WPUEN       /* bit 7 */

#define HFIOFS               OSCCONbits.HFIOFS              /* bit 0 */
#define LFIOFR               OSCCONbits.LFIOFR              /* bit 1 */
#define HFIOFR               OSCCONbits.HFIOFR              /* bit 3 */
#define IRCF0                OSCCONbits.IRCF0               /* bit 4 */
#define IRCF1                OSCCONbits.IRCF1               /* bit 5 */
#define IRCF2                OSCCONbits.IRCF2               /* bit 6 */

#define PCLH0                PCLATHbits.PCLH0               /* bit 0 */

#define NOT_BOR              PCONbits.NOT_BOR               /* bit 0 */
#define NOT_POR              PCONbits.NOT_POR               /* bit 1 */

#define TMR2IE               PIE1bits.TMR2IE                /* bit 1 */
#define CLC1IE               PIE1bits.CLC1IE                /* bit 3 */
#define NCO1IE               PIE1bits.NCO1IE                /* bit 4 */
#define ADIE                 PIE1bits.ADIE                  /* bit 6 */

#define TMR2IF               PIR1bits.TMR2IF                /* bit 1 */
#define CLC1IF               PIR1bits.CLC1IF                /* bit 3 */
#define NCO1IF               PIR1bits.NCO1IF                /* bit 4 */
#define ADIF                 PIR1bits.ADIF                  /* bit 6 */

#define PMADR8               PMADRHbits.PMADR8              /* bit 0 */

#define RD                   PMCON1bits.RD                  /* bit 0 */
#define WR                   PMCON1bits.WR                  /* bit 1 */
#define WREN                 PMCON1bits.WREN                /* bit 2 */
#define WRERR                PMCON1bits.WRERR               /* bit 3 */
#define FREE                 PMCON1bits.FREE                /* bit 4 */
#define LWLO                 PMCON1bits.LWLO                /* bit 5 */
#define CFGS                 PMCON1bits.CFGS                /* bit 6 */

#define RA0                  PORTAbits.RA0                  /* bit 0 */
#define RA1                  PORTAbits.RA1                  /* bit 1 */
#define RA2                  PORTAbits.RA2                  /* bit 2 */
#define RA3                  PORTAbits.RA3                  /* bit 3 */

#define PWM1POL              PWM1CONbits.PWM1POL            /* bit 4, shadows bit in PWM1CON0bits */
#define PWM1OUT              PWM1CONbits.PWM1OUT            /* bit 5, shadows bit in PWM1CON0bits */
#define PWM1OE               PWM1CONbits.PWM1OE             /* bit 6, shadows bit in PWM1CON0bits */
#define PWM1EN               PWM1CONbits.PWM1EN             /* bit 7, shadows bit in PWM1CON0bits */

#define PWM1DCH0             PWM1DCHbits.PWM1DCH0           /* bit 0 */
#define PWM1DCH1             PWM1DCHbits.PWM1DCH1           /* bit 1 */
#define PWM1DCH2             PWM1DCHbits.PWM1DCH2           /* bit 2 */
#define PWM1DCH3             PWM1DCHbits.PWM1DCH3           /* bit 3 */
#define PWM1DCH4             PWM1DCHbits.PWM1DCH4           /* bit 4 */
#define PWM1DCH5             PWM1DCHbits.PWM1DCH5           /* bit 5 */
#define PWM1DCH6             PWM1DCHbits.PWM1DCH6           /* bit 6 */
#define PWM1DCH7             PWM1DCHbits.PWM1DCH7           /* bit 7 */

#define PWM1DCL0             PWM1DCLbits.PWM1DCL0           /* bit 6 */
#define PWM1DCL1             PWM1DCLbits.PWM1DCL1           /* bit 7 */

#define PWM2POL              PWM2CONbits.PWM2POL            /* bit 4, shadows bit in PWM2CON0bits */
#define PWM2OUT              PWM2CONbits.PWM2OUT            /* bit 5, shadows bit in PWM2CON0bits */
#define PWM2OE               PWM2CONbits.PWM2OE             /* bit 6, shadows bit in PWM2CON0bits */
#define PWM2EN               PWM2CONbits.PWM2EN             /* bit 7, shadows bit in PWM2CON0bits */

#define PWM2DCH0             PWM2DCHbits.PWM2DCH0           /* bit 0 */
#define PWM2DCH1             PWM2DCHbits.PWM2DCH1           /* bit 1 */
#define PWM2DCH2             PWM2DCHbits.PWM2DCH2           /* bit 2 */
#define PWM2DCH3             PWM2DCHbits.PWM2DCH3           /* bit 3 */
#define PWM2DCH4             PWM2DCHbits.PWM2DCH4           /* bit 4 */
#define PWM2DCH5             PWM2DCHbits.PWM2DCH5           /* bit 5 */
#define PWM2DCH6             PWM2DCHbits.PWM2DCH6           /* bit 6 */
#define PWM2DCH7             PWM2DCHbits.PWM2DCH7           /* bit 7 */

#define PWM2DCL0             PWM2DCLbits.PWM2DCL0           /* bit 6 */
#define PWM2DCL1             PWM2DCLbits.PWM2DCL1           /* bit 7 */

#define C                    STATUSbits.C                   /* bit 0 */
#define DC                   STATUSbits.DC                  /* bit 1 */
#define Z                    STATUSbits.Z                   /* bit 2 */
#define NOT_PD               STATUSbits.NOT_PD              /* bit 3 */
#define NOT_TO               STATUSbits.NOT_TO              /* bit 4 */
#define RP0                  STATUSbits.RP0                 /* bit 5 */
#define RP1                  STATUSbits.RP1                 /* bit 6 */
#define IRP                  STATUSbits.IRP                 /* bit 7 */

#define T2CKPS0              T2CONbits.T2CKPS0              /* bit 0 */
#define T2CKPS1              T2CONbits.T2CKPS1              /* bit 1 */
#define TMR2ON               T2CONbits.TMR2ON               /* bit 2 */
#define TOUTPS0              T2CONbits.TOUTPS0              /* bit 3 */
#define TOUTPS1              T2CONbits.TOUTPS1              /* bit 4 */
#define TOUTPS2              T2CONbits.TOUTPS2              /* bit 5 */
#define TOUTPS3              T2CONbits.TOUTPS3              /* bit 6 */

#define TRISA0               TRISAbits.TRISA0               /* bit 0 */
#define TRISA1               TRISAbits.TRISA1               /* bit 1 */
#define TRISA2               TRISAbits.TRISA2               /* bit 2 */

#define VREGPM0              VREGCONbits.VREGPM0            /* bit 0 */
#define VREGPM1              VREGCONbits.VREGPM1            /* bit 1 */

#define SWDTEN               WDTCONbits.SWDTEN              /* bit 0 */
#define WDTPS0               WDTCONbits.WDTPS0              /* bit 1 */
#define WDTPS1               WDTCONbits.WDTPS1              /* bit 2 */
#define WDTPS2               WDTCONbits.WDTPS2              /* bit 3 */
#define WDTPS3               WDTCONbits.WDTPS3              /* bit 4 */
#define WDTPS4               WDTCONbits.WDTPS4              /* bit 5 */

#define WPUA0                WPUAbits.WPUA0                 /* bit 0 */
#define WPUA1                WPUAbits.WPUA1                 /* bit 1 */
#define WPUA2                WPUAbits.WPUA2                 /* bit 2 */
#define WPUA3                WPUAbits.WPUA3                 /* bit 3 */
#endif /* NO_BIT_DEFINES */

#ifndef NO_LEGACY_NAMES
#define ADCON_bits           ADCONbits
#define ANSELA_bits          ANSELAbits
#define BORCON_bits          BORCONbits
#define CLC1CON_bits         CLC1CONbits
#define CLC1GLS0_bits        CLC1GLS0bits
#define CLC1GLS1_bits        CLC1GLS1bits
#define CLC1GLS2_bits        CLC1GLS2bits
#define CLC1GLS3_bits        CLC1GLS3bits
#define CLC1POL_bits         CLC1POLbits
#define CLC1SEL0_bits        CLC1SEL0bits
#define CLC1SEL1_bits        CLC1SEL1bits
#define CLKRCON_bits         CLKRCONbits
#define CWG1CON0_bits        CWG1CON0bits
#define CWG1CON1_bits        CWG1CON1bits
#define CWG1CON2_bits        CWG1CON2bits
#define CWG1DBF_bits         CWG1DBFbits
#define CWG1DBR_bits         CWG1DBRbits
#define FVRCON_bits          FVRCONbits
#define INTCON_bits          INTCONbits
#define IOCAF_bits           IOCAFbits
#define IOCAN_bits           IOCANbits
#define IOCAP_bits           IOCAPbits
#define LATA_bits            LATAbits
#define NCO1ACCH_bits        NCO1ACCHbits
#define NCO1ACCL_bits        NCO1ACCLbits
#define NCO1ACCU_bits        NCO1ACCUbits
#define NCO1CLK_bits         NCO1CLKbits
#define NCO1CON_bits         NCO1CONbits
#define NCO1INCH_bits        NCO1INCHbits
#define NCO1INCL_bits        NCO1INCLbits
#define OPTION_REG_bits      OPTION_REGbits
#define OSCCON_bits          OSCCONbits
#define PCLATH_bits          PCLATHbits
#define PCON_bits            PCONbits
#define PIE1_bits            PIE1bits
#define PIR1_bits            PIR1bits
#define PMADRH_bits          PMADRHbits
#define PMCON1_bits          PMCON1bits
#define PORTA_bits           PORTAbits
#define PWM1CON_bits         PWM1CONbits
#define PWM1CON0_bits        PWM1CON0bits
#define PWM1DCH_bits         PWM1DCHbits
#define PWM1DCL_bits         PWM1DCLbits
#define PWM2CON_bits         PWM2CONbits
#define PWM2CON0_bits        PWM2CON0bits
#define PWM2DCH_bits         PWM2DCHbits
#define PWM2DCL_bits         PWM2DCLbits
#define STATUS_bits          STATUSbits
#define T2CON_bits           T2CONbits
#define TRISA_bits           TRISAbits
#define VREGCON_bits         VREGCONbits
#define WDTCON_bits          WDTCONbits
#define WPUA_bits            WPUAbits
#endif /* NO_LEGACY_NAMES */

#endif
