//
// Register Declarations for Microchip 12F752 Processor
//
//
// This header file was automatically generated by:
//
// inc2h.pl
//
// Copyright (c) 2002, Kevin L. Pauba, All Rights Reserved
//
// SDCC is licensed under the GNU Public license (GPL) v2. Note that
// this license covers the code to the compiler and other executables,
// but explicitly does not cover any code or objects generated by sdcc.
//
// For pic device libraries and header files which are derived from
// Microchip header (.inc) and linker script (.lkr) files Microchip
// requires that "The header files should state that they are only to be
// used with authentic Microchip devices" which makes them incompatible
// with the GPL. Pic device libraries and header files are located at
// non-free/lib and non-free/include directories respectively.
// Sdcc should be run with the --use-non-free command line option in
// order to include non-free header files and libraries.
//
// See http://sdcc.sourceforge.net/ for the latest information on sdcc.
//
// 
#ifndef P12F752_H
#define P12F752_H

//
// Register addresses.
//
#define INDF_ADDR       0x0000
#define TMR0_ADDR       0x0001
#define PCL_ADDR        0x0002
#define STATUS_ADDR     0x0003
#define FSR_ADDR        0x0004
#define PORTA_ADDR      0x0005
#define IOCAF_ADDR      0x0008
#define PCLATH_ADDR     0x000A
#define INTCON_ADDR     0x000B
#define PIR1_ADDR       0x000C
#define PIR2_ADDR       0x000D
#define TMR1_ADDR       0x000F
#define TMR1L_ADDR      0x000F
#define TMR1H_ADDR      0x0010
#define T1CON_ADDR      0x0011
#define T1GCON_ADDR     0x0012
#define CCPR1_ADDR      0x0013
#define CCPR1L_ADDR     0x0013
#define CCPR1H_ADDR     0x0014
#define CCP1CON_ADDR    0x0015
#define ADRES_ADDR      0x001C
#define ADRESL_ADDR     0x001C
#define ADRESH_ADDR     0x001D
#define ADCON0_ADDR     0x001E
#define ADCON1_ADDR     0x001F
#define OPTION_REG_ADDR 0x0081
#define TRISA_ADDR      0x0085
#define IOCAP_ADDR      0x0088
#define PIE1_ADDR       0x008C
#define PIE2_ADDR       0x008D
#define OSCCON_ADDR     0x008F
#define FVRCON_ADDR     0x0090
#define DACCON0_ADDR    0x0091
#define DACCON1_ADDR    0x0092
#define C2CON0_ADDR     0x009B
#define CM2CON0_ADDR    0x009B
#define C2CON1_ADDR     0x009C
#define CM2CON1_ADDR    0x009C
#define C1CON0_ADDR     0x009D
#define CM1CON0_ADDR    0x009D
#define C1CON1_ADDR     0x009E
#define CM1CON1_ADDR    0x009E
#define CMOUT_ADDR      0x009F
#define MCOUT_ADDR      0x009F
#define LATA_ADDR       0x0105
#define IOCAN_ADDR      0x0108
#define WPUA_ADDR       0x010C
#define SLRCONA_ADDR    0x010D
#define PCON_ADDR       0x010F
#define TMR2_ADDR       0x0110
#define PR2_ADDR        0x0111
#define T2CON_ADDR      0x0112
#define HLTMR1_ADDR     0x0113
#define HLTPR1_ADDR     0x0114
#define HLT1CON0_ADDR   0x0115
#define HLT1CON1_ADDR   0x0116
#define ANSELA_ADDR     0x0185
#define APFCON_ADDR     0x0188
#define OSCTUNE_ADDR    0x0189
#define PMCON1_ADDR     0x018C
#define PMCON2_ADDR     0x018D
#define PMADR_ADDR      0x018E
#define PMADRL_ADDR     0x018E
#define PMADRH_ADDR     0x018F
#define PMDAT_ADDR      0x0190
#define PMDATL_ADDR     0x0190
#define PMDATH_ADDR     0x0191
#define COG1PH_ADDR     0x0192
#define COG1BLK_ADDR    0x0193
#define COG1DB_ADDR     0x0194
#define COG1CON0_ADDR   0x0195
#define COG1CON1_ADDR   0x0196
#define COG1ASD_ADDR    0x0197

//
// Memory organization.
//



//         LIST

//==========================================================================
//  MPASM PIC12F752 processor include
//
//  (c) Copyright 1999-2012 Microchip Technology, All rights reserved
//==========================================================================

//         NOLIST

//==========================================================================
//  This header file defines configurations, registers, and other useful
//  bits of information for the PIC12F752 microcontroller.  These names
//  are taken to match the data sheets as closely as possible.
//
//  Note that the processor must be selected before this file is included.
//  The processor may be selected the following ways:
//
//       1. Command line switch:
//               C:\MPASM MYFILE.ASM /PIC12F752
//       2. LIST directive in the source file
//               LIST   P=PIC12F752
//       3. Processor Type entry in the MPASM full-screen interface
//       4. Setting the processor in the MPLAB Project Dialog
//==========================================================================

//==========================================================================
//
//       Verify Processor
//
//==========================================================================
//        IFNDEF __12F752
//            MESSG "Processor-header file mismatch.  Verify selected processor."
//         ENDIF



//==========================================================================
//
//       Register Definitions
//
//==========================================================================

#define W                    0x0000
#define F                    0x0001

//----- Register Files -----------------------------------------------------

//-----Bank0------------------
extern __sfr  __at (INDF_ADDR)                    INDF;
extern __sfr  __at (TMR0_ADDR)                    TMR0;
extern __sfr  __at (PCL_ADDR)                     PCL;
extern __sfr  __at (STATUS_ADDR)                  STATUS;
extern __sfr  __at (FSR_ADDR)                     FSR;
extern __sfr  __at (PORTA_ADDR)                   PORTA;
extern __sfr  __at (IOCAF_ADDR)                   IOCAF;
extern __sfr  __at (PCLATH_ADDR)                  PCLATH;
extern __sfr  __at (INTCON_ADDR)                  INTCON;
extern __sfr  __at (PIR1_ADDR)                    PIR1;
extern __sfr  __at (PIR2_ADDR)                    PIR2;
extern __sfr  __at (TMR1_ADDR)                    TMR1;
extern __sfr  __at (TMR1L_ADDR)                   TMR1L;
extern __sfr  __at (TMR1H_ADDR)                   TMR1H;
extern __sfr  __at (T1CON_ADDR)                   T1CON;
extern __sfr  __at (T1GCON_ADDR)                  T1GCON;
extern __sfr  __at (CCPR1_ADDR)                   CCPR1;
extern __sfr  __at (CCPR1L_ADDR)                  CCPR1L;
extern __sfr  __at (CCPR1H_ADDR)                  CCPR1H;
extern __sfr  __at (CCP1CON_ADDR)                 CCP1CON;
extern __sfr  __at (ADRES_ADDR)                   ADRES;
extern __sfr  __at (ADRESL_ADDR)                  ADRESL;
extern __sfr  __at (ADRESH_ADDR)                  ADRESH;
extern __sfr  __at (ADCON0_ADDR)                  ADCON0;
extern __sfr  __at (ADCON1_ADDR)                  ADCON1;

//-----Bank1------------------
extern __sfr  __at (OPTION_REG_ADDR)              OPTION_REG;
extern __sfr  __at (TRISA_ADDR)                   TRISA;
extern __sfr  __at (IOCAP_ADDR)                   IOCAP;
extern __sfr  __at (PIE1_ADDR)                    PIE1;
extern __sfr  __at (PIE2_ADDR)                    PIE2;
extern __sfr  __at (OSCCON_ADDR)                  OSCCON;
extern __sfr  __at (FVRCON_ADDR)                  FVRCON;
extern __sfr  __at (DACCON0_ADDR)                 DACCON0;
extern __sfr  __at (DACCON1_ADDR)                 DACCON1;
extern __sfr  __at (C2CON0_ADDR)                  C2CON0;
extern __sfr  __at (CM2CON0_ADDR)                 CM2CON0;
extern __sfr  __at (C2CON1_ADDR)                  C2CON1;
extern __sfr  __at (CM2CON1_ADDR)                 CM2CON1;
extern __sfr  __at (C1CON0_ADDR)                  C1CON0;
extern __sfr  __at (CM1CON0_ADDR)                 CM1CON0;
extern __sfr  __at (C1CON1_ADDR)                  C1CON1;
extern __sfr  __at (CM1CON1_ADDR)                 CM1CON1;
extern __sfr  __at (CMOUT_ADDR)                   CMOUT;
extern __sfr  __at (MCOUT_ADDR)                   MCOUT;

//-----Bank2------------------
extern __sfr  __at (LATA_ADDR)                    LATA;
extern __sfr  __at (IOCAN_ADDR)                   IOCAN;
extern __sfr  __at (WPUA_ADDR)                    WPUA;
extern __sfr  __at (SLRCONA_ADDR)                 SLRCONA;
extern __sfr  __at (PCON_ADDR)                    PCON;
extern __sfr  __at (TMR2_ADDR)                    TMR2;
extern __sfr  __at (PR2_ADDR)                     PR2;
extern __sfr  __at (T2CON_ADDR)                   T2CON;
extern __sfr  __at (HLTMR1_ADDR)                  HLTMR1;
extern __sfr  __at (HLTPR1_ADDR)                  HLTPR1;
extern __sfr  __at (HLT1CON0_ADDR)                HLT1CON0;
extern __sfr  __at (HLT1CON1_ADDR)                HLT1CON1;

//-----Bank3------------------
extern __sfr  __at (ANSELA_ADDR)                  ANSELA;
extern __sfr  __at (APFCON_ADDR)                  APFCON;
extern __sfr  __at (OSCTUNE_ADDR)                 OSCTUNE;
extern __sfr  __at (PMCON1_ADDR)                  PMCON1;
extern __sfr  __at (PMCON2_ADDR)                  PMCON2;
extern __sfr  __at (PMADR_ADDR)                   PMADR;
extern __sfr  __at (PMADRL_ADDR)                  PMADRL;
extern __sfr  __at (PMADRH_ADDR)                  PMADRH;
extern __sfr  __at (PMDAT_ADDR)                   PMDAT;
extern __sfr  __at (PMDATL_ADDR)                  PMDATL;
extern __sfr  __at (PMDATH_ADDR)                  PMDATH;
extern __sfr  __at (COG1PH_ADDR)                  COG1PH;
extern __sfr  __at (COG1BLK_ADDR)                 COG1BLK;
extern __sfr  __at (COG1DB_ADDR)                  COG1DB;
extern __sfr  __at (COG1CON0_ADDR)                COG1CON0;
extern __sfr  __at (COG1CON1_ADDR)                COG1CON1;
extern __sfr  __at (COG1ASD_ADDR)                 COG1ASD;

//----- STATUS Bits -----------------------------------------------------


//----- PORTA Bits -----------------------------------------------------


//----- IOCAF Bits -----------------------------------------------------


//----- INTCON Bits -----------------------------------------------------


//----- PIR1 Bits -----------------------------------------------------


//----- PIR2 Bits -----------------------------------------------------


//----- T1CON Bits -----------------------------------------------------



//----- T1GCON Bits -----------------------------------------------------



//----- CCP1CON Bits -----------------------------------------------------


//----- ADCON0 Bits -----------------------------------------------------



//----- ADCON1 Bits -----------------------------------------------------


//----- OPTION_REG Bits -----------------------------------------------------



//----- TRISA Bits -----------------------------------------------------


//----- IOCAP Bits -----------------------------------------------------


//----- PIE1 Bits -----------------------------------------------------


//----- PIE2 Bits -----------------------------------------------------


//----- OSCCON Bits -----------------------------------------------------



//----- FVRCON Bits -----------------------------------------------------


//----- DACCON0 Bits -----------------------------------------------------


//----- DACCON1 Bits -----------------------------------------------------


//----- C2CON0 Bits -----------------------------------------------------


//----- CM2CON0 Bits -----------------------------------------------------


//----- C2CON1 Bits -----------------------------------------------------



//----- CM2CON1 Bits -----------------------------------------------------



//----- C1CON0 Bits -----------------------------------------------------


//----- CM1CON0 Bits -----------------------------------------------------


//----- C1CON1 Bits -----------------------------------------------------



//----- CM1CON1 Bits -----------------------------------------------------



//----- CMOUT Bits -----------------------------------------------------


//----- MCOUT Bits -----------------------------------------------------


//----- LATA Bits -----------------------------------------------------


//----- IOCAN Bits -----------------------------------------------------


//----- WPUA Bits -----------------------------------------------------


//----- SLRCONA Bits -----------------------------------------------------


//----- PCON Bits -----------------------------------------------------


//----- T2CON Bits -----------------------------------------------------



//----- HLT1CON0 Bits -----------------------------------------------------



//----- HLT1CON1 Bits -----------------------------------------------------



//----- ANSELA Bits -----------------------------------------------------


//----- APFCON Bits -----------------------------------------------------


//----- OSCTUNE Bits -----------------------------------------------------


//----- PMCON1 Bits -----------------------------------------------------


//----- COG1PH Bits -----------------------------------------------------


//----- COG1BLK Bits -----------------------------------------------------


//----- COG1DB Bits -----------------------------------------------------


//----- COG1CON0 Bits -----------------------------------------------------



//----- COG1CON1 Bits -----------------------------------------------------



//----- COG1ASD Bits -----------------------------------------------------




//==========================================================================
//
//       RAM Definitions
//
//==========================================================================
//        __MAXRAM  H'01FF'
//        __BADRAM  H'0006'-H'0007'
//        __BADRAM  H'0009'
//        __BADRAM  H'000E'
//        __BADRAM  H'0016'-H'001B'
//        __BADRAM  H'0020'-H'003F'
//        __BADRAM  H'0086'-H'0087'
//        __BADRAM  H'0089'
//        __BADRAM  H'008E'
//        __BADRAM  H'0093'-H'009A'
//        __BADRAM  H'00A0'-H'00EF'
//        __BADRAM  H'0106'-H'0107'
//        __BADRAM  H'0109'
//        __BADRAM  H'010E'
//        __BADRAM  H'0117'-H'011F'
//        __BADRAM  H'0120'-H'016F'
//        __BADRAM  H'0186'-H'0187'
//        __BADRAM  H'0198'-H'019F'
//        __BADRAM  H'01A0'-H'01EF'

//==========================================================================
//
//       Configuration Bits
//
//   NAME            Address
//   CONFIG            2007h
//
//==========================================================================

// The following is an assignment of address values for all of the
// configuration registers for the purpose of table reads
#define _CONFIG              0x2007

//----- CONFIG Options --------------------------------------------------
#define _FOSC0_INT           0x3FFE    // Internal oscillator mode.  I/O function on RA5/CLKIN
#define _FOSC0_EC            0x3FFF    // EC oscillator mode.  CLKIN function on RA5/CLKIN

#define _WDTE_OFF            0x3FF7    // Watchdog Timer disabled
#define _WDTE_ON             0x3FFF    // Watchdog Timer enabled

#define _PWRTE_ON            0x3FEF    // Power-up Timer enabled
#define _PWRTE_OFF           0x3FFF    // Power-up Timer disabled

#define _MCLRE_OFF           0x3FDF    // MCLR pin is alternate function
#define _MCLRE_ON            0x3FFF    // MCLR pin is MCLR function with internal weak pullup

#define _CP_ON               0x3FBF    // Program memory code protection is enabled
#define _CP_OFF              0x3FFF    // Program memory code protection is disabled

#define _BOREN_DIS           0x3CFF    // BOR disabled
#define _BOREN_SLEEP_DIS     0x3EFF    // BOR enabled during operation and disabled in Sleep
#define _BOREN_EN            0x3FFF    // BOR enabled

#define _WRT_ALL             0x33FF    // 000h to 3FFh self-write protected
#define _WRT_HALF            0x37FF    // 000h to 1FFh self-write protected
#define _WRT_FOURTH          0x3BFF    // 000h to 0FFh self-write protected
#define _WRT_OFF             0x3FFF    // Flash self-write protection off

#define _CLKOUTEN_ON         0x2FFF    // CLKOUT function enabled.  CLKOUT pin is CLKOUT
#define _CLKOUTEN_OFF        0x3FFF    // CLKOUT function disabled.  CLKOUT pin acts as I/O

//----- DEVID Equates --------------------------------------------------
#define _DEVID1              0x2006

//----- IDLOC Equates --------------------------------------------------
#define _IDLOC0              0x2000
#define _IDLOC1              0x2001
#define _IDLOC2              0x2002
#define _IDLOC3              0x2003

//         LIST

// ----- ADCON0 bits --------------------
typedef union {
  struct {
    unsigned char ADON:1;
    unsigned char GO_NOT_DONE:1;
    unsigned char CHS0:1;
    unsigned char CHS1:1;
    unsigned char CHS2:1;
    unsigned char CHS3:1;
    unsigned char VCFG:1;
    unsigned char ADFM:1;
  };
} __ADCON0bits_t;
extern volatile __ADCON0bits_t __at(ADCON0_ADDR) ADCON0bits;

// ----- ADCON1 bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char ADCS0:1;
    unsigned char ADCS1:1;
    unsigned char ADCS2:1;
    unsigned char :1;
  };
} __ADCON1bits_t;
extern volatile __ADCON1bits_t __at(ADCON1_ADDR) ADCON1bits;

// ----- ANSELA bits --------------------
typedef union {
  struct {
    unsigned char ANSA0:1;
    unsigned char ANSA1:1;
    unsigned char ANSA2:1;
    unsigned char :1;
    unsigned char ANSA4:1;
    unsigned char ANSA5:1;
    unsigned char :1;
    unsigned char :1;
  };
} __ANSELAbits_t;
extern volatile __ANSELAbits_t __at(ANSELA_ADDR) ANSELAbits;

// ----- APFCON bits --------------------
typedef union {
  struct {
    unsigned char COG1O0SEL:1;
    unsigned char COG1O1SEL:1;
    unsigned char COG1FSEL:1;
    unsigned char :1;
    unsigned char T1GSEL:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __APFCONbits_t;
extern volatile __APFCONbits_t __at(APFCON_ADDR) APFCONbits;

// ----- C1CON0 bits --------------------
typedef union {
  struct {
    unsigned char C1SYNC:1;
    unsigned char C1HYS:1;
    unsigned char C1SP:1;
    unsigned char C1ZLF:1;
    unsigned char C1POL:1;
    unsigned char C1OE:1;
    unsigned char C1OUT:1;
    unsigned char C1ON:1;
  };
} __C1CON0bits_t;
extern volatile __C1CON0bits_t __at(C1CON0_ADDR) C1CON0bits;

// ----- C1CON1 bits --------------------
typedef union {
  struct {
    unsigned char C1NCH0:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char C1PCH0:1;
    unsigned char C1PCH1:1;
    unsigned char C1INTN:1;
    unsigned char C1INTP:1;
  };
} __C1CON1bits_t;
extern volatile __C1CON1bits_t __at(C1CON1_ADDR) C1CON1bits;

// ----- C2CON0 bits --------------------
typedef union {
  struct {
    unsigned char C2SYNC:1;
    unsigned char C2HYS:1;
    unsigned char C2SP:1;
    unsigned char C2ZLF:1;
    unsigned char C2POL:1;
    unsigned char C2OE:1;
    unsigned char C2OUT:1;
    unsigned char C2ON:1;
  };
} __C2CON0bits_t;
extern volatile __C2CON0bits_t __at(C2CON0_ADDR) C2CON0bits;

// ----- C2CON1 bits --------------------
typedef union {
  struct {
    unsigned char C2NCH0:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char C2PCH0:1;
    unsigned char C2PCH1:1;
    unsigned char C2INTN:1;
    unsigned char C2INTP:1;
  };
} __C2CON1bits_t;
extern volatile __C2CON1bits_t __at(C2CON1_ADDR) C2CON1bits;

// ----- CCP1CON bits --------------------
typedef union {
  struct {
    unsigned char CCP1M0:1;
    unsigned char CCP1M1:1;
    unsigned char CCP1M2:1;
    unsigned char CCP1M3:1;
    unsigned char DC1B0:1;
    unsigned char DC1B1:1;
    unsigned char :1;
    unsigned char :1;
  };
} __CCP1CONbits_t;
extern volatile __CCP1CONbits_t __at(CCP1CON_ADDR) CCP1CONbits;

// ----- CM1CON0 bits --------------------
typedef union {
  struct {
    unsigned char C1SYNC:1;
    unsigned char C1HYS:1;
    unsigned char C1SP:1;
    unsigned char C1ZLF:1;
    unsigned char C1POL:1;
    unsigned char C1OE:1;
    unsigned char C1OUT:1;
    unsigned char C1ON:1;
  };
} __CM1CON0bits_t;
extern volatile __CM1CON0bits_t __at(CM1CON0_ADDR) CM1CON0bits;

// ----- CM1CON1 bits --------------------
typedef union {
  struct {
    unsigned char C1NCH0:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char C1PCH0:1;
    unsigned char C1PCH1:1;
    unsigned char C1INTN:1;
    unsigned char C1INTP:1;
  };
} __CM1CON1bits_t;
extern volatile __CM1CON1bits_t __at(CM1CON1_ADDR) CM1CON1bits;

// ----- CM2CON0 bits --------------------
typedef union {
  struct {
    unsigned char C2SYNC:1;
    unsigned char C2HYS:1;
    unsigned char C2SP:1;
    unsigned char C2ZLF:1;
    unsigned char C2POL:1;
    unsigned char C2OE:1;
    unsigned char C2OUT:1;
    unsigned char C2ON:1;
  };
} __CM2CON0bits_t;
extern volatile __CM2CON0bits_t __at(CM2CON0_ADDR) CM2CON0bits;

// ----- CM2CON1 bits --------------------
typedef union {
  struct {
    unsigned char C2NCH0:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char C2PCH0:1;
    unsigned char C2PCH1:1;
    unsigned char C2INTN:1;
    unsigned char C2INTP:1;
  };
} __CM2CON1bits_t;
extern volatile __CM2CON1bits_t __at(CM2CON1_ADDR) CM2CON1bits;

// ----- CMOUT bits --------------------
typedef union {
  struct {
    unsigned char MCOUT1:1;
    unsigned char MCOUT2:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __CMOUTbits_t;
extern volatile __CMOUTbits_t __at(CMOUT_ADDR) CMOUTbits;

// ----- COG1ASD bits --------------------
typedef union {
  struct {
    unsigned char G1ASDSFLT:1;
    unsigned char G1ASDSC1:1;
    unsigned char G1ASDSC2:1;
    unsigned char G1ASDSHLT:1;
    unsigned char G1ASDL0:1;
    unsigned char G1ASDL1:1;
    unsigned char G1ARSEN:1;
    unsigned char G1ASDE:1;
  };
} __COG1ASDbits_t;
extern volatile __COG1ASDbits_t __at(COG1ASD_ADDR) COG1ASDbits;

// ----- COG1BLK bits --------------------
typedef union {
  struct {
    unsigned char G1BLKF0:1;
    unsigned char G1BLKF1:1;
    unsigned char G1BLKF2:1;
    unsigned char G1BLKF3:1;
    unsigned char G1BLKR0:1;
    unsigned char G1BLKR1:1;
    unsigned char G1BLKR2:1;
    unsigned char G1BLKR3:1;
  };
} __COG1BLKbits_t;
extern volatile __COG1BLKbits_t __at(COG1BLK_ADDR) COG1BLKbits;

// ----- COG1CON0 bits --------------------
typedef union {
  struct {
    unsigned char G1CS0:1;
    unsigned char G1CS1:1;
    unsigned char G1LD:1;
    unsigned char G1POL0:1;
    unsigned char G1POL1:1;
    unsigned char G1OE0:1;
    unsigned char G1OE1:1;
    unsigned char G1EN:1;
  };
} __COG1CON0bits_t;
extern volatile __COG1CON0bits_t __at(COG1CON0_ADDR) COG1CON0bits;

// ----- COG1CON1 bits --------------------
typedef union {
  struct {
    unsigned char G1RS0:1;
    unsigned char G1RS1:1;
    unsigned char G1RS2:1;
    unsigned char G1FS0:1;
    unsigned char G1FS1:1;
    unsigned char G1FS2:1;
    unsigned char G1RSIM:1;
    unsigned char G1FSIM:1;
  };
} __COG1CON1bits_t;
extern volatile __COG1CON1bits_t __at(COG1CON1_ADDR) COG1CON1bits;

// ----- COG1DB bits --------------------
typedef union {
  struct {
    unsigned char G1DBF0:1;
    unsigned char G1DBF1:1;
    unsigned char G1DBF2:1;
    unsigned char G1DBF3:1;
    unsigned char G1BDR0:1;
    unsigned char G1BDR1:1;
    unsigned char G1BDR2:1;
    unsigned char G1BDR3:1;
  };
} __COG1DBbits_t;
extern volatile __COG1DBbits_t __at(COG1DB_ADDR) COG1DBbits;

// ----- COG1PH bits --------------------
typedef union {
  struct {
    unsigned char G1PH0:1;
    unsigned char G1PH1:1;
    unsigned char G1PH2:1;
    unsigned char G1PH3:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __COG1PHbits_t;
extern volatile __COG1PHbits_t __at(COG1PH_ADDR) COG1PHbits;

// ----- DACCON0 bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char DACPSS0:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char DACOE:1;
    unsigned char DACRNG:1;
    unsigned char DACEN:1;
  };
} __DACCON0bits_t;
extern volatile __DACCON0bits_t __at(DACCON0_ADDR) DACCON0bits;

// ----- DACCON1 bits --------------------
typedef union {
  struct {
    unsigned char DACR0:1;
    unsigned char DACR1:1;
    unsigned char DACR2:1;
    unsigned char DACR3:1;
    unsigned char DACR4:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __DACCON1bits_t;
extern volatile __DACCON1bits_t __at(DACCON1_ADDR) DACCON1bits;

// ----- FVRCON bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char FVRBUFSS:1;
    unsigned char FVRBUFEN:1;
    unsigned char FVRRDY:1;
    unsigned char FVREN:1;
  };
} __FVRCONbits_t;
extern volatile __FVRCONbits_t __at(FVRCON_ADDR) FVRCONbits;

// ----- HLT1CON0 bits --------------------
typedef union {
  struct {
    unsigned char H1CKPS0:1;
    unsigned char H1CKPS1:1;
    unsigned char H1ON:1;
    unsigned char H1OUTPS0:1;
    unsigned char H1OUTPS1:1;
    unsigned char H1OUTPS2:1;
    unsigned char H1OUTPS3:1;
    unsigned char :1;
  };
} __HLT1CON0bits_t;
extern volatile __HLT1CON0bits_t __at(HLT1CON0_ADDR) HLT1CON0bits;

// ----- HLT1CON1 bits --------------------
typedef union {
  struct {
    unsigned char H1REREN:1;
    unsigned char H1FEREN:1;
    unsigned char H1ERS0:1;
    unsigned char H1ERS1:1;
    unsigned char H1ERS2:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __HLT1CON1bits_t;
extern volatile __HLT1CON1bits_t __at(HLT1CON1_ADDR) HLT1CON1bits;

// ----- INTCON bits --------------------
typedef union {
  struct {
    unsigned char IOCIF:1;
    unsigned char INTF:1;
    unsigned char T0IF:1;
    unsigned char IOCIE:1;
    unsigned char INTE:1;
    unsigned char T0IE:1;
    unsigned char PEIE:1;
    unsigned char GIE:1;
  };
} __INTCONbits_t;
extern volatile __INTCONbits_t __at(INTCON_ADDR) INTCONbits;

// ----- IOCAF bits --------------------
typedef union {
  struct {
    unsigned char IOCAF0:1;
    unsigned char IOCAF1:1;
    unsigned char IOCAF2:1;
    unsigned char IOCAF3:1;
    unsigned char IOCAF4:1;
    unsigned char IOCAF5:1;
    unsigned char :1;
    unsigned char :1;
  };
} __IOCAFbits_t;
extern volatile __IOCAFbits_t __at(IOCAF_ADDR) IOCAFbits;

// ----- IOCAN bits --------------------
typedef union {
  struct {
    unsigned char IOCAN0:1;
    unsigned char IOCAN1:1;
    unsigned char IOCAN2:1;
    unsigned char IOCAN3:1;
    unsigned char IOCAN4:1;
    unsigned char IOCAN5:1;
    unsigned char :1;
    unsigned char :1;
  };
} __IOCANbits_t;
extern volatile __IOCANbits_t __at(IOCAN_ADDR) IOCANbits;

// ----- IOCAP bits --------------------
typedef union {
  struct {
    unsigned char IOCAP0:1;
    unsigned char IOCAP1:1;
    unsigned char IOCAP2:1;
    unsigned char IOCAP3:1;
    unsigned char IOCAP4:1;
    unsigned char IOCAP5:1;
    unsigned char :1;
    unsigned char :1;
  };
} __IOCAPbits_t;
extern volatile __IOCAPbits_t __at(IOCAP_ADDR) IOCAPbits;

// ----- LATA bits --------------------
typedef union {
  struct {
    unsigned char LATA0:1;
    unsigned char LATA1:1;
    unsigned char LATA2:1;
    unsigned char :1;
    unsigned char LATA4:1;
    unsigned char LATA5:1;
    unsigned char :1;
    unsigned char :1;
  };
} __LATAbits_t;
extern volatile __LATAbits_t __at(LATA_ADDR) LATAbits;

// ----- MCOUT bits --------------------
typedef union {
  struct {
    unsigned char MCOUT1:1;
    unsigned char MCOUT2:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __MCOUTbits_t;
extern volatile __MCOUTbits_t __at(MCOUT_ADDR) MCOUTbits;

// ----- OPTION_REG bits --------------------
typedef union {
  struct {
    unsigned char PS0:1;
    unsigned char PS1:1;
    unsigned char PS2:1;
    unsigned char PSA:1;
    unsigned char T0SE:1;
    unsigned char T0CS:1;
    unsigned char INTEDG:1;
    unsigned char NOT_RAPU:1;
  };
} __OPTION_REGbits_t;
extern volatile __OPTION_REGbits_t __at(OPTION_REG_ADDR) OPTION_REGbits;

// ----- OSCCON bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char LTS:1;
    unsigned char HTS:1;
    unsigned char :1;
    unsigned char IRCF0:1;
    unsigned char IRCF1:1;
    unsigned char :1;
    unsigned char :1;
  };
} __OSCCONbits_t;
extern volatile __OSCCONbits_t __at(OSCCON_ADDR) OSCCONbits;

// ----- OSCTUNE bits --------------------
typedef union {
  struct {
    unsigned char TUN0:1;
    unsigned char TUN1:1;
    unsigned char TUN2:1;
    unsigned char TUN3:1;
    unsigned char TUN4:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __OSCTUNEbits_t;
extern volatile __OSCTUNEbits_t __at(OSCTUNE_ADDR) OSCTUNEbits;

// ----- PCON bits --------------------
typedef union {
  struct {
    unsigned char NOT_BOR:1;
    unsigned char NOT_POR:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __PCONbits_t;
extern volatile __PCONbits_t __at(PCON_ADDR) PCONbits;

// ----- PIE1 bits --------------------
typedef union {
  struct {
    unsigned char TMR1IE:1;
    unsigned char TMR2IE:1;
    unsigned char HLTMR1IE:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char ADIE:1;
    unsigned char TMR1GIE:1;
  };
} __PIE1bits_t;
extern volatile __PIE1bits_t __at(PIE1_ADDR) PIE1bits;

// ----- PIE2 bits --------------------
typedef union {
  struct {
    unsigned char CCP1IE:1;
    unsigned char :1;
    unsigned char COG1IE:1;
    unsigned char :1;
    unsigned char C1IE:1;
    unsigned char C2IE:1;
    unsigned char :1;
    unsigned char :1;
  };
} __PIE2bits_t;
extern volatile __PIE2bits_t __at(PIE2_ADDR) PIE2bits;

// ----- PIR1 bits --------------------
typedef union {
  struct {
    unsigned char TMR1IF:1;
    unsigned char TMR2IF:1;
    unsigned char HLTMR1IF:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char ADIF:1;
    unsigned char TMR1GIF:1;
  };
} __PIR1bits_t;
extern volatile __PIR1bits_t __at(PIR1_ADDR) PIR1bits;

// ----- PIR2 bits --------------------
typedef union {
  struct {
    unsigned char CCP1IF:1;
    unsigned char :1;
    unsigned char COG1IF:1;
    unsigned char :1;
    unsigned char C1IF:1;
    unsigned char C2IF:1;
    unsigned char :1;
    unsigned char :1;
  };
} __PIR2bits_t;
extern volatile __PIR2bits_t __at(PIR2_ADDR) PIR2bits;

// ----- PMCON1 bits --------------------
typedef union {
  struct {
    unsigned char RD:1;
    unsigned char WR:1;
    unsigned char WREN:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __PMCON1bits_t;
extern volatile __PMCON1bits_t __at(PMCON1_ADDR) PMCON1bits;

// ----- PORTA bits --------------------
typedef union {
  struct {
    unsigned char RA0:1;
    unsigned char RA1:1;
    unsigned char RA2:1;
    unsigned char RA3:1;
    unsigned char RA4:1;
    unsigned char RA5:1;
    unsigned char :1;
    unsigned char :1;
  };
} __PORTAbits_t;
extern volatile __PORTAbits_t __at(PORTA_ADDR) PORTAbits;

// ----- SLRCONA bits --------------------
typedef union {
  struct {
    unsigned char SLRA0:1;
    unsigned char :1;
    unsigned char SLRA2:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __SLRCONAbits_t;
extern volatile __SLRCONAbits_t __at(SLRCONA_ADDR) SLRCONAbits;

// ----- STATUS bits --------------------
typedef union {
  struct {
    unsigned char C:1;
    unsigned char DC:1;
    unsigned char Z:1;
    unsigned char NOT_PD:1;
    unsigned char NOT_TO:1;
    unsigned char RP0:1;
    unsigned char RP1:1;
    unsigned char IRP:1;
  };
} __STATUSbits_t;
extern volatile __STATUSbits_t __at(STATUS_ADDR) STATUSbits;

// ----- T1CON bits --------------------
typedef union {
  struct {
    unsigned char TMR1ON:1;
    unsigned char :1;
    unsigned char NOT_T1SYNC:1;
    unsigned char :1;
    unsigned char T1CKPS0:1;
    unsigned char T1CKPS1:1;
    unsigned char TMR1CS0:1;
    unsigned char TMR1CS1:1;
  };
} __T1CONbits_t;
extern volatile __T1CONbits_t __at(T1CON_ADDR) T1CONbits;

// ----- T1GCON bits --------------------
typedef union {
  struct {
    unsigned char T1GSS0:1;
    unsigned char T1GSS1:1;
    unsigned char T1GVAL:1;
    unsigned char T1GGO_NOT_DONE:1;
    unsigned char T1GSPM:1;
    unsigned char T1GTM:1;
    unsigned char T1GPOL:1;
    unsigned char TMR1GE:1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char T1GGO:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __T1GCONbits_t;
extern volatile __T1GCONbits_t __at(T1GCON_ADDR) T1GCONbits;

// ----- T2CON bits --------------------
typedef union {
  struct {
    unsigned char T2CKPS0:1;
    unsigned char T2CKPS1:1;
    unsigned char TMR2ON:1;
    unsigned char T2OUTPS0:1;
    unsigned char T2OUTPS1:1;
    unsigned char T2OUTPS2:1;
    unsigned char T2OUTPS3:1;
    unsigned char :1;
  };
} __T2CONbits_t;
extern volatile __T2CONbits_t __at(T2CON_ADDR) T2CONbits;

// ----- TRISA bits --------------------
typedef union {
  struct {
    unsigned char TRISA0:1;
    unsigned char TRISA1:1;
    unsigned char TRISA2:1;
    unsigned char TRISA3:1;
    unsigned char TRISA4:1;
    unsigned char TRISA5:1;
    unsigned char :1;
    unsigned char :1;
  };
} __TRISAbits_t;
extern volatile __TRISAbits_t __at(TRISA_ADDR) TRISAbits;

// ----- WPUA bits --------------------
typedef union {
  struct {
    unsigned char WPUA0:1;
    unsigned char WPUA1:1;
    unsigned char WPUA2:1;
    unsigned char WPUA3:1;
    unsigned char WPUA4:1;
    unsigned char WPUA5:1;
    unsigned char :1;
    unsigned char :1;
  };
} __WPUAbits_t;
extern volatile __WPUAbits_t __at(WPUA_ADDR) WPUAbits;


#ifndef NO_BIT_DEFINES

#define ADON                 ADCON0bits.ADON                /* bit 0 */
#define GO_NOT_DONE          ADCON0bits.GO_NOT_DONE         /* bit 1 */
#define CHS0                 ADCON0bits.CHS0                /* bit 2 */
#define CHS1                 ADCON0bits.CHS1                /* bit 3 */
#define CHS2                 ADCON0bits.CHS2                /* bit 4 */
#define CHS3                 ADCON0bits.CHS3                /* bit 5 */
#define VCFG                 ADCON0bits.VCFG                /* bit 6 */
#define ADFM                 ADCON0bits.ADFM                /* bit 7 */

#define ADCS0                ADCON1bits.ADCS0               /* bit 4 */
#define ADCS1                ADCON1bits.ADCS1               /* bit 5 */
#define ADCS2                ADCON1bits.ADCS2               /* bit 6 */

#define ANSA0                ANSELAbits.ANSA0               /* bit 0 */
#define ANSA1                ANSELAbits.ANSA1               /* bit 1 */
#define ANSA2                ANSELAbits.ANSA2               /* bit 2 */
#define ANSA4                ANSELAbits.ANSA4               /* bit 4 */
#define ANSA5                ANSELAbits.ANSA5               /* bit 5 */

#define COG1O0SEL            APFCONbits.COG1O0SEL           /* bit 0 */
#define COG1O1SEL            APFCONbits.COG1O1SEL           /* bit 1 */
#define COG1FSEL             APFCONbits.COG1FSEL            /* bit 2 */
#define T1GSEL               APFCONbits.T1GSEL              /* bit 4 */

#define C1SYNC               C1CON0bits.C1SYNC              /* bit 0, shadows bit in CM1CON0bits */
#define C1HYS                C1CON0bits.C1HYS               /* bit 1, shadows bit in CM1CON0bits */
#define C1SP                 C1CON0bits.C1SP                /* bit 2, shadows bit in CM1CON0bits */
#define C1ZLF                C1CON0bits.C1ZLF               /* bit 3, shadows bit in CM1CON0bits */
#define C1POL                C1CON0bits.C1POL               /* bit 4, shadows bit in CM1CON0bits */
#define C1OE                 C1CON0bits.C1OE                /* bit 5, shadows bit in CM1CON0bits */
#define C1OUT                C1CON0bits.C1OUT               /* bit 6, shadows bit in CM1CON0bits */
#define C1ON                 C1CON0bits.C1ON                /* bit 7, shadows bit in CM1CON0bits */

#define C1NCH0               C1CON1bits.C1NCH0              /* bit 0, shadows bit in CM1CON1bits */
#define C1PCH0               C1CON1bits.C1PCH0              /* bit 4, shadows bit in CM1CON1bits */
#define C1PCH1               C1CON1bits.C1PCH1              /* bit 5, shadows bit in CM1CON1bits */
#define C1INTN               C1CON1bits.C1INTN              /* bit 6, shadows bit in CM1CON1bits */
#define C1INTP               C1CON1bits.C1INTP              /* bit 7, shadows bit in CM1CON1bits */

#define C2SYNC               C2CON0bits.C2SYNC              /* bit 0, shadows bit in CM2CON0bits */
#define C2HYS                C2CON0bits.C2HYS               /* bit 1, shadows bit in CM2CON0bits */
#define C2SP                 C2CON0bits.C2SP                /* bit 2, shadows bit in CM2CON0bits */
#define C2ZLF                C2CON0bits.C2ZLF               /* bit 3, shadows bit in CM2CON0bits */
#define C2POL                C2CON0bits.C2POL               /* bit 4, shadows bit in CM2CON0bits */
#define C2OE                 C2CON0bits.C2OE                /* bit 5, shadows bit in CM2CON0bits */
#define C2OUT                C2CON0bits.C2OUT               /* bit 6, shadows bit in CM2CON0bits */
#define C2ON                 C2CON0bits.C2ON                /* bit 7, shadows bit in CM2CON0bits */

#define C2NCH0               C2CON1bits.C2NCH0              /* bit 0, shadows bit in CM2CON1bits */
#define C2PCH0               C2CON1bits.C2PCH0              /* bit 4, shadows bit in CM2CON1bits */
#define C2PCH1               C2CON1bits.C2PCH1              /* bit 5, shadows bit in CM2CON1bits */
#define C2INTN               C2CON1bits.C2INTN              /* bit 6, shadows bit in CM2CON1bits */
#define C2INTP               C2CON1bits.C2INTP              /* bit 7, shadows bit in CM2CON1bits */

#define CCP1M0               CCP1CONbits.CCP1M0             /* bit 0 */
#define CCP1M1               CCP1CONbits.CCP1M1             /* bit 1 */
#define CCP1M2               CCP1CONbits.CCP1M2             /* bit 2 */
#define CCP1M3               CCP1CONbits.CCP1M3             /* bit 3 */
#define DC1B0                CCP1CONbits.DC1B0              /* bit 4 */
#define DC1B1                CCP1CONbits.DC1B1              /* bit 5 */

#define MCOUT1               CMOUTbits.MCOUT1               /* bit 0, shadows bit in MCOUTbits */
#define MCOUT2               CMOUTbits.MCOUT2               /* bit 1, shadows bit in MCOUTbits */

#define G1ASDSFLT            COG1ASDbits.G1ASDSFLT          /* bit 0 */
#define G1ASDSC1             COG1ASDbits.G1ASDSC1           /* bit 1 */
#define G1ASDSC2             COG1ASDbits.G1ASDSC2           /* bit 2 */
#define G1ASDSHLT            COG1ASDbits.G1ASDSHLT          /* bit 3 */
#define G1ASDL0              COG1ASDbits.G1ASDL0            /* bit 4 */
#define G1ASDL1              COG1ASDbits.G1ASDL1            /* bit 5 */
#define G1ARSEN              COG1ASDbits.G1ARSEN            /* bit 6 */
#define G1ASDE               COG1ASDbits.G1ASDE             /* bit 7 */

#define G1BLKF0              COG1BLKbits.G1BLKF0            /* bit 0 */
#define G1BLKF1              COG1BLKbits.G1BLKF1            /* bit 1 */
#define G1BLKF2              COG1BLKbits.G1BLKF2            /* bit 2 */
#define G1BLKF3              COG1BLKbits.G1BLKF3            /* bit 3 */
#define G1BLKR0              COG1BLKbits.G1BLKR0            /* bit 4 */
#define G1BLKR1              COG1BLKbits.G1BLKR1            /* bit 5 */
#define G1BLKR2              COG1BLKbits.G1BLKR2            /* bit 6 */
#define G1BLKR3              COG1BLKbits.G1BLKR3            /* bit 7 */

#define G1CS0                COG1CON0bits.G1CS0             /* bit 0 */
#define G1CS1                COG1CON0bits.G1CS1             /* bit 1 */
#define G1LD                 COG1CON0bits.G1LD              /* bit 2 */
#define G1POL0               COG1CON0bits.G1POL0            /* bit 3 */
#define G1POL1               COG1CON0bits.G1POL1            /* bit 4 */
#define G1OE0                COG1CON0bits.G1OE0             /* bit 5 */
#define G1OE1                COG1CON0bits.G1OE1             /* bit 6 */
#define G1EN                 COG1CON0bits.G1EN              /* bit 7 */

#define G1RS0                COG1CON1bits.G1RS0             /* bit 0 */
#define G1RS1                COG1CON1bits.G1RS1             /* bit 1 */
#define G1RS2                COG1CON1bits.G1RS2             /* bit 2 */
#define G1FS0                COG1CON1bits.G1FS0             /* bit 3 */
#define G1FS1                COG1CON1bits.G1FS1             /* bit 4 */
#define G1FS2                COG1CON1bits.G1FS2             /* bit 5 */
#define G1RSIM               COG1CON1bits.G1RSIM            /* bit 6 */
#define G1FSIM               COG1CON1bits.G1FSIM            /* bit 7 */

#define G1DBF0               COG1DBbits.G1DBF0              /* bit 0 */
#define G1DBF1               COG1DBbits.G1DBF1              /* bit 1 */
#define G1DBF2               COG1DBbits.G1DBF2              /* bit 2 */
#define G1DBF3               COG1DBbits.G1DBF3              /* bit 3 */
#define G1BDR0               COG1DBbits.G1BDR0              /* bit 4 */
#define G1BDR1               COG1DBbits.G1BDR1              /* bit 5 */
#define G1BDR2               COG1DBbits.G1BDR2              /* bit 6 */
#define G1BDR3               COG1DBbits.G1BDR3              /* bit 7 */

#define G1PH0                COG1PHbits.G1PH0               /* bit 0 */
#define G1PH1                COG1PHbits.G1PH1               /* bit 1 */
#define G1PH2                COG1PHbits.G1PH2               /* bit 2 */
#define G1PH3                COG1PHbits.G1PH3               /* bit 3 */

#define DACPSS0              DACCON0bits.DACPSS0            /* bit 2 */
#define DACOE                DACCON0bits.DACOE              /* bit 5 */
#define DACRNG               DACCON0bits.DACRNG             /* bit 6 */
#define DACEN                DACCON0bits.DACEN              /* bit 7 */

#define DACR0                DACCON1bits.DACR0              /* bit 0 */
#define DACR1                DACCON1bits.DACR1              /* bit 1 */
#define DACR2                DACCON1bits.DACR2              /* bit 2 */
#define DACR3                DACCON1bits.DACR3              /* bit 3 */
#define DACR4                DACCON1bits.DACR4              /* bit 4 */

#define FVRBUFSS             FVRCONbits.FVRBUFSS            /* bit 4 */
#define FVRBUFEN             FVRCONbits.FVRBUFEN            /* bit 5 */
#define FVRRDY               FVRCONbits.FVRRDY              /* bit 6 */
#define FVREN                FVRCONbits.FVREN               /* bit 7 */

#define H1CKPS0              HLT1CON0bits.H1CKPS0           /* bit 0 */
#define H1CKPS1              HLT1CON0bits.H1CKPS1           /* bit 1 */
#define H1ON                 HLT1CON0bits.H1ON              /* bit 2 */
#define H1OUTPS0             HLT1CON0bits.H1OUTPS0          /* bit 3 */
#define H1OUTPS1             HLT1CON0bits.H1OUTPS1          /* bit 4 */
#define H1OUTPS2             HLT1CON0bits.H1OUTPS2          /* bit 5 */
#define H1OUTPS3             HLT1CON0bits.H1OUTPS3          /* bit 6 */

#define H1REREN              HLT1CON1bits.H1REREN           /* bit 0 */
#define H1FEREN              HLT1CON1bits.H1FEREN           /* bit 1 */
#define H1ERS0               HLT1CON1bits.H1ERS0            /* bit 2 */
#define H1ERS1               HLT1CON1bits.H1ERS1            /* bit 3 */
#define H1ERS2               HLT1CON1bits.H1ERS2            /* bit 4 */

#define IOCIF                INTCONbits.IOCIF               /* bit 0 */
#define INTF                 INTCONbits.INTF                /* bit 1 */
#define T0IF                 INTCONbits.T0IF                /* bit 2 */
#define IOCIE                INTCONbits.IOCIE               /* bit 3 */
#define INTE                 INTCONbits.INTE                /* bit 4 */
#define T0IE                 INTCONbits.T0IE                /* bit 5 */
#define PEIE                 INTCONbits.PEIE                /* bit 6 */
#define GIE                  INTCONbits.GIE                 /* bit 7 */

#define IOCAF0               IOCAFbits.IOCAF0               /* bit 0 */
#define IOCAF1               IOCAFbits.IOCAF1               /* bit 1 */
#define IOCAF2               IOCAFbits.IOCAF2               /* bit 2 */
#define IOCAF3               IOCAFbits.IOCAF3               /* bit 3 */
#define IOCAF4               IOCAFbits.IOCAF4               /* bit 4 */
#define IOCAF5               IOCAFbits.IOCAF5               /* bit 5 */

#define IOCAN0               IOCANbits.IOCAN0               /* bit 0 */
#define IOCAN1               IOCANbits.IOCAN1               /* bit 1 */
#define IOCAN2               IOCANbits.IOCAN2               /* bit 2 */
#define IOCAN3               IOCANbits.IOCAN3               /* bit 3 */
#define IOCAN4               IOCANbits.IOCAN4               /* bit 4 */
#define IOCAN5               IOCANbits.IOCAN5               /* bit 5 */

#define IOCAP0               IOCAPbits.IOCAP0               /* bit 0 */
#define IOCAP1               IOCAPbits.IOCAP1               /* bit 1 */
#define IOCAP2               IOCAPbits.IOCAP2               /* bit 2 */
#define IOCAP3               IOCAPbits.IOCAP3               /* bit 3 */
#define IOCAP4               IOCAPbits.IOCAP4               /* bit 4 */
#define IOCAP5               IOCAPbits.IOCAP5               /* bit 5 */

#define LATA0                LATAbits.LATA0                 /* bit 0 */
#define LATA1                LATAbits.LATA1                 /* bit 1 */
#define LATA2                LATAbits.LATA2                 /* bit 2 */
#define LATA4                LATAbits.LATA4                 /* bit 4 */
#define LATA5                LATAbits.LATA5                 /* bit 5 */

#define PS0                  OPTION_REGbits.PS0             /* bit 0 */
#define PS1                  OPTION_REGbits.PS1             /* bit 1 */
#define PS2                  OPTION_REGbits.PS2             /* bit 2 */
#define PSA                  OPTION_REGbits.PSA             /* bit 3 */
#define T0SE                 OPTION_REGbits.T0SE            /* bit 4 */
#define T0CS                 OPTION_REGbits.T0CS            /* bit 5 */
#define INTEDG               OPTION_REGbits.INTEDG          /* bit 6 */
#define NOT_RAPU             OPTION_REGbits.NOT_RAPU        /* bit 7 */

#define LTS                  OSCCONbits.LTS                 /* bit 1 */
#define HTS                  OSCCONbits.HTS                 /* bit 2 */
#define IRCF0                OSCCONbits.IRCF0               /* bit 4 */
#define IRCF1                OSCCONbits.IRCF1               /* bit 5 */

#define TUN0                 OSCTUNEbits.TUN0               /* bit 0 */
#define TUN1                 OSCTUNEbits.TUN1               /* bit 1 */
#define TUN2                 OSCTUNEbits.TUN2               /* bit 2 */
#define TUN3                 OSCTUNEbits.TUN3               /* bit 3 */
#define TUN4                 OSCTUNEbits.TUN4               /* bit 4 */

#define NOT_BOR              PCONbits.NOT_BOR               /* bit 0 */
#define NOT_POR              PCONbits.NOT_POR               /* bit 1 */

#define TMR1IE               PIE1bits.TMR1IE                /* bit 0 */
#define TMR2IE               PIE1bits.TMR2IE                /* bit 1 */
#define HLTMR1IE             PIE1bits.HLTMR1IE              /* bit 2 */
#define ADIE                 PIE1bits.ADIE                  /* bit 6 */
#define TMR1GIE              PIE1bits.TMR1GIE               /* bit 7 */

#define CCP1IE               PIE2bits.CCP1IE                /* bit 0 */
#define COG1IE               PIE2bits.COG1IE                /* bit 2 */
#define C1IE                 PIE2bits.C1IE                  /* bit 4 */
#define C2IE                 PIE2bits.C2IE                  /* bit 5 */

#define TMR1IF               PIR1bits.TMR1IF                /* bit 0 */
#define TMR2IF               PIR1bits.TMR2IF                /* bit 1 */
#define HLTMR1IF             PIR1bits.HLTMR1IF              /* bit 2 */
#define ADIF                 PIR1bits.ADIF                  /* bit 6 */
#define TMR1GIF              PIR1bits.TMR1GIF               /* bit 7 */

#define CCP1IF               PIR2bits.CCP1IF                /* bit 0 */
#define COG1IF               PIR2bits.COG1IF                /* bit 2 */
#define C1IF                 PIR2bits.C1IF                  /* bit 4 */
#define C2IF                 PIR2bits.C2IF                  /* bit 5 */

#define RD                   PMCON1bits.RD                  /* bit 0 */
#define WR                   PMCON1bits.WR                  /* bit 1 */
#define WREN                 PMCON1bits.WREN                /* bit 2 */

#define RA0                  PORTAbits.RA0                  /* bit 0 */
#define RA1                  PORTAbits.RA1                  /* bit 1 */
#define RA2                  PORTAbits.RA2                  /* bit 2 */
#define RA3                  PORTAbits.RA3                  /* bit 3 */
#define RA4                  PORTAbits.RA4                  /* bit 4 */
#define RA5                  PORTAbits.RA5                  /* bit 5 */

#define SLRA0                SLRCONAbits.SLRA0              /* bit 0 */
#define SLRA2                SLRCONAbits.SLRA2              /* bit 2 */

#define C                    STATUSbits.C                   /* bit 0 */
#define DC                   STATUSbits.DC                  /* bit 1 */
#define Z                    STATUSbits.Z                   /* bit 2 */
#define NOT_PD               STATUSbits.NOT_PD              /* bit 3 */
#define NOT_TO               STATUSbits.NOT_TO              /* bit 4 */
#define RP0                  STATUSbits.RP0                 /* bit 5 */
#define RP1                  STATUSbits.RP1                 /* bit 6 */
#define IRP                  STATUSbits.IRP                 /* bit 7 */

#define TMR1ON               T1CONbits.TMR1ON               /* bit 0 */
#define NOT_T1SYNC           T1CONbits.NOT_T1SYNC           /* bit 2 */
#define T1CKPS0              T1CONbits.T1CKPS0              /* bit 4 */
#define T1CKPS1              T1CONbits.T1CKPS1              /* bit 5 */
#define TMR1CS0              T1CONbits.TMR1CS0              /* bit 6 */
#define TMR1CS1              T1CONbits.TMR1CS1              /* bit 7 */

#define T1GSS0               T1GCONbits.T1GSS0              /* bit 0 */
#define T1GSS1               T1GCONbits.T1GSS1              /* bit 1 */
#define T1GVAL               T1GCONbits.T1GVAL              /* bit 2 */
#define T1GGO                T1GCONbits.T1GGO               /* bit 3 */
#define T1GGO_NOT_DONE       T1GCONbits.T1GGO_NOT_DONE      /* bit 3 */
#define T1GSPM               T1GCONbits.T1GSPM              /* bit 4 */
#define T1GTM                T1GCONbits.T1GTM               /* bit 5 */
#define T1GPOL               T1GCONbits.T1GPOL              /* bit 6 */
#define TMR1GE               T1GCONbits.TMR1GE              /* bit 7 */

#define T2CKPS0              T2CONbits.T2CKPS0              /* bit 0 */
#define T2CKPS1              T2CONbits.T2CKPS1              /* bit 1 */
#define TMR2ON               T2CONbits.TMR2ON               /* bit 2 */
#define T2OUTPS0             T2CONbits.T2OUTPS0             /* bit 3 */
#define T2OUTPS1             T2CONbits.T2OUTPS1             /* bit 4 */
#define T2OUTPS2             T2CONbits.T2OUTPS2             /* bit 5 */
#define T2OUTPS3             T2CONbits.T2OUTPS3             /* bit 6 */

#define TRISA0               TRISAbits.TRISA0               /* bit 0 */
#define TRISA1               TRISAbits.TRISA1               /* bit 1 */
#define TRISA2               TRISAbits.TRISA2               /* bit 2 */
#define TRISA3               TRISAbits.TRISA3               /* bit 3 */
#define TRISA4               TRISAbits.TRISA4               /* bit 4 */
#define TRISA5               TRISAbits.TRISA5               /* bit 5 */

#define WPUA0                WPUAbits.WPUA0                 /* bit 0 */
#define WPUA1                WPUAbits.WPUA1                 /* bit 1 */
#define WPUA2                WPUAbits.WPUA2                 /* bit 2 */
#define WPUA3                WPUAbits.WPUA3                 /* bit 3 */
#define WPUA4                WPUAbits.WPUA4                 /* bit 4 */
#define WPUA5                WPUAbits.WPUA5                 /* bit 5 */
#endif /* NO_BIT_DEFINES */

#ifndef NO_LEGACY_NAMES
#define ADCON0_bits          ADCON0bits
#define ADCON1_bits          ADCON1bits
#define ANSELA_bits          ANSELAbits
#define APFCON_bits          APFCONbits
#define C1CON0_bits          C1CON0bits
#define C1CON1_bits          C1CON1bits
#define C2CON0_bits          C2CON0bits
#define C2CON1_bits          C2CON1bits
#define CCP1CON_bits         CCP1CONbits
#define CM1CON0_bits         CM1CON0bits
#define CM1CON1_bits         CM1CON1bits
#define CM2CON0_bits         CM2CON0bits
#define CM2CON1_bits         CM2CON1bits
#define CMOUT_bits           CMOUTbits
#define COG1ASD_bits         COG1ASDbits
#define COG1BLK_bits         COG1BLKbits
#define COG1CON0_bits        COG1CON0bits
#define COG1CON1_bits        COG1CON1bits
#define COG1DB_bits          COG1DBbits
#define COG1PH_bits          COG1PHbits
#define DACCON0_bits         DACCON0bits
#define DACCON1_bits         DACCON1bits
#define FVRCON_bits          FVRCONbits
#define HLT1CON0_bits        HLT1CON0bits
#define HLT1CON1_bits        HLT1CON1bits
#define INTCON_bits          INTCONbits
#define IOCAF_bits           IOCAFbits
#define IOCAN_bits           IOCANbits
#define IOCAP_bits           IOCAPbits
#define LATA_bits            LATAbits
#define MCOUT_bits           MCOUTbits
#define OPTION_REG_bits      OPTION_REGbits
#define OSCCON_bits          OSCCONbits
#define OSCTUNE_bits         OSCTUNEbits
#define PCON_bits            PCONbits
#define PIE1_bits            PIE1bits
#define PIE2_bits            PIE2bits
#define PIR1_bits            PIR1bits
#define PIR2_bits            PIR2bits
#define PMCON1_bits          PMCON1bits
#define PORTA_bits           PORTAbits
#define SLRCONA_bits         SLRCONAbits
#define STATUS_bits          STATUSbits
#define T1CON_bits           T1CONbits
#define T1GCON_bits          T1GCONbits
#define T2CON_bits           T2CONbits
#define TRISA_bits           TRISAbits
#define WPUA_bits            WPUAbits
#endif /* NO_LEGACY_NAMES */

#endif
