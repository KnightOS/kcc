//
// Register Declarations for Microchip 16F707 Processor
//
//
// This header file was automatically generated by:
//
// inc2h.pl
//
// Copyright (c) 2002, Kevin L. Pauba, All Rights Reserved
//
// SDCC is licensed under the GNU Public license (GPL) v2. Note that
// this license covers the code to the compiler and other executables,
// but explicitly does not cover any code or objects generated by sdcc.
//
// For pic device libraries and header files which are derived from
// Microchip header (.inc) and linker script (.lkr) files Microchip
// requires that "The header files should state that they are only to be
// used with authentic Microchip devices" which makes them incompatible
// with the GPL. Pic device libraries and header files are located at
// non-free/lib and non-free/include directories respectively.
// Sdcc should be run with the --use-non-free command line option in
// order to include non-free header files and libraries.
//
// See http://sdcc.sourceforge.net/ for the latest information on sdcc.
//
// 
#ifndef P16F707_H
#define P16F707_H

//
// Register addresses.
//
#define INDF_ADDR       0x0000
#define TMR0_ADDR       0x0001
#define PCL_ADDR        0x0002
#define STATUS_ADDR     0x0003
#define FSR_ADDR        0x0004
#define PORTA_ADDR      0x0005
#define PORTB_ADDR      0x0006
#define PORTC_ADDR      0x0007
#define PORTD_ADDR      0x0008
#define PORTE_ADDR      0x0009
#define PCLATH_ADDR     0x000A
#define INTCON_ADDR     0x000B
#define PIR1_ADDR       0x000C
#define PIR2_ADDR       0x000D
#define TMR1_ADDR       0x000E
#define TMR1L_ADDR      0x000E
#define TMR1H_ADDR      0x000F
#define T1CON_ADDR      0x0010
#define TMR2_ADDR       0x0011
#define T2CON_ADDR      0x0012
#define SSPBUF_ADDR     0x0013
#define SSPCON_ADDR     0x0014
#define CCPR1_ADDR      0x0015
#define CCPR1L_ADDR     0x0015
#define CCPR1H_ADDR     0x0016
#define CCP1CON_ADDR    0x0017
#define RCSTA_ADDR      0x0018
#define TXREG_ADDR      0x0019
#define RCREG_ADDR      0x001A
#define CCPR2_ADDR      0x001B
#define CCPR2L_ADDR     0x001B
#define CCPR2H_ADDR     0x001C
#define CCP2CON_ADDR    0x001D
#define ADRES_ADDR      0x001E
#define ADCON0_ADDR     0x001F
#define OPTION_REG_ADDR 0x0081
#define TRISA_ADDR      0x0085
#define TRISB_ADDR      0x0086
#define TRISC_ADDR      0x0087
#define TRISD_ADDR      0x0088
#define TRISE_ADDR      0x0089
#define PIE1_ADDR       0x008C
#define PIE2_ADDR       0x008D
#define PCON_ADDR       0x008E
#define T1GCON_ADDR     0x008F
#define OSCCON_ADDR     0x0090
#define OSCTUNE_ADDR    0x0091
#define PR2_ADDR        0x0092
#define SSPADD_ADDR     0x0093
#define SSPMSK_ADDR     0x0093
#define SSPSTAT_ADDR    0x0094
#define WPUB_ADDR       0x0095
#define IOCB_ADDR       0x0096
#define T3CON_ADDR      0x0097
#define TXSTA_ADDR      0x0098
#define SPBRG_ADDR      0x0099
#define TMR3_ADDR       0x009A
#define TMR3L_ADDR      0x009A
#define TMR3H_ADDR      0x009B
#define APFCON_ADDR     0x009C
#define FVRCON_ADDR     0x009D
#define T3GCON_ADDR     0x009E
#define ADCON1_ADDR     0x009F
#define TACON_ADDR      0x0105
#define CPSBCON0_ADDR   0x0106
#define CPSBCON1_ADDR   0x0107
#define CPSACON0_ADDR   0x0108
#define CPSACON1_ADDR   0x0109
#define PMDATL_ADDR     0x010C
#define PMADRL_ADDR     0x010D
#define PMDATH_ADDR     0x010E
#define PMADRH_ADDR     0x010F
#define TMRA_ADDR       0x0110
#define TBCON_ADDR      0x0111
#define TMRB_ADDR       0x0112
#define DACCON0_ADDR    0x0113
#define DACCON1_ADDR    0x0114
#define ANSELA_ADDR     0x0185
#define ANSELB_ADDR     0x0186
#define ANSELC_ADDR     0x0187
#define ANSELD_ADDR     0x0188
#define ANSELE_ADDR     0x0189
#define PMCON1_ADDR     0x018C

//
// Memory organization.
//



//         LIST

//==========================================================================
//  MPASM PIC16F707 processor include
//
//  (c) Copyright 1999-2012 Microchip Technology, All rights reserved
//==========================================================================

//         NOLIST

//==========================================================================
//  This header file defines configurations, registers, and other useful
//  bits of information for the PIC16F707 microcontroller.  These names
//  are taken to match the data sheets as closely as possible.
//
//  Note that the processor must be selected before this file is included.
//  The processor may be selected the following ways:
//
//       1. Command line switch:
//               C:\MPASM MYFILE.ASM /PIC16F707
//       2. LIST directive in the source file
//               LIST   P=PIC16F707
//       3. Processor Type entry in the MPASM full-screen interface
//       4. Setting the processor in the MPLAB Project Dialog
//==========================================================================

//==========================================================================
//
//       Verify Processor
//
//==========================================================================
//        IFNDEF __16F707
//            MESSG "Processor-header file mismatch.  Verify selected processor."
//         ENDIF



//==========================================================================
//
//       Register Definitions
//
//==========================================================================

#define W                    0x0000
#define F                    0x0001

//----- Register Files -----------------------------------------------------

//-----Bank0------------------
extern __sfr  __at (INDF_ADDR)                    INDF;
extern __sfr  __at (TMR0_ADDR)                    TMR0;
extern __sfr  __at (PCL_ADDR)                     PCL;
extern __sfr  __at (STATUS_ADDR)                  STATUS;
extern __sfr  __at (FSR_ADDR)                     FSR;
extern __sfr  __at (PORTA_ADDR)                   PORTA;
extern __sfr  __at (PORTB_ADDR)                   PORTB;
extern __sfr  __at (PORTC_ADDR)                   PORTC;
extern __sfr  __at (PORTD_ADDR)                   PORTD;
extern __sfr  __at (PORTE_ADDR)                   PORTE;
extern __sfr  __at (PCLATH_ADDR)                  PCLATH;
extern __sfr  __at (INTCON_ADDR)                  INTCON;
extern __sfr  __at (PIR1_ADDR)                    PIR1;
extern __sfr  __at (PIR2_ADDR)                    PIR2;
extern __sfr  __at (TMR1_ADDR)                    TMR1;
extern __sfr  __at (TMR1L_ADDR)                   TMR1L;
extern __sfr  __at (TMR1H_ADDR)                   TMR1H;
extern __sfr  __at (T1CON_ADDR)                   T1CON;
extern __sfr  __at (TMR2_ADDR)                    TMR2;
extern __sfr  __at (T2CON_ADDR)                   T2CON;
extern __sfr  __at (SSPBUF_ADDR)                  SSPBUF;
extern __sfr  __at (SSPCON_ADDR)                  SSPCON;
extern __sfr  __at (CCPR1_ADDR)                   CCPR1;
extern __sfr  __at (CCPR1L_ADDR)                  CCPR1L;
extern __sfr  __at (CCPR1H_ADDR)                  CCPR1H;
extern __sfr  __at (CCP1CON_ADDR)                 CCP1CON;
extern __sfr  __at (RCSTA_ADDR)                   RCSTA;
extern __sfr  __at (TXREG_ADDR)                   TXREG;
extern __sfr  __at (RCREG_ADDR)                   RCREG;
extern __sfr  __at (CCPR2_ADDR)                   CCPR2;
extern __sfr  __at (CCPR2L_ADDR)                  CCPR2L;
extern __sfr  __at (CCPR2H_ADDR)                  CCPR2H;
extern __sfr  __at (CCP2CON_ADDR)                 CCP2CON;
extern __sfr  __at (ADRES_ADDR)                   ADRES;
extern __sfr  __at (ADCON0_ADDR)                  ADCON0;

//-----Bank1------------------
extern __sfr  __at (OPTION_REG_ADDR)              OPTION_REG;
extern __sfr  __at (TRISA_ADDR)                   TRISA;
extern __sfr  __at (TRISB_ADDR)                   TRISB;
extern __sfr  __at (TRISC_ADDR)                   TRISC;
extern __sfr  __at (TRISD_ADDR)                   TRISD;
extern __sfr  __at (TRISE_ADDR)                   TRISE;
extern __sfr  __at (PIE1_ADDR)                    PIE1;
extern __sfr  __at (PIE2_ADDR)                    PIE2;
extern __sfr  __at (PCON_ADDR)                    PCON;
extern __sfr  __at (T1GCON_ADDR)                  T1GCON;
extern __sfr  __at (OSCCON_ADDR)                  OSCCON;
extern __sfr  __at (OSCTUNE_ADDR)                 OSCTUNE;
extern __sfr  __at (PR2_ADDR)                     PR2;
extern __sfr  __at (SSPADD_ADDR)                  SSPADD;
extern __sfr  __at (SSPMSK_ADDR)                  SSPMSK;
extern __sfr  __at (SSPSTAT_ADDR)                 SSPSTAT;
extern __sfr  __at (WPUB_ADDR)                    WPUB;
extern __sfr  __at (IOCB_ADDR)                    IOCB;
extern __sfr  __at (T3CON_ADDR)                   T3CON;
extern __sfr  __at (TXSTA_ADDR)                   TXSTA;
extern __sfr  __at (SPBRG_ADDR)                   SPBRG;
extern __sfr  __at (TMR3_ADDR)                    TMR3;
extern __sfr  __at (TMR3L_ADDR)                   TMR3L;
extern __sfr  __at (TMR3H_ADDR)                   TMR3H;
extern __sfr  __at (APFCON_ADDR)                  APFCON;
extern __sfr  __at (FVRCON_ADDR)                  FVRCON;
extern __sfr  __at (T3GCON_ADDR)                  T3GCON;
extern __sfr  __at (ADCON1_ADDR)                  ADCON1;

//-----Bank2------------------
extern __sfr  __at (TACON_ADDR)                   TACON;
extern __sfr  __at (CPSBCON0_ADDR)                CPSBCON0;
extern __sfr  __at (CPSBCON1_ADDR)                CPSBCON1;
extern __sfr  __at (CPSACON0_ADDR)                CPSACON0;
extern __sfr  __at (CPSACON1_ADDR)                CPSACON1;
extern __sfr  __at (PMDATL_ADDR)                  PMDATL;
extern __sfr  __at (PMADRL_ADDR)                  PMADRL;
extern __sfr  __at (PMDATH_ADDR)                  PMDATH;
extern __sfr  __at (PMADRH_ADDR)                  PMADRH;
extern __sfr  __at (TMRA_ADDR)                    TMRA;
extern __sfr  __at (TBCON_ADDR)                   TBCON;
extern __sfr  __at (TMRB_ADDR)                    TMRB;
extern __sfr  __at (DACCON0_ADDR)                 DACCON0;
extern __sfr  __at (DACCON1_ADDR)                 DACCON1;

//-----Bank3------------------
extern __sfr  __at (ANSELA_ADDR)                  ANSELA;
extern __sfr  __at (ANSELB_ADDR)                  ANSELB;
extern __sfr  __at (ANSELC_ADDR)                  ANSELC;
extern __sfr  __at (ANSELD_ADDR)                  ANSELD;
extern __sfr  __at (ANSELE_ADDR)                  ANSELE;
extern __sfr  __at (PMCON1_ADDR)                  PMCON1;

//----- STATUS Bits -----------------------------------------------------



//----- PORTA Bits -----------------------------------------------------






//----- PORTB Bits -----------------------------------------------------






//----- PORTC Bits -----------------------------------------------------



// DT is a reserved word
// DT               EQU  H'0007'


//----- PORTD Bits -----------------------------------------------------




//----- PORTE Bits -----------------------------------------------------




//----- INTCON Bits -----------------------------------------------------



//----- PIR1 Bits -----------------------------------------------------


//----- PIR2 Bits -----------------------------------------------------


//----- T1CON Bits -----------------------------------------------------



//----- T2CON Bits -----------------------------------------------------



//----- SSPCON Bits -----------------------------------------------------



//----- CCP1CON Bits -----------------------------------------------------


//----- RCSTA Bits -----------------------------------------------------


//----- CCP2CON Bits -----------------------------------------------------


//----- ADCON0 Bits -----------------------------------------------------



//----- OPTION_REG Bits -----------------------------------------------------



//----- TRISA Bits -----------------------------------------------------


//----- TRISB Bits -----------------------------------------------------


//----- TRISC Bits -----------------------------------------------------


//----- TRISD Bits -----------------------------------------------------


//----- TRISE Bits -----------------------------------------------------


//----- PIE1 Bits -----------------------------------------------------


//----- PIE2 Bits -----------------------------------------------------


//----- PCON Bits -----------------------------------------------------


//----- T1GCON Bits -----------------------------------------------------



//----- OSCCON Bits -----------------------------------------------------



//----- SSPSTAT Bits -----------------------------------------------------


//----- WPUB Bits -----------------------------------------------------


//----- IOCB Bits -----------------------------------------------------


//----- T3CON Bits -----------------------------------------------------



//----- TXSTA Bits -----------------------------------------------------


//----- APFCON Bits -----------------------------------------------------


//----- FVRCON Bits -----------------------------------------------------



//----- T3GCON Bits -----------------------------------------------------



//----- ADCON1 Bits -----------------------------------------------------


//----- TACON Bits -----------------------------------------------------





//----- CPSBCON0 Bits -----------------------------------------------------



//----- CPSBCON1 Bits -----------------------------------------------------


//----- CPSACON0 Bits -----------------------------------------------------



//----- CPSACON1 Bits -----------------------------------------------------


//----- TBCON Bits -----------------------------------------------------





//----- DACCON0 Bits -----------------------------------------------------



//----- DACCON1 Bits -----------------------------------------------------


//----- ANSELA Bits -----------------------------------------------------



//----- ANSELB Bits -----------------------------------------------------



//----- ANSELC Bits -----------------------------------------------------



//----- ANSELD Bits -----------------------------------------------------



//----- ANSELE Bits -----------------------------------------------------



//----- PMCON1 Bits -----------------------------------------------------




//==========================================================================
//
//       RAM Definitions
//
//==========================================================================
//        __MAXRAM  H'01FF'
//        __BADRAM  H'018D'-H'018F'

//==========================================================================
//
//       Configuration Bits
//
//   NAME            Address
//   CONFIG            2007h
//   CONFIG2           2008h
//
//==========================================================================

// The following is an assignment of address values for all of the
// configuration registers for the purpose of table reads
#define _CONFIG              0x2007
#define _CONFIG2             0x2008

//----- CONFIG Options --------------------------------------------------
#define _FOSC_LP_OSC         0x3FF8    // LP oscillator: Low-power crystal on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
#define _LP_OSC              0x3FF8    // LP oscillator: Low-power crystal on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
#define _FOSC_XT_OSC         0x3FF9    // XT oscillator: Crystal/resonator on RA6/OSC2/CLKIN and RA7/OSC1/CLKIN
#define _XT_OSC              0x3FF9    // XT oscillator: Crystal/resonator on RA6/OSC2/CLKIN and RA7/OSC1/CLKIN
#define _FOSC_HS_OSC         0x3FFA    // HS oscillator: High Speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
#define _HS_OSC              0x3FFA    // HS oscillator: High Speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
#define _FOSC_EC_OSC         0x3FFB    // EC oscillator: I/O function on RA6/OSC2/CLKOUT pin, CLKIN on RA7/OSC1/CLKIN
#define _EC_OSC              0x3FFB    // EC oscillator: I/O function on RA6/OSC2/CLKOUT pin, CLKIN on RA7/OSC1/CLKIN
#define _FOSC_INTOSCIO       0x3FFC    // INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN pins
#define _INTOSCIO            0x3FFC    // INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN pins
#define _FOSC_INTOSC         0x3FFD    // INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O function  on RA7/OSC1/CLKIN
#define _INTOSC              0x3FFD    // INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O function  on RA7/OSC1/CLKIN
#define _FOSC_EXTRCIO        0x3FFE    // RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7/OSC1/CLKIN
#define _EXTRCIO             0x3FFE    // RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7/OSC1/CLKIN
#define _FOSC_EXTRC          0x3FFF    // RC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, RC on RA7/OSC1/CLKIN
#define _EXTRC               0x3FFF    // RC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, RC on RA7/OSC1/CLKIN

#define _WDTE_OFF            0x3FF7    // WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
#define _WDT_OFF             0x3FF7    // WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
#define _WDTE_ON             0x3FFF    // WDT enabled
#define _WDT_ON              0x3FFF    // WDT enabled

#define _PWRTE_ON            0x3FEF    // PWRT enabled
#define _PWRTE_OFF           0x3FFF    // PWRT disabled

#define _MCLRE_OFF           0x3FDF    // RE3/MCLR pin function is digital input, MCLR internally tied to VDD
#define _MCLRE_ON            0x3FFF    // RE3/MCLR pin function is MCLR

#define _CP_ON               0x3FBF    // Program memory code protection is enabled
#define _CP_OFF              0x3FFF    // Program memory code protection is disabled

#define _BOREN_OFF           0x3CFF    // BOR disabled (Preconditioned State)
#define _BOREN_NSLEEP        0x3EFF    // BOR enabled during operation and disabled in Sleep
#define _BOREN_ON            0x3FFF    // BOR enabled

#define _BORV_25             0x3BFF    // Brown-out Reset Voltage (VBOR) set to 2.5 V nominal
#define _BORV_19             0x3FFF    // Brown-out Reset Voltage (VBOR) set to 1.9 V nominal

#define _PLLEN_OFF           0x2FFF    // INTOSC Frequency is 500 kHz
#define _PLLEN_ON            0x3FFF    // INTOSC Frequency is 16 MHz (32x)

//----- CONFIG2 Options --------------------------------------------------
#define _VCAPEN_RA0          0x3FCF    // VCAP functionality is enabled on RA0
#define _VCAPEN_RA5          0x3FDF    // VCAP functionality is enabled on RA5
#define _VCAPEN_RA6          0x3FEF    // VCAP functionality is enabled on RA6
#define _VCAPEN_OFF          0x3FFF    // All VCAP pin functions are disabled

//----- DEVID Equates --------------------------------------------------
#define _DEVID1              0x2006

//----- IDLOC Equates --------------------------------------------------
#define _IDLOC0              0x2000
#define _IDLOC1              0x2001
#define _IDLOC2              0x2002
#define _IDLOC3              0x2003

//         LIST

// ----- ADCON0 bits --------------------
typedef union {
  struct {
    unsigned char ADON:1;
    unsigned char GO_NOT_DONE:1;
    unsigned char CHS0:1;
    unsigned char CHS1:1;
    unsigned char CHS2:1;
    unsigned char CHS3:1;
    unsigned char :1;
    unsigned char :1;
  };
} __ADCON0bits_t;
extern volatile __ADCON0bits_t __at(ADCON0_ADDR) ADCON0bits;

// ----- ADCON1 bits --------------------
typedef union {
  struct {
    unsigned char ADREF0:1;
    unsigned char ADREF1:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char ADCS0:1;
    unsigned char ADCS1:1;
    unsigned char ADCS2:1;
    unsigned char :1;
  };
} __ADCON1bits_t;
extern volatile __ADCON1bits_t __at(ADCON1_ADDR) ADCON1bits;

// ----- ANSELA bits --------------------
typedef union {
  struct {
    unsigned char ANSA0:1;
    unsigned char ANSA1:1;
    unsigned char ANSA2:1;
    unsigned char ANSA3:1;
    unsigned char ANSA4:1;
    unsigned char ANSA5:1;
    unsigned char ANSA6:1;
    unsigned char ANSA7:1;
  };
} __ANSELAbits_t;
extern volatile __ANSELAbits_t __at(ANSELA_ADDR) ANSELAbits;

// ----- ANSELB bits --------------------
typedef union {
  struct {
    unsigned char ANSB0:1;
    unsigned char ANSB1:1;
    unsigned char ANSB2:1;
    unsigned char ANSB3:1;
    unsigned char ANSB4:1;
    unsigned char ANSB5:1;
    unsigned char ANSB6:1;
    unsigned char ANSB7:1;
  };
} __ANSELBbits_t;
extern volatile __ANSELBbits_t __at(ANSELB_ADDR) ANSELBbits;

// ----- ANSELC bits --------------------
typedef union {
  struct {
    unsigned char ANSC0:1;
    unsigned char ANSC1:1;
    unsigned char ANSC2:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char ANSC5:1;
    unsigned char ANSC6:1;
    unsigned char ANSC7:1;
  };
} __ANSELCbits_t;
extern volatile __ANSELCbits_t __at(ANSELC_ADDR) ANSELCbits;

// ----- ANSELD bits --------------------
typedef union {
  struct {
    unsigned char ANSD0:1;
    unsigned char ANSD1:1;
    unsigned char ANSD2:1;
    unsigned char ANSD3:1;
    unsigned char ANSD4:1;
    unsigned char ANSD5:1;
    unsigned char ANSD6:1;
    unsigned char ANSD7:1;
  };
} __ANSELDbits_t;
extern volatile __ANSELDbits_t __at(ANSELD_ADDR) ANSELDbits;

// ----- ANSELE bits --------------------
typedef union {
  struct {
    unsigned char ANSE0:1;
    unsigned char ANSE1:1;
    unsigned char ANSE2:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __ANSELEbits_t;
extern volatile __ANSELEbits_t __at(ANSELE_ADDR) ANSELEbits;

// ----- APFCON bits --------------------
typedef union {
  struct {
    unsigned char CCP2SEL:1;
    unsigned char SSSEL:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __APFCONbits_t;
extern volatile __APFCONbits_t __at(APFCON_ADDR) APFCONbits;

// ----- CCP1CON bits --------------------
typedef union {
  struct {
    unsigned char CCP1M0:1;
    unsigned char CCP1M1:1;
    unsigned char CCP1M2:1;
    unsigned char CCP1M3:1;
    unsigned char DC1B0:1;
    unsigned char DC1B1:1;
    unsigned char :1;
    unsigned char :1;
  };
} __CCP1CONbits_t;
extern volatile __CCP1CONbits_t __at(CCP1CON_ADDR) CCP1CONbits;

// ----- CCP2CON bits --------------------
typedef union {
  struct {
    unsigned char CCP2M0:1;
    unsigned char CCP2M1:1;
    unsigned char CCP2M2:1;
    unsigned char CCP2M3:1;
    unsigned char DC2B0:1;
    unsigned char DC2B1:1;
    unsigned char :1;
    unsigned char :1;
  };
} __CCP2CONbits_t;
extern volatile __CCP2CONbits_t __at(CCP2CON_ADDR) CCP2CONbits;

// ----- CPSACON0 bits --------------------
typedef union {
  struct {
    unsigned char TAXCS:1;
    unsigned char CPSAOUT:1;
    unsigned char CPSARNG0:1;
    unsigned char CPSARNG1:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char CPSARM:1;
    unsigned char CPSAON:1;
  };
} __CPSACON0bits_t;
extern volatile __CPSACON0bits_t __at(CPSACON0_ADDR) CPSACON0bits;

// ----- CPSACON1 bits --------------------
typedef union {
  struct {
    unsigned char CPSACH0:1;
    unsigned char CPSACH1:1;
    unsigned char CPSACH2:1;
    unsigned char CPSACH3:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __CPSACON1bits_t;
extern volatile __CPSACON1bits_t __at(CPSACON1_ADDR) CPSACON1bits;

// ----- CPSBCON0 bits --------------------
typedef union {
  struct {
    unsigned char TBXCS:1;
    unsigned char CPSBOUT:1;
    unsigned char CPSBRNG0:1;
    unsigned char CPSBRNG1:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char CPSBRM:1;
    unsigned char CPSBON:1;
  };
} __CPSBCON0bits_t;
extern volatile __CPSBCON0bits_t __at(CPSBCON0_ADDR) CPSBCON0bits;

// ----- CPSBCON1 bits --------------------
typedef union {
  struct {
    unsigned char CPSBCH0:1;
    unsigned char CPSBCH1:1;
    unsigned char CPSBCH2:1;
    unsigned char CPSBCH3:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __CPSBCON1bits_t;
extern volatile __CPSBCON1bits_t __at(CPSBCON1_ADDR) CPSBCON1bits;

// ----- DACCON0 bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char DACPSS0:1;
    unsigned char DACPSS1:1;
    unsigned char :1;
    unsigned char DACOE:1;
    unsigned char DACLPS:1;
    unsigned char DACEN:1;
  };
} __DACCON0bits_t;
extern volatile __DACCON0bits_t __at(DACCON0_ADDR) DACCON0bits;

// ----- DACCON1 bits --------------------
typedef union {
  struct {
    unsigned char DACR0:1;
    unsigned char DACR1:1;
    unsigned char DACR2:1;
    unsigned char DACR3:1;
    unsigned char DACR4:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __DACCON1bits_t;
extern volatile __DACCON1bits_t __at(DACCON1_ADDR) DACCON1bits;

// ----- FVRCON bits --------------------
typedef union {
  struct {
    unsigned char ADFVR0:1;
    unsigned char ADFVR1:1;
    unsigned char CDAFVR0:1;
    unsigned char CDAFVR1:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char FVREN:1;
    unsigned char FVRRDY:1;
  };
} __FVRCONbits_t;
extern volatile __FVRCONbits_t __at(FVRCON_ADDR) FVRCONbits;

// ----- INTCON bits --------------------
typedef union {
  struct {
    unsigned char RBIF:1;
    unsigned char INTF:1;
    unsigned char TMR0IF:1;
    unsigned char RBIE:1;
    unsigned char INTE:1;
    unsigned char TMR0IE:1;
    unsigned char PEIE:1;
    unsigned char GIE:1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char T0IF:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char T0IE:1;
    unsigned char :1;
    unsigned char :1;
  };
} __INTCONbits_t;
extern volatile __INTCONbits_t __at(INTCON_ADDR) INTCONbits;

// ----- IOCB bits --------------------
typedef union {
  struct {
    unsigned char IOCB0:1;
    unsigned char IOCB1:1;
    unsigned char IOCB2:1;
    unsigned char IOCB3:1;
    unsigned char IOCB4:1;
    unsigned char IOCB5:1;
    unsigned char IOCB6:1;
    unsigned char IOCB7:1;
  };
} __IOCBbits_t;
extern volatile __IOCBbits_t __at(IOCB_ADDR) IOCBbits;

// ----- OPTION_REG bits --------------------
typedef union {
  struct {
    unsigned char PS0:1;
    unsigned char PS1:1;
    unsigned char PS2:1;
    unsigned char PSA:1;
    unsigned char TMR0SE:1;
    unsigned char TMR0CS:1;
    unsigned char INTEDG:1;
    unsigned char NOT_RBPU:1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char T0SE:1;
    unsigned char T0CS:1;
    unsigned char :1;
    unsigned char :1;
  };
} __OPTION_REGbits_t;
extern volatile __OPTION_REGbits_t __at(OPTION_REG_ADDR) OPTION_REGbits;

// ----- OSCCON bits --------------------
typedef union {
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char ICSS:1;
    unsigned char ICSL:1;
    unsigned char IRCF0:1;
    unsigned char IRCF1:1;
    unsigned char :1;
    unsigned char :1;
  };
} __OSCCONbits_t;
extern volatile __OSCCONbits_t __at(OSCCON_ADDR) OSCCONbits;

// ----- PCON bits --------------------
typedef union {
  struct {
    unsigned char NOT_BOR:1;
    unsigned char NOT_POR:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __PCONbits_t;
extern volatile __PCONbits_t __at(PCON_ADDR) PCONbits;

// ----- PIE1 bits --------------------
typedef union {
  struct {
    unsigned char TMR1IE:1;
    unsigned char TMR2IE:1;
    unsigned char CCP1IE:1;
    unsigned char SSPIE:1;
    unsigned char TXIE:1;
    unsigned char RCIE:1;
    unsigned char ADIE:1;
    unsigned char TMR1GIE:1;
  };
} __PIE1bits_t;
extern volatile __PIE1bits_t __at(PIE1_ADDR) PIE1bits;

// ----- PIE2 bits --------------------
typedef union {
  struct {
    unsigned char CCP2IE:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char TMRAIE:1;
    unsigned char TMRBIE:1;
    unsigned char TMR3IE:1;
    unsigned char TMR3GIE:1;
  };
} __PIE2bits_t;
extern volatile __PIE2bits_t __at(PIE2_ADDR) PIE2bits;

// ----- PIR1 bits --------------------
typedef union {
  struct {
    unsigned char TMR1IF:1;
    unsigned char TMR2IF:1;
    unsigned char CCP1IF:1;
    unsigned char SSPIF:1;
    unsigned char TXIF:1;
    unsigned char RCIF:1;
    unsigned char ADIF:1;
    unsigned char TMR1GIF:1;
  };
} __PIR1bits_t;
extern volatile __PIR1bits_t __at(PIR1_ADDR) PIR1bits;

// ----- PIR2 bits --------------------
typedef union {
  struct {
    unsigned char CCP2IF:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char TMRAIF:1;
    unsigned char TMRBIF:1;
    unsigned char TMR3IF:1;
    unsigned char TMR3GIF:1;
  };
} __PIR2bits_t;
extern volatile __PIR2bits_t __at(PIR2_ADDR) PIR2bits;

// ----- PMCON1 bits --------------------
typedef union {
  struct {
    unsigned char RD:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __PMCON1bits_t;
extern volatile __PMCON1bits_t __at(PMCON1_ADDR) PMCON1bits;

// ----- PORTA bits --------------------
typedef union {
  struct {
    unsigned char RA0:1;
    unsigned char RA1:1;
    unsigned char RA2:1;
    unsigned char RA3:1;
    unsigned char RA4:1;
    unsigned char RA5:1;
    unsigned char RA6:1;
    unsigned char RA7:1;
  };
  struct {
    unsigned char AN0:1;
    unsigned char AN1:1;
    unsigned char AN2:1;
    unsigned char AN3:1;
    unsigned char CPSA3:1;
    unsigned char AN4:1;
    unsigned char OSC2:1;
    unsigned char OSC1:1;
  };
  struct {
    unsigned char :1;
    unsigned char CPSA0:1;
    unsigned char CPSA1:1;
    unsigned char CPSA2:1;
    unsigned char T0CKI:1;
    unsigned char CPSA4:1;
    unsigned char CPSB1:1;
    unsigned char CPSB0:1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char DACOUT:1;
    unsigned char :1;
    unsigned char TACKI:1;
    unsigned char :1;
    unsigned char CLKOUT:1;
    unsigned char CLKIN:1;
  };
} __PORTAbits_t;
extern volatile __PORTAbits_t __at(PORTA_ADDR) PORTAbits;

// ----- PORTB bits --------------------
typedef union {
  struct {
    unsigned char RB0:1;
    unsigned char RB1:1;
    unsigned char RB2:1;
    unsigned char RB3:1;
    unsigned char RB4:1;
    unsigned char RB5:1;
    unsigned char RB6:1;
    unsigned char RB7:1;
  };
  struct {
    unsigned char AN12:1;
    unsigned char AN10:1;
    unsigned char AN8:1;
    unsigned char AN9:1;
    unsigned char AN11:1;
    unsigned char AN13:1;
    unsigned char CPSB14:1;
    unsigned char CPSB15:1;
  };
  struct {
    unsigned char CPSB8:1;
    unsigned char CPSB9:1;
    unsigned char CPSB10:1;
    unsigned char CPSB11:1;
    unsigned char CPSB12:1;
    unsigned char CPSB13:1;
    unsigned char :1;
    unsigned char :1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char CCP2_PORTB:1;
    unsigned char :1;
    unsigned char T1G:1;
    unsigned char :1;
    unsigned char :1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char T3CKI:1;
    unsigned char :1;
    unsigned char :1;
  };
} __PORTBbits_t;
extern volatile __PORTBbits_t __at(PORTB_ADDR) PORTBbits;

// ----- PORTC bits --------------------
typedef union {
  struct {
    unsigned char RC0:1;
    unsigned char RC1:1;
    unsigned char RC2:1;
    unsigned char RC3:1;
    unsigned char RC4:1;
    unsigned char RC5:1;
    unsigned char RC6:1;
    unsigned char RC7:1;
  };
  struct {
    unsigned char CPSB2:1;
    unsigned char CPSB3:1;
    unsigned char CPSB4:1;
    unsigned char SCK:1;
    unsigned char SDI:1;
    unsigned char CPSA9:1;
    unsigned char CPSA10:1;
    unsigned char CPSA11:1;
  };
  struct {
    unsigned char T1OSO:1;
    unsigned char T1OSI:1;
    unsigned char TBCKI:1;
    unsigned char SCL:1;
    unsigned char SDA:1;
    unsigned char SDO:1;
    unsigned char TX:1;
    unsigned char RX:1;
  };
  struct {
    unsigned char T1CKI:1;
    unsigned char CCP2_PORTC:1;
    unsigned char CCP1:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char CK:1;
    unsigned char :1;
  };
} __PORTCbits_t;
extern volatile __PORTCbits_t __at(PORTC_ADDR) PORTCbits;

// ----- PORTD bits --------------------
typedef union {
  struct {
    unsigned char RD0:1;
    unsigned char RD1:1;
    unsigned char RD2:1;
    unsigned char RD3:1;
    unsigned char RD4:1;
    unsigned char RD5:1;
    unsigned char RD6:1;
    unsigned char RD7:1;
  };
  struct {
    unsigned char CPSB5:1;
    unsigned char CPSB6:1;
    unsigned char CPSB7:1;
    unsigned char CPSA8:1;
    unsigned char CPSA12:1;
    unsigned char CPSA13:1;
    unsigned char CPSA14:1;
    unsigned char CPSA15:1;
  };
  struct {
    unsigned char T3G:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __PORTDbits_t;
extern volatile __PORTDbits_t __at(PORTD_ADDR) PORTDbits;

// ----- PORTE bits --------------------
typedef union {
  struct {
    unsigned char RE0:1;
    unsigned char RE1:1;
    unsigned char RE2:1;
    unsigned char RE3:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
  struct {
    unsigned char AN5:1;
    unsigned char AN6:1;
    unsigned char AN7:1;
    unsigned char NOT_MCLR:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
  struct {
    unsigned char CPSA5:1;
    unsigned char CPSA6:1;
    unsigned char CPSA7:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __PORTEbits_t;
extern volatile __PORTEbits_t __at(PORTE_ADDR) PORTEbits;

// ----- RCSTA bits --------------------
typedef union {
  struct {
    unsigned char RX9D:1;
    unsigned char OERR:1;
    unsigned char FERR:1;
    unsigned char ADDEN:1;
    unsigned char CREN:1;
    unsigned char SREN:1;
    unsigned char RX9:1;
    unsigned char SPEN:1;
  };
} __RCSTAbits_t;
extern volatile __RCSTAbits_t __at(RCSTA_ADDR) RCSTAbits;

// ----- SSPCON bits --------------------
typedef union {
  struct {
    unsigned char SSPM0:1;
    unsigned char SSPM1:1;
    unsigned char SSPM2:1;
    unsigned char SSPM3:1;
    unsigned char CKP:1;
    unsigned char SSPEN:1;
    unsigned char SSPOV:1;
    unsigned char WCOL:1;
  };
} __SSPCONbits_t;
extern volatile __SSPCONbits_t __at(SSPCON_ADDR) SSPCONbits;

// ----- SSPSTAT bits --------------------
typedef union {
  struct {
    unsigned char BF:1;
    unsigned char UA:1;
    unsigned char R_NOT_W:1;
    unsigned char S:1;
    unsigned char P:1;
    unsigned char D_NOT_A:1;
    unsigned char CKE:1;
    unsigned char SMP:1;
  };
} __SSPSTATbits_t;
extern volatile __SSPSTATbits_t __at(SSPSTAT_ADDR) SSPSTATbits;

// ----- STATUS bits --------------------
typedef union {
  struct {
    unsigned char C:1;
    unsigned char DC:1;
    unsigned char Z:1;
    unsigned char NOT_PD:1;
    unsigned char NOT_TO:1;
    unsigned char RP0:1;
    unsigned char RP1:1;
    unsigned char IRP:1;
  };
} __STATUSbits_t;
extern volatile __STATUSbits_t __at(STATUS_ADDR) STATUSbits;

// ----- T1CON bits --------------------
typedef union {
  struct {
    unsigned char TMR1ON:1;
    unsigned char :1;
    unsigned char NOT_T1SYNC:1;
    unsigned char T1OSCEN:1;
    unsigned char T1CKPS0:1;
    unsigned char T1CKPS1:1;
    unsigned char TMRCS0:1;
    unsigned char TMRCS1:1;
  };
  struct {
    unsigned char :1;
    unsigned char :1;
    unsigned char T1SYNC:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __T1CONbits_t;
extern volatile __T1CONbits_t __at(T1CON_ADDR) T1CONbits;

// ----- T1GCON bits --------------------
typedef union {
  struct {
    unsigned char T1GSS0:1;
    unsigned char T1GSS1:1;
    unsigned char T1GVAL:1;
    unsigned char T1GGO_NOT_DONE:1;
    unsigned char T1GSPM:1;
    unsigned char T1GTM:1;
    unsigned char T1GPOL:1;
    unsigned char TMR1GE:1;
  };
} __T1GCONbits_t;
extern volatile __T1GCONbits_t __at(T1GCON_ADDR) T1GCONbits;

// ----- T2CON bits --------------------
typedef union {
  struct {
    unsigned char T2CKPS0:1;
    unsigned char T2CKPS1:1;
    unsigned char TMR2ON:1;
    unsigned char TOUTPS0:1;
    unsigned char TOUTPS1:1;
    unsigned char TOUTPS2:1;
    unsigned char TOUTPS3:1;
    unsigned char :1;
  };
} __T2CONbits_t;
extern volatile __T2CONbits_t __at(T2CON_ADDR) T2CONbits;

// ----- T3CON bits --------------------
typedef union {
  struct {
    unsigned char TMR3ON:1;
    unsigned char :1;
    unsigned char T3SYNC:1;
    unsigned char :1;
    unsigned char T3CKPS0:1;
    unsigned char T3CKPS1:1;
    unsigned char TMR3CS0:1;
    unsigned char TMR3CS1:1;
  };
} __T3CONbits_t;
extern volatile __T3CONbits_t __at(T3CON_ADDR) T3CONbits;

// ----- T3GCON bits --------------------
typedef union {
  struct {
    unsigned char T3GSS0:1;
    unsigned char T3GSS1:1;
    unsigned char T3GVAL:1;
    unsigned char T3GGO_NOT_DONE:1;
    unsigned char T3GSPM:1;
    unsigned char T3GTM:1;
    unsigned char T3GPOL:1;
    unsigned char TMR3GE:1;
  };
} __T3GCONbits_t;
extern volatile __T3GCONbits_t __at(T3GCON_ADDR) T3GCONbits;

// ----- TACON bits --------------------
typedef union {
  struct {
    unsigned char TAPS0:1;
    unsigned char TAPS1:1;
    unsigned char TAPS2:1;
    unsigned char TAPSA:1;
    unsigned char TASE:1;
    unsigned char TACS:1;
    unsigned char :1;
    unsigned char TMRAON:1;
  };
  struct {
    unsigned char TMRAPS0:1;
    unsigned char TMRAPS1:1;
    unsigned char TMRAPS2:1;
    unsigned char TMRAPSA:1;
    unsigned char TMRASE:1;
    unsigned char TMRACS:1;
    unsigned char :1;
    unsigned char :1;
  };
} __TACONbits_t;
extern volatile __TACONbits_t __at(TACON_ADDR) TACONbits;

// ----- TBCON bits --------------------
typedef union {
  struct {
    unsigned char TBPS0:1;
    unsigned char TBPS1:1;
    unsigned char TBPS2:1;
    unsigned char TBPSA:1;
    unsigned char TBSE:1;
    unsigned char TBCS:1;
    unsigned char :1;
    unsigned char TMRBON:1;
  };
  struct {
    unsigned char TMRBPS0:1;
    unsigned char TMRBPS1:1;
    unsigned char TMRBPS2:1;
    unsigned char TMRBPSA:1;
    unsigned char TMRBSE:1;
    unsigned char TMRBCS:1;
    unsigned char :1;
    unsigned char :1;
  };
} __TBCONbits_t;
extern volatile __TBCONbits_t __at(TBCON_ADDR) TBCONbits;

// ----- TRISA bits --------------------
typedef union {
  struct {
    unsigned char TRISA0:1;
    unsigned char TRISA1:1;
    unsigned char TRISA2:1;
    unsigned char TRISA3:1;
    unsigned char TRISA4:1;
    unsigned char TRISA5:1;
    unsigned char TRISA6:1;
    unsigned char TRISA7:1;
  };
} __TRISAbits_t;
extern volatile __TRISAbits_t __at(TRISA_ADDR) TRISAbits;

// ----- TRISB bits --------------------
typedef union {
  struct {
    unsigned char TRISB0:1;
    unsigned char TRISB1:1;
    unsigned char TRISB2:1;
    unsigned char TRISB3:1;
    unsigned char TRISB4:1;
    unsigned char TRISB5:1;
    unsigned char TRISB6:1;
    unsigned char TRISB7:1;
  };
} __TRISBbits_t;
extern volatile __TRISBbits_t __at(TRISB_ADDR) TRISBbits;

// ----- TRISC bits --------------------
typedef union {
  struct {
    unsigned char TRISC0:1;
    unsigned char TRISC1:1;
    unsigned char TRISC2:1;
    unsigned char TRISC3:1;
    unsigned char TRISC4:1;
    unsigned char TRISC5:1;
    unsigned char TRISC6:1;
    unsigned char TRISC7:1;
  };
} __TRISCbits_t;
extern volatile __TRISCbits_t __at(TRISC_ADDR) TRISCbits;

// ----- TRISD bits --------------------
typedef union {
  struct {
    unsigned char TRISD0:1;
    unsigned char TRISD1:1;
    unsigned char TRISD2:1;
    unsigned char TRISD3:1;
    unsigned char TRISD4:1;
    unsigned char TRISD5:1;
    unsigned char TRISD6:1;
    unsigned char TRISD7:1;
  };
} __TRISDbits_t;
extern volatile __TRISDbits_t __at(TRISD_ADDR) TRISDbits;

// ----- TRISE bits --------------------
typedef union {
  struct {
    unsigned char TRISE0:1;
    unsigned char TRISE1:1;
    unsigned char TRISE2:1;
    unsigned char TRISE3:1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
    unsigned char :1;
  };
} __TRISEbits_t;
extern volatile __TRISEbits_t __at(TRISE_ADDR) TRISEbits;

// ----- TXSTA bits --------------------
typedef union {
  struct {
    unsigned char TX9D:1;
    unsigned char TRMT:1;
    unsigned char BRGH:1;
    unsigned char :1;
    unsigned char SYNC:1;
    unsigned char TXEN:1;
    unsigned char TX9:1;
    unsigned char CSRC:1;
  };
} __TXSTAbits_t;
extern volatile __TXSTAbits_t __at(TXSTA_ADDR) TXSTAbits;

// ----- WPUB bits --------------------
typedef union {
  struct {
    unsigned char WPUB0:1;
    unsigned char WPUB1:1;
    unsigned char WPUB2:1;
    unsigned char WPUB3:1;
    unsigned char WPUB4:1;
    unsigned char WPUB5:1;
    unsigned char WPUB6:1;
    unsigned char WPUB7:1;
  };
} __WPUBbits_t;
extern volatile __WPUBbits_t __at(WPUB_ADDR) WPUBbits;


#ifndef NO_BIT_DEFINES

#define ADON                 ADCON0bits.ADON                /* bit 0 */
#define GO_NOT_DONE          ADCON0bits.GO_NOT_DONE         /* bit 1 */
#define CHS0                 ADCON0bits.CHS0                /* bit 2 */
#define CHS1                 ADCON0bits.CHS1                /* bit 3 */
#define CHS2                 ADCON0bits.CHS2                /* bit 4 */
#define CHS3                 ADCON0bits.CHS3                /* bit 5 */

#define ADREF0               ADCON1bits.ADREF0              /* bit 0 */
#define ADREF1               ADCON1bits.ADREF1              /* bit 1 */
#define ADCS0                ADCON1bits.ADCS0               /* bit 4 */
#define ADCS1                ADCON1bits.ADCS1               /* bit 5 */
#define ADCS2                ADCON1bits.ADCS2               /* bit 6 */

#define ANSA0                ANSELAbits.ANSA0               /* bit 0 */
#define ANSA1                ANSELAbits.ANSA1               /* bit 1 */
#define ANSA2                ANSELAbits.ANSA2               /* bit 2 */
#define ANSA3                ANSELAbits.ANSA3               /* bit 3 */
#define ANSA4                ANSELAbits.ANSA4               /* bit 4 */
#define ANSA5                ANSELAbits.ANSA5               /* bit 5 */
#define ANSA6                ANSELAbits.ANSA6               /* bit 6 */
#define ANSA7                ANSELAbits.ANSA7               /* bit 7 */

#define ANSB0                ANSELBbits.ANSB0               /* bit 0 */
#define ANSB1                ANSELBbits.ANSB1               /* bit 1 */
#define ANSB2                ANSELBbits.ANSB2               /* bit 2 */
#define ANSB3                ANSELBbits.ANSB3               /* bit 3 */
#define ANSB4                ANSELBbits.ANSB4               /* bit 4 */
#define ANSB5                ANSELBbits.ANSB5               /* bit 5 */
#define ANSB6                ANSELBbits.ANSB6               /* bit 6 */
#define ANSB7                ANSELBbits.ANSB7               /* bit 7 */

#define ANSC0                ANSELCbits.ANSC0               /* bit 0 */
#define ANSC1                ANSELCbits.ANSC1               /* bit 1 */
#define ANSC2                ANSELCbits.ANSC2               /* bit 2 */
#define ANSC5                ANSELCbits.ANSC5               /* bit 5 */
#define ANSC6                ANSELCbits.ANSC6               /* bit 6 */
#define ANSC7                ANSELCbits.ANSC7               /* bit 7 */

#define ANSD0                ANSELDbits.ANSD0               /* bit 0 */
#define ANSD1                ANSELDbits.ANSD1               /* bit 1 */
#define ANSD2                ANSELDbits.ANSD2               /* bit 2 */
#define ANSD3                ANSELDbits.ANSD3               /* bit 3 */
#define ANSD4                ANSELDbits.ANSD4               /* bit 4 */
#define ANSD5                ANSELDbits.ANSD5               /* bit 5 */
#define ANSD6                ANSELDbits.ANSD6               /* bit 6 */
#define ANSD7                ANSELDbits.ANSD7               /* bit 7 */

#define ANSE0                ANSELEbits.ANSE0               /* bit 0 */
#define ANSE1                ANSELEbits.ANSE1               /* bit 1 */
#define ANSE2                ANSELEbits.ANSE2               /* bit 2 */

#define CCP2SEL              APFCONbits.CCP2SEL             /* bit 0 */
#define SSSEL                APFCONbits.SSSEL               /* bit 1 */

#define CCP1M0               CCP1CONbits.CCP1M0             /* bit 0 */
#define CCP1M1               CCP1CONbits.CCP1M1             /* bit 1 */
#define CCP1M2               CCP1CONbits.CCP1M2             /* bit 2 */
#define CCP1M3               CCP1CONbits.CCP1M3             /* bit 3 */
#define DC1B0                CCP1CONbits.DC1B0              /* bit 4 */
#define DC1B1                CCP1CONbits.DC1B1              /* bit 5 */

#define CCP2M0               CCP2CONbits.CCP2M0             /* bit 0 */
#define CCP2M1               CCP2CONbits.CCP2M1             /* bit 1 */
#define CCP2M2               CCP2CONbits.CCP2M2             /* bit 2 */
#define CCP2M3               CCP2CONbits.CCP2M3             /* bit 3 */
#define DC2B0                CCP2CONbits.DC2B0              /* bit 4 */
#define DC2B1                CCP2CONbits.DC2B1              /* bit 5 */

#define TAXCS                CPSACON0bits.TAXCS             /* bit 0 */
#define CPSAOUT              CPSACON0bits.CPSAOUT           /* bit 1 */
#define CPSARNG0             CPSACON0bits.CPSARNG0          /* bit 2 */
#define CPSARNG1             CPSACON0bits.CPSARNG1          /* bit 3 */
#define CPSARM               CPSACON0bits.CPSARM            /* bit 6 */
#define CPSAON               CPSACON0bits.CPSAON            /* bit 7 */

#define CPSACH0              CPSACON1bits.CPSACH0           /* bit 0 */
#define CPSACH1              CPSACON1bits.CPSACH1           /* bit 1 */
#define CPSACH2              CPSACON1bits.CPSACH2           /* bit 2 */
#define CPSACH3              CPSACON1bits.CPSACH3           /* bit 3 */

#define TBXCS                CPSBCON0bits.TBXCS             /* bit 0 */
#define CPSBOUT              CPSBCON0bits.CPSBOUT           /* bit 1 */
#define CPSBRNG0             CPSBCON0bits.CPSBRNG0          /* bit 2 */
#define CPSBRNG1             CPSBCON0bits.CPSBRNG1          /* bit 3 */
#define CPSBRM               CPSBCON0bits.CPSBRM            /* bit 6 */
#define CPSBON               CPSBCON0bits.CPSBON            /* bit 7 */

#define CPSBCH0              CPSBCON1bits.CPSBCH0           /* bit 0 */
#define CPSBCH1              CPSBCON1bits.CPSBCH1           /* bit 1 */
#define CPSBCH2              CPSBCON1bits.CPSBCH2           /* bit 2 */
#define CPSBCH3              CPSBCON1bits.CPSBCH3           /* bit 3 */

#define DACPSS0              DACCON0bits.DACPSS0            /* bit 2 */
#define DACPSS1              DACCON0bits.DACPSS1            /* bit 3 */
#define DACOE                DACCON0bits.DACOE              /* bit 5 */
#define DACLPS               DACCON0bits.DACLPS             /* bit 6 */
#define DACEN                DACCON0bits.DACEN              /* bit 7 */

#define DACR0                DACCON1bits.DACR0              /* bit 0 */
#define DACR1                DACCON1bits.DACR1              /* bit 1 */
#define DACR2                DACCON1bits.DACR2              /* bit 2 */
#define DACR3                DACCON1bits.DACR3              /* bit 3 */
#define DACR4                DACCON1bits.DACR4              /* bit 4 */

#define ADFVR0               FVRCONbits.ADFVR0              /* bit 0 */
#define ADFVR1               FVRCONbits.ADFVR1              /* bit 1 */
#define CDAFVR0              FVRCONbits.CDAFVR0             /* bit 2 */
#define CDAFVR1              FVRCONbits.CDAFVR1             /* bit 3 */
#define FVREN                FVRCONbits.FVREN               /* bit 6 */
#define FVRRDY               FVRCONbits.FVRRDY              /* bit 7 */

#define RBIF                 INTCONbits.RBIF                /* bit 0 */
#define INTF                 INTCONbits.INTF                /* bit 1 */
#define T0IF                 INTCONbits.T0IF                /* bit 2 */
#define TMR0IF               INTCONbits.TMR0IF              /* bit 2 */
#define RBIE                 INTCONbits.RBIE                /* bit 3 */
#define INTE                 INTCONbits.INTE                /* bit 4 */
#define T0IE                 INTCONbits.T0IE                /* bit 5 */
#define TMR0IE               INTCONbits.TMR0IE              /* bit 5 */
#define PEIE                 INTCONbits.PEIE                /* bit 6 */
#define GIE                  INTCONbits.GIE                 /* bit 7 */

#define IOCB0                IOCBbits.IOCB0                 /* bit 0 */
#define IOCB1                IOCBbits.IOCB1                 /* bit 1 */
#define IOCB2                IOCBbits.IOCB2                 /* bit 2 */
#define IOCB3                IOCBbits.IOCB3                 /* bit 3 */
#define IOCB4                IOCBbits.IOCB4                 /* bit 4 */
#define IOCB5                IOCBbits.IOCB5                 /* bit 5 */
#define IOCB6                IOCBbits.IOCB6                 /* bit 6 */
#define IOCB7                IOCBbits.IOCB7                 /* bit 7 */

#define PS0                  OPTION_REGbits.PS0             /* bit 0 */
#define PS1                  OPTION_REGbits.PS1             /* bit 1 */
#define PS2                  OPTION_REGbits.PS2             /* bit 2 */
#define PSA                  OPTION_REGbits.PSA             /* bit 3 */
#define T0SE                 OPTION_REGbits.T0SE            /* bit 4 */
#define TMR0SE               OPTION_REGbits.TMR0SE          /* bit 4 */
#define T0CS                 OPTION_REGbits.T0CS            /* bit 5 */
#define TMR0CS               OPTION_REGbits.TMR0CS          /* bit 5 */
#define INTEDG               OPTION_REGbits.INTEDG          /* bit 6 */
#define NOT_RBPU             OPTION_REGbits.NOT_RBPU        /* bit 7 */

#define ICSS                 OSCCONbits.ICSS                /* bit 2 */
#define ICSL                 OSCCONbits.ICSL                /* bit 3 */
#define IRCF0                OSCCONbits.IRCF0               /* bit 4 */
#define IRCF1                OSCCONbits.IRCF1               /* bit 5 */

#define NOT_BOR              PCONbits.NOT_BOR               /* bit 0 */
#define NOT_POR              PCONbits.NOT_POR               /* bit 1 */

#define TMR1IE               PIE1bits.TMR1IE                /* bit 0 */
#define TMR2IE               PIE1bits.TMR2IE                /* bit 1 */
#define CCP1IE               PIE1bits.CCP1IE                /* bit 2 */
#define SSPIE                PIE1bits.SSPIE                 /* bit 3 */
#define TXIE                 PIE1bits.TXIE                  /* bit 4 */
#define RCIE                 PIE1bits.RCIE                  /* bit 5 */
#define ADIE                 PIE1bits.ADIE                  /* bit 6 */
#define TMR1GIE              PIE1bits.TMR1GIE               /* bit 7 */

#define CCP2IE               PIE2bits.CCP2IE                /* bit 0 */
#define TMRAIE               PIE2bits.TMRAIE                /* bit 4 */
#define TMRBIE               PIE2bits.TMRBIE                /* bit 5 */
#define TMR3IE               PIE2bits.TMR3IE                /* bit 6 */
#define TMR3GIE              PIE2bits.TMR3GIE               /* bit 7 */

#define TMR1IF               PIR1bits.TMR1IF                /* bit 0 */
#define TMR2IF               PIR1bits.TMR2IF                /* bit 1 */
#define CCP1IF               PIR1bits.CCP1IF                /* bit 2 */
#define SSPIF                PIR1bits.SSPIF                 /* bit 3 */
#define TXIF                 PIR1bits.TXIF                  /* bit 4 */
#define RCIF                 PIR1bits.RCIF                  /* bit 5 */
#define ADIF                 PIR1bits.ADIF                  /* bit 6 */
#define TMR1GIF              PIR1bits.TMR1GIF               /* bit 7 */

#define CCP2IF               PIR2bits.CCP2IF                /* bit 0 */
#define TMRAIF               PIR2bits.TMRAIF                /* bit 4 */
#define TMRBIF               PIR2bits.TMRBIF                /* bit 5 */
#define TMR3IF               PIR2bits.TMR3IF                /* bit 6 */
#define TMR3GIF              PIR2bits.TMR3GIF               /* bit 7 */

#define RD                   PMCON1bits.RD                  /* bit 0 */

#define AN0                  PORTAbits.AN0                  /* bit 0 */
#define RA0                  PORTAbits.RA0                  /* bit 0 */
#define AN1                  PORTAbits.AN1                  /* bit 1 */
#define CPSA0                PORTAbits.CPSA0                /* bit 1 */
#define RA1                  PORTAbits.RA1                  /* bit 1 */
#define AN2                  PORTAbits.AN2                  /* bit 2 */
#define CPSA1                PORTAbits.CPSA1                /* bit 2 */
#define DACOUT               PORTAbits.DACOUT               /* bit 2 */
#define RA2                  PORTAbits.RA2                  /* bit 2 */
#define AN3                  PORTAbits.AN3                  /* bit 3 */
#define CPSA2                PORTAbits.CPSA2                /* bit 3 */
#define RA3                  PORTAbits.RA3                  /* bit 3 */
#define CPSA3                PORTAbits.CPSA3                /* bit 4 */
#define RA4                  PORTAbits.RA4                  /* bit 4 */
#define T0CKI                PORTAbits.T0CKI                /* bit 4 */
#define TACKI                PORTAbits.TACKI                /* bit 4 */
#define AN4                  PORTAbits.AN4                  /* bit 5 */
#define CPSA4                PORTAbits.CPSA4                /* bit 5 */
#define RA5                  PORTAbits.RA5                  /* bit 5 */
#define CLKOUT               PORTAbits.CLKOUT               /* bit 6 */
#define CPSB1                PORTAbits.CPSB1                /* bit 6 */
#define OSC2                 PORTAbits.OSC2                 /* bit 6 */
#define RA6                  PORTAbits.RA6                  /* bit 6 */
#define CLKIN                PORTAbits.CLKIN                /* bit 7 */
#define CPSB0                PORTAbits.CPSB0                /* bit 7 */
#define OSC1                 PORTAbits.OSC1                 /* bit 7 */
#define RA7                  PORTAbits.RA7                  /* bit 7 */

#define AN12                 PORTBbits.AN12                 /* bit 0 */
#define CPSB8                PORTBbits.CPSB8                /* bit 0 */
#define RB0                  PORTBbits.RB0                  /* bit 0 */
#define AN10                 PORTBbits.AN10                 /* bit 1 */
#define CPSB9                PORTBbits.CPSB9                /* bit 1 */
#define RB1                  PORTBbits.RB1                  /* bit 1 */
#define AN8                  PORTBbits.AN8                  /* bit 2 */
#define CPSB10               PORTBbits.CPSB10               /* bit 2 */
#define RB2                  PORTBbits.RB2                  /* bit 2 */
#define AN9                  PORTBbits.AN9                  /* bit 3 */
#define CCP2_PORTB           PORTBbits.CCP2_PORTB           /* bit 3 */
#define CPSB11               PORTBbits.CPSB11               /* bit 3 */
#define RB3                  PORTBbits.RB3                  /* bit 3 */
#define AN11                 PORTBbits.AN11                 /* bit 4 */
#define CPSB12               PORTBbits.CPSB12               /* bit 4 */
#define RB4                  PORTBbits.RB4                  /* bit 4 */
#define AN13                 PORTBbits.AN13                 /* bit 5 */
#define CPSB13               PORTBbits.CPSB13               /* bit 5 */
#define RB5                  PORTBbits.RB5                  /* bit 5 */
#define T1G                  PORTBbits.T1G                  /* bit 5 */
#define T3CKI                PORTBbits.T3CKI                /* bit 5 */
#define CPSB14               PORTBbits.CPSB14               /* bit 6 */
#define RB6                  PORTBbits.RB6                  /* bit 6 */
#define CPSB15               PORTBbits.CPSB15               /* bit 7 */
#define RB7                  PORTBbits.RB7                  /* bit 7 */

#define CPSB2                PORTCbits.CPSB2                /* bit 0 */
#define RC0                  PORTCbits.RC0                  /* bit 0 */
#define T1CKI                PORTCbits.T1CKI                /* bit 0 */
#define T1OSO                PORTCbits.T1OSO                /* bit 0 */
#define CCP2_PORTC           PORTCbits.CCP2_PORTC           /* bit 1 */
#define CPSB3                PORTCbits.CPSB3                /* bit 1 */
#define RC1                  PORTCbits.RC1                  /* bit 1 */
#define T1OSI                PORTCbits.T1OSI                /* bit 1 */
#define CCP1                 PORTCbits.CCP1                 /* bit 2 */
#define CPSB4                PORTCbits.CPSB4                /* bit 2 */
#define RC2                  PORTCbits.RC2                  /* bit 2 */
#define TBCKI                PORTCbits.TBCKI                /* bit 2 */
#define RC3                  PORTCbits.RC3                  /* bit 3 */
#define SCK                  PORTCbits.SCK                  /* bit 3 */
#define SCL                  PORTCbits.SCL                  /* bit 3 */
#define RC4                  PORTCbits.RC4                  /* bit 4 */
#define SDA                  PORTCbits.SDA                  /* bit 4 */
#define SDI                  PORTCbits.SDI                  /* bit 4 */
#define CPSA9                PORTCbits.CPSA9                /* bit 5 */
#define RC5                  PORTCbits.RC5                  /* bit 5 */
#define SDO                  PORTCbits.SDO                  /* bit 5 */
#define CK                   PORTCbits.CK                   /* bit 6 */
#define CPSA10               PORTCbits.CPSA10               /* bit 6 */
#define RC6                  PORTCbits.RC6                  /* bit 6 */
#define TX                   PORTCbits.TX                   /* bit 6 */
#define CPSA11               PORTCbits.CPSA11               /* bit 7 */
#define RC7                  PORTCbits.RC7                  /* bit 7 */
#define RX                   PORTCbits.RX                   /* bit 7 */

#define CPSB5                PORTDbits.CPSB5                /* bit 0 */
#define RD0                  PORTDbits.RD0                  /* bit 0 */
#define T3G                  PORTDbits.T3G                  /* bit 0 */
#define CPSB6                PORTDbits.CPSB6                /* bit 1 */
#define RD1                  PORTDbits.RD1                  /* bit 1 */
#define CPSB7                PORTDbits.CPSB7                /* bit 2 */
#define RD2                  PORTDbits.RD2                  /* bit 2 */
#define CPSA8                PORTDbits.CPSA8                /* bit 3 */
#define RD3                  PORTDbits.RD3                  /* bit 3 */
#define CPSA12               PORTDbits.CPSA12               /* bit 4 */
#define RD4                  PORTDbits.RD4                  /* bit 4 */
#define CPSA13               PORTDbits.CPSA13               /* bit 5 */
#define RD5                  PORTDbits.RD5                  /* bit 5 */
#define CPSA14               PORTDbits.CPSA14               /* bit 6 */
#define RD6                  PORTDbits.RD6                  /* bit 6 */
#define CPSA15               PORTDbits.CPSA15               /* bit 7 */
#define RD7                  PORTDbits.RD7                  /* bit 7 */

#define AN5                  PORTEbits.AN5                  /* bit 0 */
#define CPSA5                PORTEbits.CPSA5                /* bit 0 */
#define RE0                  PORTEbits.RE0                  /* bit 0 */
#define AN6                  PORTEbits.AN6                  /* bit 1 */
#define CPSA6                PORTEbits.CPSA6                /* bit 1 */
#define RE1                  PORTEbits.RE1                  /* bit 1 */
#define AN7                  PORTEbits.AN7                  /* bit 2 */
#define CPSA7                PORTEbits.CPSA7                /* bit 2 */
#define RE2                  PORTEbits.RE2                  /* bit 2 */
#define NOT_MCLR             PORTEbits.NOT_MCLR             /* bit 3 */
#define RE3                  PORTEbits.RE3                  /* bit 3 */

#define RX9D                 RCSTAbits.RX9D                 /* bit 0 */
#define OERR                 RCSTAbits.OERR                 /* bit 1 */
#define FERR                 RCSTAbits.FERR                 /* bit 2 */
#define ADDEN                RCSTAbits.ADDEN                /* bit 3 */
#define CREN                 RCSTAbits.CREN                 /* bit 4 */
#define SREN                 RCSTAbits.SREN                 /* bit 5 */
#define RX9                  RCSTAbits.RX9                  /* bit 6 */
#define SPEN                 RCSTAbits.SPEN                 /* bit 7 */

#define SSPM0                SSPCONbits.SSPM0               /* bit 0 */
#define SSPM1                SSPCONbits.SSPM1               /* bit 1 */
#define SSPM2                SSPCONbits.SSPM2               /* bit 2 */
#define SSPM3                SSPCONbits.SSPM3               /* bit 3 */
#define CKP                  SSPCONbits.CKP                 /* bit 4 */
#define SSPEN                SSPCONbits.SSPEN               /* bit 5 */
#define SSPOV                SSPCONbits.SSPOV               /* bit 6 */
#define WCOL                 SSPCONbits.WCOL                /* bit 7 */

#define BF                   SSPSTATbits.BF                 /* bit 0 */
#define UA                   SSPSTATbits.UA                 /* bit 1 */
#define R_NOT_W              SSPSTATbits.R_NOT_W            /* bit 2 */
#define S                    SSPSTATbits.S                  /* bit 3 */
#define P                    SSPSTATbits.P                  /* bit 4 */
#define D_NOT_A              SSPSTATbits.D_NOT_A            /* bit 5 */
#define CKE                  SSPSTATbits.CKE                /* bit 6 */
#define SMP                  SSPSTATbits.SMP                /* bit 7 */

#define C                    STATUSbits.C                   /* bit 0 */
#define DC                   STATUSbits.DC                  /* bit 1 */
#define Z                    STATUSbits.Z                   /* bit 2 */
#define NOT_PD               STATUSbits.NOT_PD              /* bit 3 */
#define NOT_TO               STATUSbits.NOT_TO              /* bit 4 */
#define RP0                  STATUSbits.RP0                 /* bit 5 */
#define RP1                  STATUSbits.RP1                 /* bit 6 */
#define IRP                  STATUSbits.IRP                 /* bit 7 */

#define TMR1ON               T1CONbits.TMR1ON               /* bit 0 */
#define NOT_T1SYNC           T1CONbits.NOT_T1SYNC           /* bit 2 */
#define T1SYNC               T1CONbits.T1SYNC               /* bit 2 */
#define T1OSCEN              T1CONbits.T1OSCEN              /* bit 3 */
#define T1CKPS0              T1CONbits.T1CKPS0              /* bit 4 */
#define T1CKPS1              T1CONbits.T1CKPS1              /* bit 5 */
#define TMRCS0               T1CONbits.TMRCS0               /* bit 6 */
#define TMRCS1               T1CONbits.TMRCS1               /* bit 7 */

#define T1GSS0               T1GCONbits.T1GSS0              /* bit 0 */
#define T1GSS1               T1GCONbits.T1GSS1              /* bit 1 */
#define T1GVAL               T1GCONbits.T1GVAL              /* bit 2 */
#define T1GGO_NOT_DONE       T1GCONbits.T1GGO_NOT_DONE      /* bit 3 */
#define T1GSPM               T1GCONbits.T1GSPM              /* bit 4 */
#define T1GTM                T1GCONbits.T1GTM               /* bit 5 */
#define T1GPOL               T1GCONbits.T1GPOL              /* bit 6 */
#define TMR1GE               T1GCONbits.TMR1GE              /* bit 7 */

#define T2CKPS0              T2CONbits.T2CKPS0              /* bit 0 */
#define T2CKPS1              T2CONbits.T2CKPS1              /* bit 1 */
#define TMR2ON               T2CONbits.TMR2ON               /* bit 2 */
#define TOUTPS0              T2CONbits.TOUTPS0              /* bit 3 */
#define TOUTPS1              T2CONbits.TOUTPS1              /* bit 4 */
#define TOUTPS2              T2CONbits.TOUTPS2              /* bit 5 */
#define TOUTPS3              T2CONbits.TOUTPS3              /* bit 6 */

#define TMR3ON               T3CONbits.TMR3ON               /* bit 0 */
#define T3SYNC               T3CONbits.T3SYNC               /* bit 2 */
#define T3CKPS0              T3CONbits.T3CKPS0              /* bit 4 */
#define T3CKPS1              T3CONbits.T3CKPS1              /* bit 5 */
#define TMR3CS0              T3CONbits.TMR3CS0              /* bit 6 */
#define TMR3CS1              T3CONbits.TMR3CS1              /* bit 7 */

#define T3GSS0               T3GCONbits.T3GSS0              /* bit 0 */
#define T3GSS1               T3GCONbits.T3GSS1              /* bit 1 */
#define T3GVAL               T3GCONbits.T3GVAL              /* bit 2 */
#define T3GGO_NOT_DONE       T3GCONbits.T3GGO_NOT_DONE      /* bit 3 */
#define T3GSPM               T3GCONbits.T3GSPM              /* bit 4 */
#define T3GTM                T3GCONbits.T3GTM               /* bit 5 */
#define T3GPOL               T3GCONbits.T3GPOL              /* bit 6 */
#define TMR3GE               T3GCONbits.TMR3GE              /* bit 7 */

#define TAPS0                TACONbits.TAPS0                /* bit 0 */
#define TMRAPS0              TACONbits.TMRAPS0              /* bit 0 */
#define TAPS1                TACONbits.TAPS1                /* bit 1 */
#define TMRAPS1              TACONbits.TMRAPS1              /* bit 1 */
#define TAPS2                TACONbits.TAPS2                /* bit 2 */
#define TMRAPS2              TACONbits.TMRAPS2              /* bit 2 */
#define TAPSA                TACONbits.TAPSA                /* bit 3 */
#define TMRAPSA              TACONbits.TMRAPSA              /* bit 3 */
#define TASE                 TACONbits.TASE                 /* bit 4 */
#define TMRASE               TACONbits.TMRASE               /* bit 4 */
#define TACS                 TACONbits.TACS                 /* bit 5 */
#define TMRACS               TACONbits.TMRACS               /* bit 5 */
#define TMRAON               TACONbits.TMRAON               /* bit 7 */

#define TBPS0                TBCONbits.TBPS0                /* bit 0 */
#define TMRBPS0              TBCONbits.TMRBPS0              /* bit 0 */
#define TBPS1                TBCONbits.TBPS1                /* bit 1 */
#define TMRBPS1              TBCONbits.TMRBPS1              /* bit 1 */
#define TBPS2                TBCONbits.TBPS2                /* bit 2 */
#define TMRBPS2              TBCONbits.TMRBPS2              /* bit 2 */
#define TBPSA                TBCONbits.TBPSA                /* bit 3 */
#define TMRBPSA              TBCONbits.TMRBPSA              /* bit 3 */
#define TBSE                 TBCONbits.TBSE                 /* bit 4 */
#define TMRBSE               TBCONbits.TMRBSE               /* bit 4 */
#define TBCS                 TBCONbits.TBCS                 /* bit 5 */
#define TMRBCS               TBCONbits.TMRBCS               /* bit 5 */
#define TMRBON               TBCONbits.TMRBON               /* bit 7 */

#define TRISA0               TRISAbits.TRISA0               /* bit 0 */
#define TRISA1               TRISAbits.TRISA1               /* bit 1 */
#define TRISA2               TRISAbits.TRISA2               /* bit 2 */
#define TRISA3               TRISAbits.TRISA3               /* bit 3 */
#define TRISA4               TRISAbits.TRISA4               /* bit 4 */
#define TRISA5               TRISAbits.TRISA5               /* bit 5 */
#define TRISA6               TRISAbits.TRISA6               /* bit 6 */
#define TRISA7               TRISAbits.TRISA7               /* bit 7 */

#define TRISB0               TRISBbits.TRISB0               /* bit 0 */
#define TRISB1               TRISBbits.TRISB1               /* bit 1 */
#define TRISB2               TRISBbits.TRISB2               /* bit 2 */
#define TRISB3               TRISBbits.TRISB3               /* bit 3 */
#define TRISB4               TRISBbits.TRISB4               /* bit 4 */
#define TRISB5               TRISBbits.TRISB5               /* bit 5 */
#define TRISB6               TRISBbits.TRISB6               /* bit 6 */
#define TRISB7               TRISBbits.TRISB7               /* bit 7 */

#define TRISC0               TRISCbits.TRISC0               /* bit 0 */
#define TRISC1               TRISCbits.TRISC1               /* bit 1 */
#define TRISC2               TRISCbits.TRISC2               /* bit 2 */
#define TRISC3               TRISCbits.TRISC3               /* bit 3 */
#define TRISC4               TRISCbits.TRISC4               /* bit 4 */
#define TRISC5               TRISCbits.TRISC5               /* bit 5 */
#define TRISC6               TRISCbits.TRISC6               /* bit 6 */
#define TRISC7               TRISCbits.TRISC7               /* bit 7 */

#define TRISD0               TRISDbits.TRISD0               /* bit 0 */
#define TRISD1               TRISDbits.TRISD1               /* bit 1 */
#define TRISD2               TRISDbits.TRISD2               /* bit 2 */
#define TRISD3               TRISDbits.TRISD3               /* bit 3 */
#define TRISD4               TRISDbits.TRISD4               /* bit 4 */
#define TRISD5               TRISDbits.TRISD5               /* bit 5 */
#define TRISD6               TRISDbits.TRISD6               /* bit 6 */
#define TRISD7               TRISDbits.TRISD7               /* bit 7 */

#define TRISE0               TRISEbits.TRISE0               /* bit 0 */
#define TRISE1               TRISEbits.TRISE1               /* bit 1 */
#define TRISE2               TRISEbits.TRISE2               /* bit 2 */
#define TRISE3               TRISEbits.TRISE3               /* bit 3 */

#define TX9D                 TXSTAbits.TX9D                 /* bit 0 */
#define TRMT                 TXSTAbits.TRMT                 /* bit 1 */
#define BRGH                 TXSTAbits.BRGH                 /* bit 2 */
#define SYNC                 TXSTAbits.SYNC                 /* bit 4 */
#define TXEN                 TXSTAbits.TXEN                 /* bit 5 */
#define TX9                  TXSTAbits.TX9                  /* bit 6 */
#define CSRC                 TXSTAbits.CSRC                 /* bit 7 */

#define WPUB0                WPUBbits.WPUB0                 /* bit 0 */
#define WPUB1                WPUBbits.WPUB1                 /* bit 1 */
#define WPUB2                WPUBbits.WPUB2                 /* bit 2 */
#define WPUB3                WPUBbits.WPUB3                 /* bit 3 */
#define WPUB4                WPUBbits.WPUB4                 /* bit 4 */
#define WPUB5                WPUBbits.WPUB5                 /* bit 5 */
#define WPUB6                WPUBbits.WPUB6                 /* bit 6 */
#define WPUB7                WPUBbits.WPUB7                 /* bit 7 */
#endif /* NO_BIT_DEFINES */

#ifndef NO_LEGACY_NAMES
#define ADCON0_bits          ADCON0bits
#define ADCON1_bits          ADCON1bits
#define ANSELA_bits          ANSELAbits
#define ANSELB_bits          ANSELBbits
#define ANSELC_bits          ANSELCbits
#define ANSELD_bits          ANSELDbits
#define ANSELE_bits          ANSELEbits
#define APFCON_bits          APFCONbits
#define CCP1CON_bits         CCP1CONbits
#define CCP2CON_bits         CCP2CONbits
#define CPSACON0_bits        CPSACON0bits
#define CPSACON1_bits        CPSACON1bits
#define CPSBCON0_bits        CPSBCON0bits
#define CPSBCON1_bits        CPSBCON1bits
#define DACCON0_bits         DACCON0bits
#define DACCON1_bits         DACCON1bits
#define FVRCON_bits          FVRCONbits
#define INTCON_bits          INTCONbits
#define IOCB_bits            IOCBbits
#define OPTION_REG_bits      OPTION_REGbits
#define OSCCON_bits          OSCCONbits
#define PCON_bits            PCONbits
#define PIE1_bits            PIE1bits
#define PIE2_bits            PIE2bits
#define PIR1_bits            PIR1bits
#define PIR2_bits            PIR2bits
#define PMCON1_bits          PMCON1bits
#define PORTA_bits           PORTAbits
#define PORTB_bits           PORTBbits
#define PORTC_bits           PORTCbits
#define PORTD_bits           PORTDbits
#define PORTE_bits           PORTEbits
#define RCSTA_bits           RCSTAbits
#define SSPCON_bits          SSPCONbits
#define SSPSTAT_bits         SSPSTATbits
#define STATUS_bits          STATUSbits
#define T1CON_bits           T1CONbits
#define T1GCON_bits          T1GCONbits
#define T2CON_bits           T2CONbits
#define T3CON_bits           T3CONbits
#define T3GCON_bits          T3GCONbits
#define TACON_bits           TACONbits
#define TBCON_bits           TBCONbits
#define TRISA_bits           TRISAbits
#define TRISB_bits           TRISBbits
#define TRISC_bits           TRISCbits
#define TRISD_bits           TRISDbits
#define TRISE_bits           TRISEbits
#define TXSTA_bits           TXSTAbits
#define WPUB_bits            WPUBbits
#endif /* NO_LEGACY_NAMES */

#endif
