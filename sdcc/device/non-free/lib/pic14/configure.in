#
# configure.in - input script to autoconf to
#                configure directory
#
# This file is part of the GNU PIC Library.
#
# Originally written by
# 	Vangelis Rokas <vrokas@otenet.gr>
#
# Adopted for the SDCC/pic14 library by
#	Raphael Neider <rneider AT web.de>
#
# $Id$
#

# Process this file with autoconf to produce a configure script.
AC_PREREQ(2.60)
AC_INIT

AC_DEFUN([AC_CONFIG_SRCDIR])
#AC_DEFUN(AC_CONFIG_FILES)

# Checks for programs.
AC_CHECK_PROG(GPASM,	gpasm,	gpasm, :)
AC_CHECK_PROG(GPLINK,	gplink,	gplink, :)
AC_CHECK_PROG(GPLIB,	gplib,	gplib, :)

AC_CHECK_PROG(RM,	rm,	[rm -f], :)
AC_CHECK_PROG(CP,	cp,	cp, :)
AC_CHECK_PROG(MV,	mv,	mv, :)
AC_CHECK_PROG(LS,	ls,	ls, :)
AC_CHECK_PROG(SED,	sed,	sed, :)
AC_PROG_EGREP
AC_CHECK_PROG(MKDIR,	mkdir,	[mkdir -p], :)
AC_CHECK_PROG(RMDIR,	rmdir,	rmdir, :)

case ":$GPASM:$GPLINK:$GPLIB" in
    *:::*)
        AC_MSG_ERROR([gputils (gpasm, gplink, and gplib) are required but not found.
Either install gputils or reconfigure with --disable-pic14-port and --disable-pic16-port.])
        ;;
esac;

AC_PROG_MAKE_SET

NEWPICS=no;
AC_ARG_ENABLE(
    [new-pics],
    AS_HELP_STRING([--enable-new-pics], [Enable use of PIC devices added to gputils after the 0.13.7 release. Requires custom-built gputils obtained from their SVN repository!]),
    [ case "x$enableval" in
      xyes) NEWPICS=yes;
            AC_MSG_NOTICE([Enabling support for PICs from unreleased gputils -- make sure you have up-to-date gputils from SVN.]);;
      xno) NEWPICS=no;;
      *) AC_MSG_ERROR([bad value "${enableval}" for --enable-new-pics]);;
      esac],
    [ NEWPICS=no ]
)

# Substitute HAVE_NEW_PICS with 'yes' to include new PICs.
AC_SUBST(HAVE_NEW_PICS, $NEWPICS)

## More or less the same using Automake:
# AM_CONDITIONAL([HAVE_NEW_PICS], [ test x$NEWPICS = xyes ])

mCCAS=$GPASM;
AC_MSG_CHECKING([devices supported by gputils])
good_pics="";
bad_pics="";
CHECK=".checkdevices/check.asm";
mkdir -p ".checkdevices";
echo "  END" > "$CHECK";
for i in "${srcdir}/libdev/pic1"*.c; do
  p="${i##*pic}";
  p="${p%.c}";
  if $mCCAS -p "$p" "$CHECK" >/dev/null 2>&1; then
    good_pics="$good_pics $p";
  else
    bad_pics="$bad_pics $p";
  fi;
done;
AC_MSG_RESULT([[$good_pics]])
if test -n "$bad_pics"; then
  AC_MSG_WARN([[
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!
!!! WARNING: The installed gputils do not support all
!!! PIC devices currently supported by SDCC.
!!! If you continue to build SDCC, library files for the
!!! following devices will not be built, and you will
!!! not be able to compile any projects for these devices:
!!!

$bad_pics

!!!
!!! Please update your gputils to a recent snapshot and
!!! run configure again using the updated gputils. Make
!!! sure to have them in PATH prior to the previously
!!! found ones (or remove the older version completely).
!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

]])
  for d in 5 4 3 2 1; do
    echo "Continuing in $d seconds ...";
    sleep 1;
  done;
fi;

# Checks for libraries.

# Checks for header files.

# Checks for typedefs, structures, and compiler characteristics.

# Checks for library functions.

AC_CONFIG_FILES([Makefile
                 Makefile.common
                 libdev/Makefile])
AC_OUTPUT
