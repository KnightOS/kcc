# libc/z80 Makefile

VPATH  = @srcdir@
srcdir = @srcdir@
top_builddir = @top_builddir@

LIB_TYPE     = @LIB_TYPE@

TOPDIR = ../../..

SCC = $(TOPDIR)/bin/sdcc -mz80
SAS = $(TOPDIR)/bin/as-z80

PORTDIR = ../build/z80

OBJ = div.o divsigned.o mod.o mul.o mulchar.o putchar.o shift.o stubs.o crt0_rle.o heap.o fstubs.o memmove.o strlen.o

LIB = z80.lib
CC = $(SCC)
AS = $(SAS)
ASFLAGS = -plosgff

CFLAGS = -I$(srcdir)/../../include -I. --std-c89

all: $(PORTDIR)/$(LIB) $(PORTDIR)/crt0.o

$(PORTDIR)/crt0.o: crt0.o
	cp crt0.o $(PORTDIR)/crt0.o

$(PORTDIR)/$(LIB): $(OBJ) Makefile _dummy
ifeq ($(LIB_TYPE), SDCCLIB)
	rm -f $@; \
	../../../bin/sdcclib -a $@ $(OBJ)
else ifeq ($(LIB_TYPE), AR)
	ar -Scq $@ $(OBJ)
else ifeq ($(LIB_TYPE), RANLIB)
	ar -Scq $@ $(OBJ)
	$(top_builddir)/bin/asranlib $@
else
	rm -f $@; \
	for i in $(basename $(OBJ)); do echo $$i >>$@; done
	cp $(OBJ) $(PORTDIR)
endif

.c.o:
	$(CC) $(CFLAGS) -c $<

.s.o:
	$(AS) $(ASFLAGS) $@ $<

_dummy:

clean:
	rm -f *.o *.sym *.lst *~ $(CLEANSPEC) *.dump* *.asm *.lib

distclean: clean
	rm -f Makefile
