                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.1.9Ga Sun Jan 16 17:31:34 2000
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module _strncpy
                              7 ;--------------------------------------------------------
                              8 ; publics variables in this module
                              9 ;--------------------------------------------------------
                             10 	.globl _strncpy_PARM_3
                             11 	.globl _strncpy_PARM_2
                             12 	.globl _strncpy
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ; special function bits 
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; internal ram data
                             21 ;--------------------------------------------------------
                             22 	.area	DSEG    (DATA)
   0000                      23 _strncpy_sloc0_1_0:
   0000                      24 	.ds	0x0003
   0003                      25 _strncpy_sloc1_1_0:
   0003                      26 	.ds	0x0003
                             27 ;--------------------------------------------------------
                             28 ; overlayable items in internal ram 
                             29 ;--------------------------------------------------------
                             30 	.area	OSEG	(OVR,DATA)
                             31 ;--------------------------------------------------------
                             32 ; indirectly addressable internal ram data
                             33 ;--------------------------------------------------------
                             34 	.area	ISEG    (DATA)
                             35 ;--------------------------------------------------------
                             36 ; bit data
                             37 ;--------------------------------------------------------
                             38 	.area	BSEG    (BIT)
                             39 ;--------------------------------------------------------
                             40 ; external ram data
                             41 ;--------------------------------------------------------
                             42 	.area	XSEG    (XDATA)
   0000                      43 _strncpy_PARM_2:
   0000                      44 	.ds	0x0003
   0003                      45 _strncpy_PARM_3:
   0003                      46 	.ds	0x0002
   0005                      47 _strncpy_d_1_1:
   0005                      48 	.ds	0x0003
                             49 ;--------------------------------------------------------
                             50 ; global & static initialisations
                             51 ;--------------------------------------------------------
                             52 	.area GSINIT (CODE)
                             53 ;--------------------------------------------------------
                             54 ; code
                             55 ;--------------------------------------------------------
                             56 	.area CSEG (CODE)
                    0000     57 	G$strncpy$0$0 ==.
                             58 ;	_strncpy.c 27
                             59 ;	-----------------------------------------
                             60 ;	 function strncpy
                             61 ;	-----------------------------------------
   0000                      62 _strncpy:
                    0002     63 	ar2 = 0x02
                    0003     64 	ar3 = 0x03
                    0004     65 	ar4 = 0x04
                    0005     66 	ar5 = 0x05
                    0006     67 	ar6 = 0x06
                    0007     68 	ar7 = 0x07
                    0000     69 	ar0 = 0x00
                    0001     70 	ar1 = 0x01
                             71 ;	_strncpy.c 36
   0000 C0 F0                72 	push	b
   0002 C0 83                73 	push	dph
   0004 C0 82                74 	push	dpl
   0006 90s00r05             75 	mov	dptr,#_strncpy_d_1_1
   0009 D0 E0                76 	pop	acc
   000B F0                   77 	movx	@dptr,a
   000C D0 E0                78 	pop	acc
   000E A3                   79 	inc	dptr
   000F F0                   80 	movx	@dptr,a
   0010 D0 E0                81 	pop	acc
   0012 A3                   82 	inc	dptr
   0013 F0                   83 	movx	@dptr,a
                             84 ;	_strncpy.c 32
   0014 90s00r05             85 	mov	dptr,#_strncpy_d_1_1
   0017 E0                   86 	movx	a,@dptr
   0018 F5*00                87 	mov	_strncpy_sloc0_1_0,a
   001A A3                   88 	inc	dptr
   001B E0                   89 	movx	a,@dptr
   001C F5*01                90 	mov	(_strncpy_sloc0_1_0 + 1),a
   001E A3                   91 	inc	dptr
   001F E0                   92 	movx	a,@dptr
   0020 F5*02                93 	mov	(_strncpy_sloc0_1_0 + 2),a
                             94 ;	_strncpy.c 34
   0022 AD*00                95 	mov	r5,_strncpy_sloc0_1_0
   0024 AE*01                96 	mov	r6,(_strncpy_sloc0_1_0 + 1)
   0026 AF*02                97 	mov	r7,(_strncpy_sloc0_1_0 + 2)
   0028 90s00r00             98 	mov	dptr,#_strncpy_PARM_2
   002B E0                   99 	movx	a,@dptr
   002C F5*03               100 	mov	_strncpy_sloc1_1_0,a
   002E A3                  101 	inc	dptr
   002F E0                  102 	movx	a,@dptr
   0030 F5*04               103 	mov	(_strncpy_sloc1_1_0 + 1),a
   0032 A3                  104 	inc	dptr
   0033 E0                  105 	movx	a,@dptr
   0034 F5*05               106 	mov	(_strncpy_sloc1_1_0 + 2),a
   0036 90s00r03            107 	mov	dptr,#_strncpy_PARM_3
   0039 E0                  108 	movx	a,@dptr
   003A FB                  109 	mov	r3,a
   003B A3                  110 	inc	dptr
   003C E0                  111 	movx	a,@dptr
   003D FC                  112 	mov	r4,a
   003E                     113 00101$:
   003E 8B 02               114 	mov	ar2,r3
   0040 8C 00               115 	mov	ar0,r4
   0042 1B                  116 	dec	r3
   0043 BB FF 01            117 	cjne	r3,#0xff,00108$
   0046 1C                  118 	dec	r4
   0047                     119 00108$:
   0047 90s00r05            120 	mov	dptr,#_strncpy_d_1_1
   004A ED                  121 	mov	a,r5
   004B F0                  122 	movx	@dptr,a
   004C A3                  123 	inc	dptr
   004D EE                  124 	mov	a,r6
   004E F0                  125 	movx	@dptr,a
   004F A3                  126 	inc	dptr
   0050 EF                  127 	mov	a,r7
   0051 F0                  128 	movx	@dptr,a
   0052 EA                  129 	mov	a,r2
   0053 48                  130 	orl	a,r0
                            131 ; Peephole 110   removed ljmp by inverse jump logic
   0054 60 33               132 	jz  00103$
   0056                     133 00109$:
                            134 ;	_strncpy.c 35
   0056 C0 03               135 	push	ar3
   0058 C0 04               136 	push	ar4
   005A 8D 02               137 	mov	ar2,r5
   005C 8E 00               138 	mov	ar0,r6
   005E 8F 01               139 	mov	ar1,r7
   0060 0D                  140 	inc	r5
   0061 BD 00 01            141 	cjne	r5,#0x00,00110$
   0064 0E                  142 	inc	r6
   0065                     143 00110$:
   0065 85*03 82            144 	mov	dpl,_strncpy_sloc1_1_0
   0068 85*04 83            145 	mov	dph,(_strncpy_sloc1_1_0 + 1)
   006B 85*05 F0            146 	mov	b,(_strncpy_sloc1_1_0 + 2)
   006E 05*03               147 	inc	_strncpy_sloc1_1_0
   0070 E4                  148 	clr	a
   0071 B5*03 02            149 	cjne	a,_strncpy_sloc1_1_0,00111$
   0074 05*04               150 	inc	(_strncpy_sloc1_1_0 + 1)
   0076                     151 00111$:
   0076 12s00r00            152 	lcall	__gptrget
                            153 ; Peephole 191   removed redundant mov
   0079 FB                  154 	mov  r3,a
   007A 8A 82               155 	mov  dpl,r2
   007C 88 83               156 	mov  dph,r0
   007E 89 F0               157 	mov  b,r1
   0080 12s00r00            158 	lcall	__gptrput
   0083 D0 04               159 	pop	ar4
   0085 D0 03               160 	pop	ar3
                            161 ; Peephole 132   changed ljmp to sjmp
   0087 80 B5               162 	sjmp 00101$
   0089                     163 00103$:
                            164 ;	_strncpy.c 36
   0089 85*00 82            165 	mov	dpl,_strncpy_sloc0_1_0
   008C 85*01 83            166 	mov	dph,(_strncpy_sloc0_1_0 + 1)
   008F 85*02 F0            167 	mov	b,(_strncpy_sloc0_1_0 + 2)
   0092                     168 00104$:
                    0092    169 	C$_strncpy.c$37$1$1 ==.
                    0092    170 	XG$strncpy$0$0 ==.
   0092 22                  171 	ret
                            172 	.area	CSEG    (CODE)
