                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.1.9Ga Sun Jan 16 17:31:34 2000
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module _strpbrk
                              7 ;--------------------------------------------------------
                              8 ; publics variables in this module
                              9 ;--------------------------------------------------------
                             10 	.globl _strpbrk_PARM_2
                             11 	.globl _strpbrk
                             12 ;--------------------------------------------------------
                             13 ; special function registers
                             14 ;--------------------------------------------------------
                             15 ;--------------------------------------------------------
                             16 ; special function bits 
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; internal ram data
                             20 ;--------------------------------------------------------
                             21 	.area	DSEG    (DATA)
   0000                      22 _strpbrk_sloc0_1_0:
   0000                      23 	.ds	0x0003
                             24 ;--------------------------------------------------------
                             25 ; overlayable items in internal ram 
                             26 ;--------------------------------------------------------
                             27 	.area	OSEG	(OVR,DATA)
                             28 ;--------------------------------------------------------
                             29 ; indirectly addressable internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area	ISEG    (DATA)
                             32 ;--------------------------------------------------------
                             33 ; bit data
                             34 ;--------------------------------------------------------
                             35 	.area	BSEG    (BIT)
                             36 ;--------------------------------------------------------
                             37 ; external ram data
                             38 ;--------------------------------------------------------
                             39 	.area	XSEG    (XDATA)
   0000                      40 _strpbrk_PARM_2:
   0000                      41 	.ds	0x0003
   0003                      42 _strpbrk_string_1_1:
   0003                      43 	.ds	0x0003
                             44 ;--------------------------------------------------------
                             45 ; global & static initialisations
                             46 ;--------------------------------------------------------
                             47 	.area GSINIT (CODE)
                             48 ;--------------------------------------------------------
                             49 ; code
                             50 ;--------------------------------------------------------
                             51 	.area CSEG (CODE)
                    0000     52 	G$strpbrk$0$0 ==.
                             53 ;	_strpbrk.c 27
                             54 ;	-----------------------------------------
                             55 ;	 function strpbrk
                             56 ;	-----------------------------------------
   0000                      57 _strpbrk:
                    0002     58 	ar2 = 0x02
                    0003     59 	ar3 = 0x03
                    0004     60 	ar4 = 0x04
                    0005     61 	ar5 = 0x05
                    0006     62 	ar6 = 0x06
                    0007     63 	ar7 = 0x07
                    0000     64 	ar0 = 0x00
                    0001     65 	ar1 = 0x01
                             66 ;	_strpbrk.c 0
   0000 C0 F0                67 	push	b
   0002 C0 83                68 	push	dph
   0004 C0 82                69 	push	dpl
   0006 90s00r03             70 	mov	dptr,#_strpbrk_string_1_1
   0009 D0 E0                71 	pop	acc
   000B F0                   72 	movx	@dptr,a
   000C D0 E0                73 	pop	acc
   000E A3                   74 	inc	dptr
   000F F0                   75 	movx	@dptr,a
   0010 D0 E0                76 	pop	acc
   0012 A3                   77 	inc	dptr
   0013 F0                   78 	movx	@dptr,a
                             79 ;	_strpbrk.c 34
   0014 90s00r00             80 	mov	dptr,#_strpbrk_PARM_2
   0017 E0                   81 	movx	a,@dptr
   0018 F5*00                82 	mov	_strpbrk_sloc0_1_0,a
   001A A3                   83 	inc	dptr
   001B E0                   84 	movx	a,@dptr
   001C F5*01                85 	mov	(_strpbrk_sloc0_1_0 + 1),a
   001E A3                   86 	inc	dptr
   001F E0                   87 	movx	a,@dptr
   0020 F5*02                88 	mov	(_strpbrk_sloc0_1_0 + 2),a
   0022 90s00r03             89 	mov	dptr,#_strpbrk_string_1_1
   0025 E0                   90 	movx	a,@dptr
   0026 FD                   91 	mov	r5,a
   0027 A3                   92 	inc	dptr
   0028 E0                   93 	movx	a,@dptr
   0029 FE                   94 	mov	r6,a
   002A A3                   95 	inc	dptr
   002B E0                   96 	movx	a,@dptr
   002C FF                   97 	mov	r7,a
   002D                      98 00103$:
   002D 8D 82                99 	mov	dpl,r5
   002F 8E 83               100 	mov	dph,r6
   0031 8F F0               101 	mov	b,r7
   0033 12s00r00            102 	lcall	__gptrget
                            103 ; Peephole 105   removed redundant mov
   0036 F8                  104 	mov  r0,a
                            105 ; Peephole 110   removed ljmp by inverse jump logic
   0037 60 30               106 	jz  00105$
   0039                     107 00111$:
                            108 ;	_strpbrk.c 35
   0039 90s00r00            109 	mov	dptr,#_strchr_PARM_2
   003C E8                  110 	mov	a,r0
   003D F0                  111 	movx	@dptr,a
   003E C0 05               112 	push	ar5
   0040 C0 06               113 	push	ar6
   0042 C0 07               114 	push	ar7
   0044 85*00 82            115 	mov	dpl,_strpbrk_sloc0_1_0
   0047 85*01 83            116 	mov	dph,(_strpbrk_sloc0_1_0 + 1)
   004A 85*02 F0            117 	mov	b,(_strpbrk_sloc0_1_0 + 2)
   004D 12s00r00            118 	lcall	_strchr
   0050 A8 82               119 	mov	r0,dpl
   0052 A9 83               120 	mov	r1,dph
   0054 AA F0               121 	mov	r2,b
   0056 D0 07               122 	pop	ar7
   0058 D0 06               123 	pop	ar6
   005A D0 05               124 	pop	ar5
   005C E8                  125 	mov	a,r0
   005D 49                  126 	orl	a,r1
   005E 4A                  127 	orl	a,r2
                            128 ; Peephole 110   removed ljmp by inverse jump logic
   005F 60 CC               129 	jz  00103$
   0061                     130 00112$:
                            131 ;	_strpbrk.c 36
   0061 8D 82               132 	mov	dpl,r5
   0063 8E 83               133 	mov	dph,r6
   0065 8F F0               134 	mov	b,r7
                            135 ; Peephole 132   changed ljmp to sjmp
   0067 80 06               136 	sjmp 00106$
   0069                     137 00105$:
                            138 ;	_strpbrk.c 39
                            139 ; Peephole 181   used 16 bit load of dptr
   0069 90 00 00            140 	mov  dptr,#0x0000
   006C 75 F0 00            141 	mov	b,#0x00
   006F                     142 00106$:
                    006F    143 	C$_strpbrk.c$40$1$1 ==.
                    006F    144 	XG$strpbrk$0$0 ==.
   006F 22                  145 	ret
                            146 	.area	CSEG    (CODE)
