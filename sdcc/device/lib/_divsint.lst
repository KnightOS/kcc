                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.1.9Ga Sun Jan 16 17:31:23 2000
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module _divsint
                              7 ;--------------------------------------------------------
                              8 ; publics variables in this module
                              9 ;--------------------------------------------------------
                             10 	.globl __divsint_PARM_2
                             11 	.globl __divsint
                             12 ;--------------------------------------------------------
                             13 ; special function registers
                             14 ;--------------------------------------------------------
                             15 ;--------------------------------------------------------
                             16 ; special function bits 
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; internal ram data
                             20 ;--------------------------------------------------------
                             21 	.area	DSEG    (DATA)
                             22 ;--------------------------------------------------------
                             23 ; overlayable items in internal ram 
                             24 ;--------------------------------------------------------
                             25 	.area	OSEG	(OVR,DATA)
                             26 ;--------------------------------------------------------
                             27 ; indirectly addressable internal ram data
                             28 ;--------------------------------------------------------
                             29 	.area	ISEG    (DATA)
                             30 ;--------------------------------------------------------
                             31 ; bit data
                             32 ;--------------------------------------------------------
                             33 	.area	BSEG    (BIT)
                             34 ;--------------------------------------------------------
                             35 ; external ram data
                             36 ;--------------------------------------------------------
                             37 	.area	XSEG    (XDATA)
   0000                      38 __divsint_PARM_2:
   0000                      39 	.ds	0x0002
   0002                      40 __divsint_a_1_1:
   0002                      41 	.ds	0x0002
                             42 ;--------------------------------------------------------
                             43 ; global & static initialisations
                             44 ;--------------------------------------------------------
                             45 	.area GSINIT (CODE)
                             46 ;--------------------------------------------------------
                             47 ; code
                             48 ;--------------------------------------------------------
                             49 	.area CSEG (CODE)
                    0000     50 	G$_divsint$0$0 ==.
                             51 ;	_divsint.c 26
                             52 ;	-----------------------------------------
                             53 ;	 function _divsint
                             54 ;	-----------------------------------------
   0000                      55 __divsint:
   0000 C2 AF                56 	clr	ea
                    0002     57 	ar2 = 0x02
                    0003     58 	ar3 = 0x03
                    0004     59 	ar4 = 0x04
                    0005     60 	ar5 = 0x05
                    0006     61 	ar6 = 0x06
                    0007     62 	ar7 = 0x07
                    0000     63 	ar0 = 0x00
                    0001     64 	ar1 = 0x01
                             65 ;	_divsint.c 0
   0002 C0 83                66 	push	dph
   0004 C0 82                67 	push	dpl
   0006 90s00r02             68 	mov	dptr,#__divsint_a_1_1
   0009 D0 E0                69 	pop	acc
   000B F0                   70 	movx	@dptr,a
   000C D0 E0                71 	pop	acc
   000E A3                   72 	inc	dptr
   000F F0                   73 	movx	@dptr,a
                             74 ;	_divsint.c 33
   0010 90s00r02             75 	mov	dptr,#__divsint_a_1_1
   0013 E0                   76 	movx	a,@dptr
   0014 FA                   77 	mov	r2,a
   0015 A3                   78 	inc	dptr
   0016 E0                   79 	movx	a,@dptr
                             80 ; Peephole 105   removed redundant mov
   0017 FB                   81 	mov  r3,a
                             82 ; Peephole 111   removed ljmp by inverse jump logic
   0018 30 E7 09             83 	jnb  acc.7,00106$
   001B                      84 00113$:
   001B C3                   85 	clr	c
   001C E4                   86 	clr	a
   001D 9A                   87 	subb	a,r2
   001E FC                   88 	mov	r4,a
   001F E4                   89 	clr	a
   0020 9B                   90 	subb	a,r3
   0021 FD                   91 	mov	r5,a
                             92 ; Peephole 132   changed ljmp to sjmp
   0022 80 04                93 	sjmp 00107$
   0024                      94 00106$:
   0024 8A 04                95 	mov	ar4,r2
   0026 8B 05                96 	mov	ar5,r3
   0028                      97 00107$:
   0028 8C 02                98 	mov	ar2,r4
   002A 8D 03                99 	mov	ar3,r5
                            100 ;	_divsint.c 34
   002C 90s00r00            101 	mov	dptr,#__divsint_PARM_2
   002F E0                  102 	movx	a,@dptr
   0030 FC                  103 	mov	r4,a
   0031 A3                  104 	inc	dptr
   0032 E0                  105 	movx	a,@dptr
                            106 ; Peephole 105   removed redundant mov
   0033 FD                  107 	mov  r5,a
   0034 33                  108 	rlc	a
   0035 E4                  109 	clr	a
   0036 33                  110 	rlc	a
                            111 ; Peephole 105   removed redundant mov
   0037 FE                  112 	mov  r6,a
                            113 ; Peephole 110   removed ljmp by inverse jump logic
   0038 60 09               114 	jz  00108$
   003A                     115 00114$:
   003A C3                  116 	clr	c
   003B E4                  117 	clr	a
   003C 9C                  118 	subb	a,r4
   003D FF                  119 	mov	r7,a
   003E E4                  120 	clr	a
   003F 9D                  121 	subb	a,r5
   0040 F8                  122 	mov	r0,a
                            123 ; Peephole 132   changed ljmp to sjmp
   0041 80 04               124 	sjmp 00109$
   0043                     125 00108$:
   0043 8C 07               126 	mov	ar7,r4
   0045 8D 00               127 	mov	ar0,r5
   0047                     128 00109$:
   0047 90s00r00            129 	mov	dptr,#__divuint_PARM_2
   004A EF                  130 	mov	a,r7
   004B F0                  131 	movx	@dptr,a
   004C A3                  132 	inc	dptr
   004D E8                  133 	mov	a,r0
   004E F0                  134 	movx	@dptr,a
   004F C0 06               135 	push	ar6
   0051 8A 82               136 	mov	dpl,r2
   0053 8B 83               137 	mov	dph,r3
   0055 12s00r00            138 	lcall	__divuint
   0058 AA 82               139 	mov	r2,dpl
   005A AB 83               140 	mov	r3,dph
   005C D0 06               141 	pop	ar6
                            142 ;	_divsint.c 35
   005E 90s00r02            143 	mov	dptr,#__divsint_a_1_1
   0061 E0                  144 	movx	a,@dptr
   0062 FC                  145 	mov	r4,a
   0063 A3                  146 	inc	dptr
   0064 E0                  147 	movx	a,@dptr
                            148 ; Peephole 105   removed redundant mov
   0065 FD                  149 	mov  r5,a
   0066 33                  150 	rlc	a
   0067 E4                  151 	clr	a
   0068 33                  152 	rlc	a
   0069 FC                  153 	mov	r4,a
   006A EE                  154 	mov	a,r6
   006B 65 04               155 	xrl	a,ar4
                            156 ; Peephole 110   removed ljmp by inverse jump logic
   006D 60 0D               157 	jz  00102$
   006F                     158 00115$:
                            159 ;	_divsint.c 37
   006F C3                  160 	clr	c
   0070 E4                  161 	clr	a
   0071 9A                  162 	subb	a,r2
   0072 FC                  163 	mov	r4,a
   0073 E4                  164 	clr	a
   0074 9B                  165 	subb	a,r3
   0075 FE                  166 	mov	r6,a
   0076 8C 82               167 	mov	dpl,r4
   0078 8E 83               168 	mov	dph,r6
                            169 ; Peephole 132   changed ljmp to sjmp
   007A 80 04               170 	sjmp 00104$
   007C                     171 00102$:
                            172 ;	_divsint.c 41
   007C 8A 82               173 	mov	dpl,r2
   007E 8B 83               174 	mov	dph,r3
   0080                     175 00104$:
   0080 D2 AF               176 	setb	ea
                    0082    177 	C$_divsint.c$43$1$1 ==.
                    0082    178 	XG$_divsint$0$0 ==.
   0082 22                  179 	ret
                            180 	.area	CSEG    (CODE)
