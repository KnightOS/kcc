                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.1.9Ga Sun Jan 16 17:31:30 2000
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module _memcpy
                              7 ;--------------------------------------------------------
                              8 ; publics variables in this module
                              9 ;--------------------------------------------------------
                             10 	.globl _memcpy_PARM_3
                             11 	.globl _memcpy_PARM_2
                             12 	.globl _memcpy
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ; special function bits 
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; internal ram data
                             21 ;--------------------------------------------------------
                             22 	.area	DSEG    (DATA)
   0000                      23 _memcpy_sloc0_1_0:
   0000                      24 	.ds	0x0003
   0003                      25 _memcpy_sloc1_1_0:
   0003                      26 	.ds	0x0003
                             27 ;--------------------------------------------------------
                             28 ; overlayable items in internal ram 
                             29 ;--------------------------------------------------------
                             30 	.area	OSEG	(OVR,DATA)
                             31 ;--------------------------------------------------------
                             32 ; indirectly addressable internal ram data
                             33 ;--------------------------------------------------------
                             34 	.area	ISEG    (DATA)
                             35 ;--------------------------------------------------------
                             36 ; bit data
                             37 ;--------------------------------------------------------
                             38 	.area	BSEG    (BIT)
                             39 ;--------------------------------------------------------
                             40 ; external ram data
                             41 ;--------------------------------------------------------
                             42 	.area	XSEG    (XDATA)
   0000                      43 _memcpy_PARM_2:
   0000                      44 	.ds	0x0003
   0003                      45 _memcpy_PARM_3:
   0003                      46 	.ds	0x0002
   0005                      47 _memcpy_dst_1_1:
   0005                      48 	.ds	0x0003
                             49 ;--------------------------------------------------------
                             50 ; global & static initialisations
                             51 ;--------------------------------------------------------
                             52 	.area GSINIT (CODE)
                             53 ;--------------------------------------------------------
                             54 ; code
                             55 ;--------------------------------------------------------
                             56 	.area CSEG (CODE)
                    0000     57 	G$memcpy$0$0 ==.
                             58 ;	_memcpy.c 27
                             59 ;	-----------------------------------------
                             60 ;	 function memcpy
                             61 ;	-----------------------------------------
   0000                      62 _memcpy:
                    0002     63 	ar2 = 0x02
                    0003     64 	ar3 = 0x03
                    0004     65 	ar4 = 0x04
                    0005     66 	ar5 = 0x05
                    0006     67 	ar6 = 0x06
                    0007     68 	ar7 = 0x07
                    0000     69 	ar0 = 0x00
                    0001     70 	ar1 = 0x01
                             71 ;	_memcpy.c 44
   0000 C0 F0                72 	push	b
   0002 C0 83                73 	push	dph
   0004 C0 82                74 	push	dpl
   0006 90s00r05             75 	mov	dptr,#_memcpy_dst_1_1
   0009 D0 E0                76 	pop	acc
   000B F0                   77 	movx	@dptr,a
   000C D0 E0                78 	pop	acc
   000E A3                   79 	inc	dptr
   000F F0                   80 	movx	@dptr,a
   0010 D0 E0                81 	pop	acc
   0012 A3                   82 	inc	dptr
   0013 F0                   83 	movx	@dptr,a
                             84 ;	_memcpy.c 33
   0014 90s00r05             85 	mov	dptr,#_memcpy_dst_1_1
   0017 E0                   86 	movx	a,@dptr
   0018 F5*03                87 	mov	_memcpy_sloc1_1_0,a
   001A A3                   88 	inc	dptr
   001B E0                   89 	movx	a,@dptr
   001C F5*04                90 	mov	(_memcpy_sloc1_1_0 + 1),a
   001E A3                   91 	inc	dptr
   001F E0                   92 	movx	a,@dptr
   0020 F5*05                93 	mov	(_memcpy_sloc1_1_0 + 2),a
                             94 ;	_memcpy.c 35
   0022 90s00r00             95 	mov	dptr,#_memcpy_PARM_2
   0025 E0                   96 	movx	a,@dptr
   0026 F5*00                97 	mov	_memcpy_sloc0_1_0,a
   0028 A3                   98 	inc	dptr
   0029 E0                   99 	movx	a,@dptr
   002A F5*01               100 	mov	(_memcpy_sloc0_1_0 + 1),a
   002C A3                  101 	inc	dptr
   002D E0                  102 	movx	a,@dptr
   002E F5*02               103 	mov	(_memcpy_sloc0_1_0 + 2),a
                            104 ;	_memcpy.c 40
   0030 A8*03               105 	mov	r0,_memcpy_sloc1_1_0
   0032 A9*04               106 	mov	r1,(_memcpy_sloc1_1_0 + 1)
   0034 AD*05               107 	mov	r5,(_memcpy_sloc1_1_0 + 2)
   0036 90s00r03            108 	mov	dptr,#_memcpy_PARM_3
   0039 E0                  109 	movx	a,@dptr
   003A FB                  110 	mov	r3,a
   003B A3                  111 	inc	dptr
   003C E0                  112 	movx	a,@dptr
   003D FC                  113 	mov	r4,a
   003E                     114 00101$:
   003E 8B 02               115 	mov	ar2,r3
   0040 8C 06               116 	mov	ar6,r4
   0042 1B                  117 	dec	r3
   0043 BB FF 01            118 	cjne	r3,#0xff,00108$
   0046 1C                  119 	dec	r4
   0047                     120 00108$:
   0047 EA                  121 	mov	a,r2
   0048 4E                  122 	orl	a,r6
                            123 ; Peephole 110   removed ljmp by inverse jump logic
   0049 60 33               124 	jz  00103$
   004B                     125 00109$:
                            126 ;	_memcpy.c 41
   004B C0 03               127 	push	ar3
   004D C0 04               128 	push	ar4
   004F 88 02               129 	mov	ar2,r0
   0051 89 06               130 	mov	ar6,r1
   0053 8D 07               131 	mov	ar7,r5
   0055 08                  132 	inc	r0
   0056 B8 00 01            133 	cjne	r0,#0x00,00110$
   0059 09                  134 	inc	r1
   005A                     135 00110$:
   005A 85*00 82            136 	mov	dpl,_memcpy_sloc0_1_0
   005D 85*01 83            137 	mov	dph,(_memcpy_sloc0_1_0 + 1)
   0060 85*02 F0            138 	mov	b,(_memcpy_sloc0_1_0 + 2)
   0063 05*00               139 	inc	_memcpy_sloc0_1_0
   0065 E4                  140 	clr	a
   0066 B5*00 02            141 	cjne	a,_memcpy_sloc0_1_0,00111$
   0069 05*01               142 	inc	(_memcpy_sloc0_1_0 + 1)
   006B                     143 00111$:
   006B 12s00r00            144 	lcall	__gptrget
                            145 ; Peephole 191   removed redundant mov
   006E FB                  146 	mov  r3,a
   006F 8A 82               147 	mov  dpl,r2
   0071 8E 83               148 	mov  dph,r6
   0073 8F F0               149 	mov  b,r7
   0075 12s00r00            150 	lcall	__gptrput
   0078 D0 04               151 	pop	ar4
   007A D0 03               152 	pop	ar3
                            153 ; Peephole 132   changed ljmp to sjmp
   007C 80 C0               154 	sjmp 00101$
   007E                     155 00103$:
                            156 ;	_memcpy.c 44
   007E 85*03 82            157 	mov	dpl,_memcpy_sloc1_1_0
   0081 85*04 83            158 	mov	dph,(_memcpy_sloc1_1_0 + 1)
   0084 85*05 F0            159 	mov	b,(_memcpy_sloc1_1_0 + 2)
   0087                     160 00104$:
                    0087    161 	C$_memcpy.c$45$1$1 ==.
                    0087    162 	XG$memcpy$0$0 ==.
   0087 22                  163 	ret
                            164 	.area	CSEG    (CODE)
